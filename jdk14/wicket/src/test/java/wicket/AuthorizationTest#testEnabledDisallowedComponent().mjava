	/**
	 * Test that a component will update it's model when authorization is ok.
	 * 
	 * @throws Exception
	 */
	public void testEnabledDisallowedComponent() throws Exception
	{
		tester.getApplication().getSecuritySettings().setAuthorizationStrategy(new DummyAuthorizationStrategy()
		{
			/**
			 * @see wicket.authorization.IAuthorizationStrategy#isActionAuthorized(wicket.Component, wicket.authorization.Action)
			 */
			public boolean isActionAuthorized(Component c, Action action)
			{
				if (action == Component.ENABLE && c instanceof TextField
						&& c.getId().equals("stringInput"))
				{
					return false;
				}
				return true;
			}
		});
		tester.startPage(AuthTestPage1.class);
		tester.assertRenderedPage(AuthTestPage1.class);
		tester.setParameterForNextRequest("form:stringInput", "test");
		try
		{
			tester.submitForm("form");
			Component component = tester.getComponentFromLastRenderedPage("form:stringInput");
			assertEquals("", component.getModelObjectAsString());
		}
		catch (WicketRuntimeException e)
		{
			// good
		}
	}

