	/**
	 * Returns the name of the Bean as registered to Spring. Throws IllegalState exception if none
	 * or more then one beans are found.
	 * 
	 * @param ctx
	 * 		spring application context
	 * @param clazz
	 * 		bean class
	 * @throws IllegalStateException
	 * @return spring name of the bean
	 */
	private final String getBeanNameOfClass(ApplicationContext ctx, Class< ? > clazz)
	{
		String[] names = BeanFactoryUtils.beanNamesForTypeIncludingAncestors(ctx, clazz);
		if (names.length == 0)
		{
			throw new IllegalStateException("bean of type [" + clazz.getName() + "] not found");
		}
		if (names.length > 1)
		{
			StringBuffer msg = new StringBuffer();
			msg.append("more then one bean of type [");
			msg.append(clazz.getName());
			msg.append("] found, you have to specify the name of the bean ");
			msg.append("(@SpringBean(name=\"foo\")) in order to resolve this conflict. ");

			msg.append("Matched beans: ");
			msg.append(Strings.join(",", names));

			throw new IllegalStateException(msg.toString());
		}
		return names[0];
	}

