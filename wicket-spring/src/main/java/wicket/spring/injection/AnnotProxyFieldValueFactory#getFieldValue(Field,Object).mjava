	/**
	 * @see wicket.extensions.injection.IFieldValueFactory#getFieldValue(java.lang.reflect.Field,
	 *      java.lang.Object)
	 */
	public Object getFieldValue(Field field, Object fieldOwner)
	{

		if (field.isAnnotationPresent(SpringBean.class))
		{
			SpringBean annot = field.getAnnotation(SpringBean.class);

			String id = annot.id();
			// TODO 2.0: Remove the workaround for deprecated annot.name()
			if (id == null || id.length() == 0)
			{
				id = annot.name();
			}

			SpringBeanLocator locator = new SpringBeanLocator(id, field.getType(),
					contextLocator);

			if (cache.containsKey(locator))
			{
				return cache.get(locator);
			}

			// fail early - see if the locator can locate the spring bean
			locator.locateProxyTarget();

			Object proxy = LazyInitProxyFactory.createProxy(field.getType(), locator);
			cache.put(locator, proxy);
			return proxy;
		}
		else
		{
			return null;
		}
	}

