	/**
	 * Returns the maximum value for the numberType's type
	 * 
	 * @param numberType
	 *            the type of the number for which the maximum value will be returned
	 * @return the maximum value of the numberType or {@value Double#MAX_VALUE} if the numberType
	 *         itself is either {@code null} or has no maximum value
	 */
	public static Number getMaxValue(Class<? extends Number> numberType)
	{
		Number result;
		if (Integer.class == numberType || int.class == numberType)
		{
			result = Integer.MAX_VALUE;
		}
		else if (Long.class == numberType || long.class == numberType)
		{
			result = Long.MAX_VALUE;
		}
		else if (Float.class == numberType || float.class == numberType)
		{
			result = Float.MAX_VALUE;
		}
		else if (Double.class == numberType || double.class == numberType)
		{
			result = Double.MAX_VALUE;
		}
		else if (Byte.class == numberType || byte.class == numberType)
		{
			result = Byte.MAX_VALUE;
		}
		else if (Short.class == numberType || short.class == numberType)
		{
			result = Short.MAX_VALUE;
		}
		else
		{ // null of any other Number
			LOG.debug("'{}' has no maximum value. Falling back to Double.MAX_VALUE.");
			result = Double.MAX_VALUE;
		}

		return result;
	}

