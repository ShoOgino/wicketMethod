	/**
	 * Tests if this AppendingStringBuffer starts with the specified prefix beginning a specified
	 * index.
	 * 
	 * @param prefix
	 *            the prefix.
	 * @param toffset
	 *            where to begin looking in the string.
	 * @return <code>true</code> if the character sequence represented by the argument is a prefix
	 *         of the substring of this object starting at index <code>toffset</code>;
	 *         <code>false</code> otherwise. The result is <code>false</code> if
	 *         <code>toffset</code> is negative or greater than the length of this
	 *         <code>String</code> object; otherwise the result is the same as the result of the
	 *         expression
	 * 
	 *         <pre>
	 * this.subString(toffset).startsWith(prefix)
	 * </pre>
	 */
	public boolean startsWith(CharSequence prefix, int toffset)
	{
		char ta[] = value;
		int to = toffset;
		int po = 0;
		int pc = prefix.length();
		// Note: toffset might be near -1>>>1.
		if ((toffset < 0) || (toffset > count - pc))
		{
			return false;
		}
		while (--pc >= 0)
		{
			if (ta[to++] != prefix.charAt(po++))
			{
				return false;
			}
		}
		return true;
	}

