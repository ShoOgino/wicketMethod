	/**
	 * Visits the specified object and any of its children using a post-order
	 * (child first) traversal. Children are determined by calling
	 * {@link Iterable#iterator()} if the object implements {@link Iterable}.
	 * 
	 * @param <S>
	 *            the type of object that will be visited, notice that {@code
	 *            container} is not declared as {@code Iterable<S>} because it
	 *            may return a generalization of {@code S}
	 * @param <R>
	 *            the type of object that should be returned from the visitor,
	 *            use {@link Void} if no return value is needed
	 * @param root
	 *            root object that will be visited
	 * @param visitor
	 *            the visitor
	 * @return return value from the {@code visitor} or {@code null} if none
	 */
	public static final <S, R> R visitComponentsPostOrder(S root,
			final org.apache.wicket.util.visit.IVisitor<S, R> visitor)
	{
		return visitComponentsPostOrder(root, visitor, IVisitFilter.ANY);
	}

