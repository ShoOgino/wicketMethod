	/**
	 * Underlying unescape method that allows the optimisation of not starting from the 0 index
	 * again.
	 * 
	 * @param writer
	 *            The <code>Writer</code> to write the results to; assumed to be non-null.
	 * @param str
	 *            The source <code>String</code> to unescape; assumed to be non-null.
	 * @param firstAmp
	 *            The <code>int</code> index of the first ampersand in the source String.
	 * @throws IOException
	 *             when <code>Writer</code> passed throws the exception from calls to the
	 *             {@link Writer#write(int)} methods.
	 */
	private void doUnescape(Writer writer, String str, int firstAmp) throws IOException
	{
		writer.write(str, 0, firstAmp);
		int len = str.length();
		for (int i = firstAmp; i < len; i++)
		{
			char c = str.charAt(i);
			if (c == '&')
			{
				int nextIdx = i + 1;
				int semiColonIdx = str.indexOf(';', nextIdx);
				if (semiColonIdx == -1)
				{
					writer.write(c);
					continue;
				}
				int amphersandIdx = str.indexOf('&', i + 1);
				if (amphersandIdx != -1 && amphersandIdx < semiColonIdx)
				{
					// Then the text looks like &...&...;
					writer.write(c);
					continue;
				}
				String entityContent = str.substring(nextIdx, semiColonIdx);
				int entityValue = -1;
				int entityContentLen = entityContent.length();
				if (entityContentLen > 0)
				{
					if (entityContent.charAt(0) == '#')
					{ // escaped value content is an integer (decimal or
						// hexidecimal)
						if (entityContentLen > 1)
						{
							char isHexChar = entityContent.charAt(1);
							try
							{
								switch (isHexChar)
								{
									case 'X' :
									case 'x' : {
										entityValue = Integer.parseInt(entityContent.substring(2),
											16);
										break;
									}
									default : {
										entityValue = Integer.parseInt(entityContent.substring(1),
											10);
									}
								}
								if (entityValue > 0xFFFF)
								{
									entityValue = -1;
								}
							}
							catch (NumberFormatException e)
							{
								entityValue = -1;
							}
						}
					}
					else
					{ // escaped value content is an entity name
						entityValue = entityValue(entityContent);
					}
				}

				if (entityValue == -1)
				{
					writer.write('&');
					writer.write(entityContent);
					writer.write(';');
				}
				else
				{
					writer.write(entityValue);
				}
				i = semiColonIdx; // move index up to the semi-colon
			}
			else
			{
				writer.write(c);
			}
		}
	}

