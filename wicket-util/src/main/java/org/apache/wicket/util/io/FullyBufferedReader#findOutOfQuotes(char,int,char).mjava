	/**
	 * Find a char starting at the position provided. The char must not be inside a quoted string
	 * (single or double)
	 * 
	 * @param ch
	 *            The char to search for
	 * @param startPos
	 *            The index to start at
	 * @param quotationChar
	 *            The current quotation char. Must be ' or ", otherwise will be ignored.
	 * @param insideQuotations
	 *            Indicates if we are inside quotes or not.
	 * @return -1 if not found
	 */
	// TODO Wicket 1.6 - remove 'throws ParseException' because it is not thrown
	public int findOutOfQuotes(final char ch, int startPos, char quotationChar)
		throws ParseException
	{
		int closeBracketIndex = find(ch, startPos + 1);

		if (closeBracketIndex != -1)
		{
			CharSequence tagCode = getSubstring(startPos, closeBracketIndex + 1);

			for (int i = 0; i < tagCode.length(); i++)
			{
				char currentChar = tagCode.charAt(i);
				char previousTag = tagCode.charAt(i > 0 ? i - 1 : 0);

				if (quotationChar == 0 && (currentChar == '\'' || currentChar == '\"'))
				{// I'm entering inside a quoted string. Set quotationChar
					quotationChar = currentChar;
					countLinesTo(startPos + i);
				}
				else if (currentChar == quotationChar && previousTag != '\\')
				{ // I'm out of quotes, reset quotationChar
					quotationChar = 0;
				}
				// I've found character but I'm inside quotes
				if (currentChar == ch && quotationChar != 0)
					return findOutOfQuotes(ch, closeBracketIndex + 1, quotationChar);
			}
		}

		return closeBracketIndex;
	}

