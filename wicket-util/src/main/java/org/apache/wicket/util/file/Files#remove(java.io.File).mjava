	/**
	 * Deletes a file.
	 * <p>
	 * If the file cannot be deleted for any reason then at most 10 retries are attempted with delay
	 * of 100ms. If the file still cannot be deleted then it is scheduled to be deleted at JVM exit
	 * time.
	 * 
	 * @param file
	 *            File to delete
	 * @return {@code true} if file was deleted, {@code false} if the file didn't exist or it cannot
	 *         be removed for some reason
	 */
	public static boolean remove(final java.io.File file)
	{
		if (file == null || file.exists() == false || file.isDirectory())
		{
			return false;
		}

		int retries = 10;

		boolean deleted = false;

		while ((deleted = file.delete()) == false && retries > 0)
		{
			retries--;
			try
			{
				Thread.sleep(100);
			}
			catch (InterruptedException ignored)
			{
			}
		}

		if (deleted == false && logger.isWarnEnabled())
		{
			logger.warn(
				"Cannot delete file '{}' for unknown reason. The file will be scheduled for deletion at JVM exit time.",
				file);
			file.deleteOnExit();
		}

		return deleted;
	}

