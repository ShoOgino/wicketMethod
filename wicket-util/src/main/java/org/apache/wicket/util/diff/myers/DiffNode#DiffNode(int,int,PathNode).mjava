	/**
	 * Constructs a DiffNode.
	 * <p>
	 * DiffNodes are compressed. That means that the path pointed to by the <code>prev</code>
	 * parameter will be followed using {@link PathNode#previousSnake} until a non-diff node is
	 * found.
	 * 
	 * @param i
	 *            the position in the original sequence
	 * @param j
	 *            the position in the revised sequence
	 * @param prev
	 *            the previous node in the path.
	 */
	public DiffNode(final int i, final int j, final PathNode prev)
	{
		super(i, j, (prev == null ? null : prev.previousSnake()));
	}

