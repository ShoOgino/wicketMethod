	/**
	 * Creates and returns a {@link java.io.File File} representing a uniquely named temporary file
	 * in the configured repository path. The lifetime of the file is tied to the lifetime of the
	 * <code>FileItem</code> instance; the file will be deleted when the instance is garbage
	 * collected.
	 * 
	 * @return The {@link java.io.File File} to be used for temporary storage.
	 */
	protected File getTempFile()
	{
		if (tempFile == null)
		{
			File tempDir = repository;
			if (tempDir == null)
			{
				String systemTmp = null;
				try
				{
					systemTmp = System.getProperty("java.io.tmpdir");
				}
				catch (SecurityException e)
				{
					throw new RuntimeException(
						"Reading property java.io.tmpdir is not allowed"
							+ " for the current security settings. The repository location needs to be"
							+ " set manually, or upgrade permissions to allow reading the tmpdir property.");
				}
				tempDir = new File(systemTmp);
			}

			try
			{
				do
				{
					String tempFileName = "upload_" + UID + "_" + getUniqueId() + ".tmp";
					tempFile = new File(tempDir, tempFileName);
				}
				while (!tempFile.createNewFile());
			}
			catch (IOException e)
			{
				throw new RuntimeException("Could not create the temp file for upload: " +
					tempFile.getAbsolutePath(), e);
			}

			if (fileUploadCleaner != null)
			{
				fileUploadCleaner.track(tempFile, this);
			}
		}
		return tempFile;
	}

