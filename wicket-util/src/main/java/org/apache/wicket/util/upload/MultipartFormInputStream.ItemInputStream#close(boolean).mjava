		/**
		 * Closes the input stream.
		 * 
		 * @param pCloseUnderlying
		 *            Whether to close the underlying stream (hard close)
		 * @throws IOException
		 *             An I/O error occurred.
		 */
		public void close(final boolean pCloseUnderlying) throws IOException
		{
			if (closed)
			{
				return;
			}
			if (pCloseUnderlying)
			{
				closed = true;
				input.close();
			}
			else
			{
				for (;;)
				{
					int av = available();
					if (av == 0)
					{
						av = makeAvailable();
						if (av == 0)
						{
							break;
						}
					}
					skip(av);
				}
			}
			closed = true;
		}

