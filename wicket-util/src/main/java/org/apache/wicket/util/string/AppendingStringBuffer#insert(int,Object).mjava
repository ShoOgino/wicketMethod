	/**
	 * Inserts the string representation of the <code>Object</code> argument into this string
	 * buffer.
	 * <p>
	 * The second argument is converted to a string as if by the method <code>String.valueOf</code>,
	 * and the characters of that string are then inserted into this string buffer at the indicated
	 * offset.
	 * <p>
	 * The offset argument must be greater than or equal to <code>0</code>, and less than or equal
	 * to the length of this string buffer.
	 * 
	 * @param offset
	 *            the offset.
	 * @param obj
	 *            an <code>Object</code>.
	 * @return a reference to this <code>AppendingStringBuffer</code> object.
	 * @exception StringIndexOutOfBoundsException
	 *                if the offset is invalid.
	 * @see java.lang.String#valueOf(java.lang.Object)
	 * @see AppendingStringBuffer#insert(int, java.lang.String)
	 * @see AppendingStringBuffer#length()
	 */
	public AppendingStringBuffer insert(final int offset, final Object obj)
	{
		if (obj instanceof AppendingStringBuffer)
		{
			AppendingStringBuffer asb = (AppendingStringBuffer)obj;
			return insert(offset, asb.value, 0, asb.count);
		}
		else if (obj instanceof StringBuffer)
		{
			return insert(offset, (StringBuffer)obj);
		}
		else if (obj instanceof StringBuilder)
		{
			return insert(offset, (StringBuilder)obj);
		}
		return insert(offset, String.valueOf(obj));
	}

