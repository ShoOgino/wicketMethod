	/**
	 * Retrieves the file name from the <code>Content-disposition</code> header.
	 * 
	 * @param headers
	 *            A <code>Map</code> containing the HTTP request headers.
	 * 
	 * @return The file name for the current <code>encapsulation</code>.
	 */
	protected String getFileName(Map<String, String> headers)
	{
		String fileName = null;
		String cd = getHeader(headers, CONTENT_DISPOSITION);
		if (cd.startsWith(FORM_DATA) || cd.startsWith(ATTACHMENT))
		{
			ParameterParser parser = new ParameterParser();
			parser.setLowerCaseNames(true);
			// Parameter parser can handle null input
			Map<String, String> params = parser.parse(cd, ';');
			if (params.containsKey("filename"))
			{
				fileName = params.get("filename");
				if (fileName != null)
				{
					fileName = fileName.trim();
					int index = fileName.lastIndexOf('\\');
					if (index == -1)
					{
						index = fileName.lastIndexOf('/');
					}
					if (index != -1)
					{
						fileName = fileName.substring(index + 1);
					}
				}
				else
				{
					// Even if there is no value, the parameter is present, so
					// we return an empty file name rather than no file name.
					fileName = "";
				}
			}
		}
		return fileName;
	}

