	/**
	 * <p>
	 * Parses the <code>header-part</code> and returns as key/value pairs.
	 * 
	 * <p>
	 * If there are multiple headers of the same names, the name will map to a comma-separated list
	 * containing the values.
	 * 
	 * @param headerPart
	 *            The <code>header-part</code> of the current <code>encapsulation</code>.
	 * 
	 * @return A <code>Map</code> containing the parsed HTTP request headers.
	 */
	protected FileItemHeaders getParsedHeaders(final String headerPart)
	{
		final int len = headerPart.length();
		FileItemHeadersImpl headers = newFileItemHeaders();
		int start = 0;
		for (;;)
		{
			int end = parseEndOfLine(headerPart, start);
			if (start == end)
			{
				break;
			}
			String header = headerPart.substring(start, end);
			start = end + 2;
			while (start < len)
			{
				int nonWs = start;
				while (nonWs < len)
				{
					char c = headerPart.charAt(nonWs);
					if (c != ' ' && c != '\t')
					{
						break;
					}
					++nonWs;
				}
				if (nonWs == start)
				{
					break;
				}
				// Continuation line found
				end = parseEndOfLine(headerPart, nonWs);
				header += " " + headerPart.substring(nonWs, end);
				start = end + 2;
			}
			parseHeaderLine(headers, header);
		}
		return headers;
	}

