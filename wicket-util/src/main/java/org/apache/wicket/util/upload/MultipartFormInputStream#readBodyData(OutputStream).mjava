	/**
	 * <p>
	 * Reads <code>body-data</code> from the current <code>encapsulation</code> and writes its
	 * contents into the output <code>Stream</code>.
	 * 
	 * <p>
	 * Arbitrary large amounts of data can be processed by this method using a constant size buffer.
	 * (see
	 * {@link #MultipartFormInputStream(InputStream,byte[],int, MultipartFormInputStream.ProgressNotifier)
	 * constructor}).
	 * 
	 * @param output
	 *            The <code>Stream</code> to write data into. May be null, in which case this method
	 *            is equivalent to {@link #discardBodyData()}.
	 * 
	 * @return the amount of data written.
	 * 
	 * @throws MalformedStreamException
	 *             if the stream ends unexpectedly.
	 * @throws IOException
	 *             if an i/o error occurs.
	 */
	public int readBodyData(final OutputStream output) throws MalformedStreamException, IOException
	{
		final InputStream istream = newInputStream();
		return Streams.copy(istream, output == null ? new NoopOutputStream() : output);
	}

