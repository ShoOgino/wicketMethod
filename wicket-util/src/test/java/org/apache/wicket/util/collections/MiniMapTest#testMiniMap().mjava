	/**
	 * Basic test for keySet(), entrySet() and values().
	 */
	public void testMiniMap()
	{
		MiniMap<Object, Object> m = new MiniMap<Object, Object>(3);
		m.put(FOO, BAR);

		// Test .keySet();
		Set<Object> s = m.keySet();
		assertEquals(1, m.size());

		Iterator<?> i = s.iterator();
		assertTrue(i.hasNext());
		Object key = i.next();
		assertEquals(FOO, key);
		assertFalse(i.hasNext());
		try
		{
			i.next();
			fail("Expected i.next() to fail with NoSuchElementException");
		}
		catch (NoSuchElementException e)
		{
			// Swallow this.
		}

		// Do approx the same again with the .entrySet()
		Set<Entry<Object, Object>> entrySet = m.entrySet();
		assertEquals(1, m.size());

		i = entrySet.iterator();
		assertTrue(i.hasNext());
		@SuppressWarnings("unchecked")
		Map.Entry<Object, Object> entry = (Map.Entry<Object, Object>)i.next();
		assertEquals(FOO, entry.getKey());
		assertEquals(BAR, entry.getValue());
		assertFalse(i.hasNext());
		try
		{
			i.next();
			fail("Expected i.next() to fail with NoSuchElementException");
		}
		catch (NoSuchElementException e)
		{
			// Swallow this.
		}

		// Do approx the same again with the .values()
		Collection<Object> v = m.values();
		assertEquals(1, m.size());

		i = v.iterator();
		assertTrue(i.hasNext());
		Object value = i.next();
		assertEquals(BAR, value);
		assertFalse(i.hasNext());
		try
		{
			i.next();
			fail("Expected i.next() to fail with NoSuchElementException");
		}
		catch (NoSuchElementException e)
		{
			// Swallow this.
		}
	}

