	/**
	 * test other getAs methods
	 */
	@Test
	public void getAs()
	{
		ValueMap vm = new ValueMap();

		Boolean booleanValue = true;
		Integer integerValue = 42;
		Long longValue = integerValue * 1L;
		Double doubleValue = integerValue * 1.0D;
		Instant timeValue = Instant.now();
		Duration durationValue = Duration.ofHours(1);

		boolean defBoolean = !booleanValue;
		int defInteger = 10101;
		long defLong = defInteger * 1L;
		double defDouble = defInteger * 1.0D;
		Instant defTime = Instant.now();
		Duration defDuration = Duration.ofHours(42);

		vm.put("num", integerValue.toString());
		vm.put("num.bad", "xxx");
		vm.put("instant", timeValue.toString());
		vm.put("instant.bad", "xxx");
		vm.put("duration", durationValue.toString());
		vm.put("duration.bad", "xxx");
		vm.put("boolean", booleanValue.toString());
		vm.put("boolean.bad", "xxx");

		// boolean
		assertEquals(booleanValue, vm.getAsBoolean("boolean"));
		assertNull(vm.getAsBoolean("boolean.bad"));
		assertEquals(defBoolean, vm.getAsBoolean("boolean.bad", defBoolean));
		assertNull(vm.getAsBoolean("boolean.missing"));
		assertEquals(defBoolean, vm.getAsBoolean("boolean.missing", defBoolean));
		assertEquals(!defBoolean, vm.getAsBoolean("boolean.missing", !defBoolean));

		// integer
		assertEquals(integerValue, vm.getAsInteger("num"));
		assertNull(vm.getAsInteger("num.bad"));
		assertEquals(defInteger, vm.getAsInteger("num.bad", defInteger));
		assertNull(vm.getAsInteger("num.missing"));
		assertEquals(defInteger, vm.getAsInteger("num.missing", defInteger));

		// long
		assertEquals(longValue, vm.getAsLong("num"));
		assertNull(vm.getAsLong("num.bad"));
		assertEquals(defLong, vm.getAsLong("num.bad", defLong));
		assertNull(vm.getAsLong("num.missing"));
		assertEquals(defLong, vm.getAsLong("num.missing", defLong));

		// double
		assertEquals(doubleValue, vm.getAsDouble("num"));
		assertNull(vm.getAsDouble("num.bad"));
		assertEquals(defDouble, vm.getAsDouble("num.bad", defDouble), 0.001);
		assertNull(vm.getAsDouble("num.missing"));
		assertEquals(defDouble, vm.getAsDouble("num.missing", defDouble), 0.001);

		// instant
		assertEquals(timeValue, vm.getAsInstant("instant"));

		assertNull(vm.getAsInstant("instant.bad"));
		assertEquals(defTime, vm.getAsTime("instant.bad", defTime));
		assertNull(vm.getAsInstant("instant.missing"));
		assertEquals(defTime, vm.getAsTime("instant.missing", defTime));

		// duration
		assertEquals(durationValue, vm.getAsDuration("duration"));
		assertNull(vm.getAsDuration("duration.bad"));
		assertEquals(defDuration, vm.getAsDuration("duration.bad", defDuration));
		assertNull(vm.getAsDuration("duration.missing"));
		assertEquals(defDuration, vm.getAsDuration("duration.missing", defDuration));
	}

