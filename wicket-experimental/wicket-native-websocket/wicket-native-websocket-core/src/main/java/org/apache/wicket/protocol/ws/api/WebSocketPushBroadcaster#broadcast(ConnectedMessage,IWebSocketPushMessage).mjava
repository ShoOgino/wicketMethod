	/**
	 * Processes the given message in the page and session identified by the given Web Socket connection.
	 * The message is sent as an event to the Page and components of the session allowing the components
	 * to be updated.
	 *
	 * This method can be invoked from any thread, even a non-wicket thread. By default all processing
	 * is done in the caller thread. Use
	 * {@link IWebSocketSettings#setWebSocketPushMessageExecutor(org.apache.wicket.protocol.ws.concurrent.Executor)}
	 * to move processing to background threads.
	 *
	 * If the given connection is no longer open then the broadcast is silently ignored.
	 *
	 * @param connection
	 *			The Web Socket connection that identifies the page and session
	 * @param message
	 *			The push message event
	 */
	public void broadcast(ConnectedMessage connection, IWebSocketPushMessage message)
	{
		Args.notNull(connection, "connection");
		Args.notNull(message, "message");

		Application application = connection.getApplication();
		String sessionId = connection.getSessionId();
		IKey key = connection.getKey();
		IWebSocketConnection wsConnection = registry.getConnection(application, sessionId, key);
		if (wsConnection == null)
		{
			return;
		}
		process(application, singletonList(wsConnection), message);
	}

