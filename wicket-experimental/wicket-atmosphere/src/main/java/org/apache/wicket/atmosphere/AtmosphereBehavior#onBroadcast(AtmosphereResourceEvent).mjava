	@Override
	public void onBroadcast(AtmosphereResourceEvent event)
	{
		if (log.isDebugEnabled())
		{
			log.debug("onBroadcast: {}", event.getMessage());
		}

		// If we are using long-polling, resume the connection as soon as we get
		// an event.
		String transport = event.getResource()
			.getRequest()
			.getHeader(HeaderConfig.X_ATMOSPHERE_TRANSPORT);

		if (HeaderConfig.LONG_POLLING_TRANSPORT.equalsIgnoreCase(transport))
		{
			Meteor meteor = Meteor.lookup(event.getResource().getRequest());
			meteor.resume();
		}
		EventBus eventBus = findEventBus();
		if (eventBus.isWantAtmosphereNotifications())
		{
			eventBus.post(new AtmosphereInternalEvent(AtmosphereInternalEvent.Type.Broadcast, event));
		}
	}

