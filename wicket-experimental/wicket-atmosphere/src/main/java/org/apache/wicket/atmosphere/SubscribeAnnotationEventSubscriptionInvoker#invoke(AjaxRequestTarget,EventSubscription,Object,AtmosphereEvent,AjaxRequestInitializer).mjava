	@Override
	public void invoke(AjaxRequestTarget target, EventSubscription subscription, Object base,
		AtmosphereEvent event, AjaxRequestInitializer ajaxRequestInitializer)
	{
		for (Method curMethod : base.getClass().getMethods())
		{
			if (curMethod.isAnnotationPresent(Subscribe.class) &&
				curMethod.getName().equals(subscription.getMethodName()))
			{
				ajaxRequestInitializer.initialize();
				try
				{
					curMethod.setAccessible(true);
					curMethod.invoke(base, target, event.getPayload());
				}
				catch (IllegalAccessException e)
				{
					throw new WicketRuntimeException(e);
				}
				catch (IllegalArgumentException e)
				{
					throw new WicketRuntimeException(e);
				}
				catch (InvocationTargetException e)
				{
					throw new WicketRuntimeException(e);
				}
			}
		}
	}

