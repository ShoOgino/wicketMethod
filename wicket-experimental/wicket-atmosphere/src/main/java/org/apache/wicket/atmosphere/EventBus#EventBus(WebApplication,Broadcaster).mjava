	/**
	 * Creates and registers an {@code EventBus} for the given application and broadcaster
	 *
	 * @param application
	 * @param broadcaster
	 */
	public EventBus(WebApplication application, Broadcaster broadcaster)
	{
		this.application = application;
		this.broadcaster = broadcaster;
		application.setMetaData(EVENT_BUS_KEY, this);
		application.mount(new AtmosphereRequestMapper(createEventSubscriptionInvoker()));
		application.getComponentPostOnBeforeRenderListeners().add(
			createEventSubscriptionCollector());
		application.getSessionStore().registerUnboundListener(this);
		checkEnabledAnalytics(getBroadcaster().getBroadcasterConfig().getAtmosphereConfig());
	}

