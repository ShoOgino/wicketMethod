    /**
     * Load a Groovy file, create a Class object and put it into the cache
     * 
     * @param classname The class name to be created by the Groovy filename
     * @param resource The Groovy resource
     * @return the Class object created by the groovy resouce
     */
    private final Class loadGroovyFile(String classname, final Resource resource)
    {
		// Ensure that we use the correct classloader so that we can find
		// classes in an application server.
		ClassLoader cl = Thread.currentThread().getContextClassLoader();
		if (cl == null)
		{
			cl = GroovyPageFactory.class.getClassLoader();
		}
		
        final GroovyWarClassLoader groovyCl = new GroovyWarClassLoader(cl);
        Class clazz = null;
        
        try 
        {
            final InputStream in = resource.getInputStream();
            if (in != null)
            {
	            clazz = groovyCl.parseClass(in);
	            if (clazz != null)
	            {
	                // this is necessary because with groovy the filename can be 
	                // different from the class definition included.
	                if (false == classname.equals(clazz.getName()))
	                {
	                    log.warn("Though it is possible, the Groovy file name and "
	                            + "the java class name defined in that file SHOULD "
	                            + "match and follow the java rules");
	                }
	                classname = clazz.getName();
	            }
            }
            else
            {
                log.warn("Groovy file not found: " + resource);
            }
        } 
        catch (CompilationFailedException e) 
        {
            throw new RenderException("Error parsing groovy file: " 
                    + resource, e);
        } 
        catch (IOException e) 
        {
            throw new RenderException("Error reading groovy file: " 
                    + resource, e);
        }
        catch (Throwable e) 
        {
            throw new RenderException("Error while reading groovy file: " 
                    + resource, e);
        }
        finally
        {
            if (clazz == null)
            {
                // Groovy file not found; error while compiling etc.. 
                // Remove it from cache
                classCache.remove(classname);
            }
            else
            {
                // Put the new class definition into the cache
                classCache.put(classname, clazz);
            }
        }

        return clazz;
    }

