    /**
     * Resolve the class for the given classname. First try standard java
     * classes, then groovy files. Groovy file name must be
     * &lt;classname&gt;.groovy.
     * 
     * @param classname
     *            The object's class name
     * @return The class
     * @see wicket.IClassResolver#resolveClass(String)
     */
    public Class resolveClass(final String classname)
    {
        try
        {
        	return defaultClassResolver.resolveClass(classname);
        }
        catch (WicketRuntimeException ex)
        {
            ; // default resolver failed. Try the groovy specific loader next
        }

        // If definition already loaded, ...
        Class groovyPageClass = (Class)classCache.get(classname);
        if (groovyPageClass != null)
        {
            return groovyPageClass;
        }

        // Else, try Groovy.
        final Resource resource = Resource.locate(classname, ".groovy");
        if (resource != null)
        {
            try
            {
                // Load the groovy file, get the Class and watch for changes
                groovyPageClass = loadGroovyFileAndWatchForChanges(classname, resource);
                if (groovyPageClass != null)
                {
                    return groovyPageClass;
                }
            }
            catch (WicketRuntimeException ex)
            {
                throw new WicketRuntimeException(
                        "Unable to load class with name: " + classname, ex);
            }
        }
        else
        {
            throw new WicketRuntimeException("File not found: " + resource);
        }

        throw new WicketRuntimeException("Unable to load class with name: " + classname);
    }

