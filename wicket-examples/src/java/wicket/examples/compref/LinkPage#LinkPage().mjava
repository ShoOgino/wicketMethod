	/**
	 * Constructor
	 */
	public LinkPage()
	{
		// power to the annonymous classes!

		// first create a simple value holder object
		final ClickCount count1 = new ClickCount();

		// add a link which, when clicked, increases our counter
		// when a link is clicked, its onClick method is called
		Link link1 = new Link("link1")
		{
			public void onClick()
			{
				count1.clicks++;
			}
		};
		add(link1);

		// add a counter label to the link so that we can display it in the body of the link
        link1.add(new Label("label1", new Model()
        {
            public Object getObject(Component component)
            {
                return Integer.toString(count1.clicks);
            }
        }));

        // we can attach Link components to any HTML tag we want. If it is an anchor (<a href...),
		// the url to this component is put in the href attribute. For other components, a
		// onclick javascript event handler is created that triggers the round trip

		// it is ofcourse possible to - instead of the above approach - hide as much of the
		// component as possible within a class.
		class CustomLink extends Link
		{
			final ClickCount count2;

			/**
			 * Construct.
			 * @param id
			 */
			public CustomLink(String id)
			{
				super(id);
				count2 = new ClickCount();
				add(new ClickCountLabel("label2", count2));
			}

			public void onClick()
			{
				count2.clicks++;
			}
		}
		add(new CustomLink("link2"));

		// and if we know we are going to attach it to a <input type="button> tag, we shouldn't
		// use a label, but an AttributeModifier instead.
		class ButtonLink extends Link
		{
			final ClickCount count3;

			/**
			 * Construct.
			 * @param id
			 */
			public ButtonLink(String id)
			{
				super(id);
				count3 = new ClickCount();
				add(new AttributeModifier("value", new Model()
				{
					public Object getObject(Component component)
					{
						// we just replace the whole string. You could use custom
						// AttributeModifiers to e.g. just replace one part of the
						// string if you want
						return "this button is clicked " + count3.clicks + " times";
					}
				}));
			}

			public void onClick()
			{
				count3.clicks++;
			}
		}
		add(new ButtonLink("link3"));
	}

