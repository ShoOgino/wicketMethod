	/**
	 * Constructor
	 */
	public TabbedPanelPage()
	{
		setModel(new Model("tabpanel"));

		// create links used to switch between css variations
		addCssSwitchingLinks();

		// create a list of ITab objects used to feed the tabbed panel
		List tabs = new ArrayList();
		tabs.add(new AbstractTab(new Model("first tab"))
		{

			public Panel getPanel(MarkupContainer parent,String panelId)
			{
				return new TabPanel1(parent,panelId);
			}

		});

		tabs.add(new AbstractTab(new Model("second tab"))
		{

			public Panel getPanel(MarkupContainer parent,String panelId)
			{
				return new TabPanel2(parent,panelId);
			}

		});

		tabs.add(new AbstractTab(new Model("third tab"))
		{

			public Panel getPanel(MarkupContainer parent,String panelId)
			{
				return new TabPanel3(parent,panelId);
			}

		});

		// add the new tabbed panel, attribute modifier only used to switch
		// between different css variations
		add(new TabbedPanel(this,"tabs", tabs).add(new AttributeModifier("class", true,
				TabbedPanelPage.this.getModel())));

	}

