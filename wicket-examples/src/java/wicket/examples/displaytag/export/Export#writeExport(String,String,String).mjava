	/**
	 * Will write the export. The default behavior is to write directly to the
	 * response. If the ResponseOverrideFilter is configured for this request,
	 * will instead write the export content to a StringBuffer in the Request
	 * object.
	 * 
	 * @param mimeType
	 *            mime type to set in the response
	 * @param exportString
	 *            String
	 * @param filename
	 *            name of the file to be saved. Can be null, if set the
	 *            content-disposition header will be added.
	 * @return int
	 */
	protected int writeExport(final String mimeType, final String exportString,
			final String filename)
	{
		WebResponse response = (WebResponse)getResponse();
		HttpServletResponse servletResponse = response.getHttpServletResponse();

		// response can't be already committed at this time
		if (servletResponse.isCommitted())
		{
			throw new WicketRuntimeException(
					"HTTP response already committed. Can not change that any more");
		}

		// if cache is disabled using http header, export will not work.
		// Try to remove bad headers overwriting them, since there is no way to
		// remove a single header and reset()
		// could remove other "useful" headers like content encoding
		if (servletResponse.containsHeader("Cache-Control"))
		{
			servletResponse.setHeader("Cache-Control", "public");
		}
		if (servletResponse.containsHeader("Expires"))
		{
			servletResponse.setHeader("Expires", "Thu, 01 Dec 2069 16:00:00 GMT");
		}
		if (servletResponse.containsHeader("Pragma"))
		{
			// Pragma: no-cache
			// http 1.0 equivalent of Cache-Control: no-cache
			// there is no "Cache-Control: public" equivalent, so just try to
			// set it to an empty String (note
			// this is NOT a valid header)
			servletResponse.setHeader("Pragma", "");
		}

		try
		{
			servletResponse.resetBuffer();
		}
		catch (Exception e)
		{
			throw new WicketRuntimeException("Unable to reset HTTP response", e);
		}

		response.setContentType(mimeType);

		if ((filename != null) && (filename.trim().length() > 0))
		{
			servletResponse.setHeader("Content-Disposition", "attachment; filename=\"" + filename
					+ "\"");
		}

		response.write(exportString);
		return 0;
	}

