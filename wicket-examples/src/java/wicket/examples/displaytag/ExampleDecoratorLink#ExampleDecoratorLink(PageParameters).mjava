	/**
	 * Constructor.
	 * 
	 * @param parameters
	 *            Page parameters
	 */
	public ExampleDecoratorLink(final PageParameters parameters)
	{
		// Test data
		List data = new TestList(10, false);

		// Add the table
		new ListView(this, "rows", data)
		{
			@Override
			public void populateItem(final ListItem listItem)
			{
				final ListObject value = (ListObject)listItem.getModelObject();

				// alternating row styles
				listItem.add(new AttributeModifier("class", new Model(
						(listItem.getIndex() % 2) == 0 ? "even" : "odd")));

				BookmarkablePageLink idLink = new BookmarkablePageLink(listItem, "idLink",
						Page3.class);
				idLink.setParameter("id", value.getId());
				new Label(idLink, "id", Integer.toString(value.getId()));

				BookmarkablePageLink emailLink = new BookmarkablePageLink(listItem, "mailLink",
						Page3.class);
				emailLink.setParameter("id", value.getId());
				new Label(emailLink, "email", value.getEmail());

				BookmarkablePageLink statusLink = new BookmarkablePageLink(listItem, "statusLink",
						Page3.class);
				statusLink.setParameter("id", value.getId());
				new Label(statusLink, "status", value.getStatus());
			}
		};

		// Add table of existing comments
		new SimpleListView(this, "rows2", data)
		{
			@Override
			public void populateItem(final ListItem listItem)
			{
				final ListObject value = (ListObject)listItem.getModelObject();

				BookmarkablePageLink idLink = new BookmarkablePageLink(listItem, "idLink",
						Page3.class);
				idLink.setParameter("id", value.getId());
				new Label(idLink, "id", Integer.toString(value.getId()));

				new BookmarkablePageLink(listItem, "view", Page3.class).setParameter("id",
						value.getId()).setParameter("action", "view");

				new BookmarkablePageLink(listItem, "edit", Page3.class).setParameter("id",
						value.getId()).setParameter("action", "edit");

				new BookmarkablePageLink(listItem, "delete", Page3.class).setParameter("id",
						value.getId()).setParameter("action", "delete");
			}
		};
	}

