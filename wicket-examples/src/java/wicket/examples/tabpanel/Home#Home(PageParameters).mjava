	/**
	 * Constructor
	 * @param parameters Page parameters
	 */
	public Home(final PageParameters parameters)
	{
		add(new NavigationPanel("mainNavigation", "TabPanel example"));

		tab = new TabPanel("tabPanel");
		add(tab);
		// all components added to the TabPanel MUST be named tab.
		// By default the first tab is selected.
		tab.addTab("tab 1", new LabelPanel("tab", "Some text on a Label inside a Panel."));
		// any component will work as long as it is compatible with the html element in
		// TabPanel.html
		// in this case it is a <div id="wicket-tab"/>
		tab.addTab("tab 2", new Label("tab", "Some text on a plain Label."));
		// this allows us to select and or disabled a tab
		tab.addTab("tab 3 (a disabled tab)", false, false, new Label("tab", "3333"));
		tab.addTab("tab 4", new LabelPanel("tab",
				"This tab can be disabled or enabled on the next tab."));
		tab.addTab("tab 5", new FormPanel("tab", new IModel()
		{

			public Object getObject()
			{
				// returns index of tab before selected tab.
				return new Integer(tab.indexOf(tab.getSelectedTab()) - 1);
			}

			public void setObject(Object object)
			{
				// not important
			}
		}));
		//And thats not all, Instead of adding components you can add your own implentation of TabPanelModel instead.
		//this way you get more control over selected/enabled/disabled/labels/style, and who knows what you will think off.
		//TODO make example with custom TabPanelModel, maybe a dynamic label or something
	}

