		/**
		 * Constructor
		 * 
		 * @param id
		 *            id of form
		 * @param book
		 *            Book model
		 */
		public EditBookForm(MarkupContainer parent,final String id, final Book book)
		{
			super(parent,id, new CompoundPropertyModel(book));

			// Create a required text field with a max length of 30 characters
			// that edits the book's title
			final FormComponentFeedbackBorder titleFeedback = new FormComponentFeedbackBorder(this,
			"titleFeedback");
			final TextField title = new TextField(titleFeedback,"title");
			title.setRequired(true);
			title.add(StringValidator.maximumLength(30));
			add(titleFeedback);
			titleFeedback.add(title);

			// Create a required text field that edits the book's author
			final FormComponentFeedbackBorder authorFeedback = new FormComponentFeedbackBorder(this,
			"authorFeedback");
			final TextField author = new TextField(authorFeedback,"author");
			author.setRequired(true);
			add(authorFeedback);
			authorFeedback.add(author);

			// Add fiction checkbox
			add(new CheckBox(this,"fiction"));

			// Books is everything but otherBook
			List books = new ArrayList();

			books.addAll(Book.getBooks());
			books.remove(otherBook);

			// Add companion book choice
			add(new DropDownChoice(this,"companionBook", books));

			// Add radio choice test
			final RadioChoice relatedBook = new RadioChoice(this,"relatedBook", books);
			add(relatedBook);

			// Multi-select among writing styles
			add(new ListMultipleChoice(this,"writingStyles", EnumeratedType
					.getValues(Book.WritingStyle.class)));
		}

