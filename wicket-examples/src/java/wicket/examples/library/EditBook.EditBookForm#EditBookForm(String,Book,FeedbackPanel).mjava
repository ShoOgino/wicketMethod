		/**
		 * Constructor
		 * 
		 * @param componentName
		 *            Name of form
		 * @param book
		 *            Book model
		 * @param feedback
		 *            Feedback component that shows errors
		 */
		public EditBookForm(final String componentName, final Book book,
				final FeedbackPanel feedback)
		{
			super(componentName, book, feedback);

			// Create a required text field with a max length of 30 characters
			// that edits the book's title
			final TextField title = new TextField("title");
			title.add(RequiredValidator.getInstance());
			title.add(LengthValidator.max(30));
			final FormComponentFeedbackBorder titleFeedback = new FormComponentFeedbackBorder(
					"titleFeedback", title);
			add(titleFeedback);

			// Create a required text field that edits the book's author
			final TextField author = new TextField("author");
			author.add(RequiredValidator.getInstance());
			final FormComponentFeedbackBorder authorFeedback = new FormComponentFeedbackBorder(
					"authorFeedback", author);
			add(authorFeedback);

			// Add fiction checkbox
			add(new CheckBox("fiction"));

			// Books is everything but otherBook
			List books = new ArrayList();

			books.addAll(Book.getBooks());
			books.remove(otherBook);

			// Add companion book choice
			add(new DropDownChoice("companionBook", books));

			// Add radio choice test
			final RadioChoice relatedBook = new RadioChoice("relatedBook");

			relatedBook.add(new RadioOptionSet("relatedBooks", books));
			relatedBook.add(new RadioOption("otherBook", otherBook));
			add(relatedBook);

			// Multi-select among writing styles
			add(new ListMultipleChoice("writingStyles", new PropertyModel(getModel(),
					"writingStyles"), EnumeratedType.getValues(Book.WritingStyle.class)));
		}

