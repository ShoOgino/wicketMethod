    /**
     * Initialise filter. If an initparameter 'config' exists use the value to configure the
     * HibernateHelperThreadLocaleImpl.
     *
     * @param filterConfig
     *            the filter config object
     * @throws ServletException when a servlet exception occurs
     */
    public void init(FilterConfig filterConfig)
        throws ServletException
    {
        HibernateHelperDelegate delegate = HibernateHelper.getDelegate();

        if (delegate instanceof HibernateHelperThreadLocaleImpl)
        {
            active = true;
        }
        else
        {
            log.warn("This filter only functions when used with "
                + HibernateHelperThreadLocaleImpl.class.getName()
                + " as the HibernateHelperDelegate for HibernateHelper");
        }

        if (active)
        {
            // call to super will read config and create hibernate factory
            String configStr = filterConfig.getInitParameter("config");

            if (configStr != null)
            {
                URL configUrl = HibernateFilter.class.getClassLoader()
                                                     .getResource(configStr);

                log.info("Using configfile " + configUrl.toString());
                super.setConfigURL(configUrl);
            }

            try
            {
                super.init();
            }
            catch (ConfigException e)
            {
                log.error(e.getMessage(), e);
                throw new ServletException(e);
            }
        }
    }

