	/**
	 * Constructor
	 */
	public FormPage()
	{
		// create feedback panel to show errors
		final FeedbackPanel feedback = new FeedbackPanel(this, "feedback");
		feedback.setOutputMarkupId(true);

		// add form with markup id setter so it can be updated via ajax
		Form<Bean> form = new Form<Bean>(this, "form", new CompoundPropertyModel<Bean>(bean));
		form.setOutputMarkupId(true);

		FormComponent fc;

		// add form components to the form as usual

		fc = new RequiredTextField(form, "name");
		fc.add(StringValidator.minimumLength(4));
		fc.setLabel(new ResourceModel("label.name"));

		new SimpleFormComponentLabel(form, "name-label", fc);

		fc = new RequiredTextField(form, "email");
		fc.add(EmailAddressPatternValidator.getInstance());
		fc.setLabel(new ResourceModel("label.email"));

		new SimpleFormComponentLabel(form, "email-label", fc);

		// attach an ajax validation behavior to all form component's onkeydown
		// event and throttle it down to once per second

		AjaxFormValidatingBehavior.addToAllFormComponents(form, ClientEvent.KEYUP,
				Duration.ONE_SECOND);

		// add a button that can be used to submit the form via ajax
		new AjaxSubmitButton(form, "ajax-submit-button", form)
		{
			@Override
			protected void onSubmit(AjaxRequestTarget target, Form form)
			{
				target.addComponent(feedback);
			}
		};
	}

