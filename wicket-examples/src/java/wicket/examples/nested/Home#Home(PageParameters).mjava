	/**
	 * Constructor.
	 * 
	 * @param parameters
	 *            Page parameters
	 */
	public Home(final PageParameters parameters)
	{
		// create a list with sublists
		List<Object> l1 = new ArrayList<Object>();
		l1.add("test 1.1");
		l1.add("test 1.2");
		List<Object> l2 = new ArrayList<Object>();
		l2.add("test 2.1");
		l2.add("test 2.2");
		l2.add("test 2.3");
		List<String> l3 = new ArrayList<String>();
		l3.add("test 3.1");
		l2.add(l3);
		l2.add("test 2.4");
		l1.add(l2);
		l1.add("test 1.3");

		// construct the panel
		new NestedList(this, "nestedList", l1);

		// create a tree
		TreeModel treeModel = convertToTreeModel(l1);
		final Tree tree = new Tree(this, "tree", treeModel)
		{
			@Override
			protected String getNodeLabel(DefaultMutableTreeNode node)
			{
				Object userObject = node.getUserObject();
				return (userObject instanceof List) ? "<sub>" : String
						.valueOf(node.getUserObject());
			}
		};
		new Link(this, "expandAll")
		{
			@Override
			public void onClick()
			{
				tree.expandAll(true);
			}
		};

		new Link(this, "collapseAll")
		{
			@Override
			public void onClick()
			{
				tree.expandAll(false);
			}
		};

		// and another one
		new MyTree(this, "tree2", treeModel);

		// and yet another one
		new AnotherTree(this, "tree3", treeModel);
	}

