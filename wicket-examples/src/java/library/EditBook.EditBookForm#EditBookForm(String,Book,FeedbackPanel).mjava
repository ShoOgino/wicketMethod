        /**
         * Constructor
         * @param componentName Name of form
         * @param book Book model
         * @param feedback Feedback component that shows errors
         */
        public EditBookForm(final String componentName, final Book book, final FeedbackPanel feedback)
        {
            super(componentName, feedback);

            // Set model
            this.book = book;
            Model bookModel = new Model(book);
            setModel(new PropertyModel(bookModel, getName()));

            // Create a required text field that edits the book's author
            final TextField author = new TextField("author",
                    new PropertyModel(bookModel, "author"));
            author.add(new RequiredValidator());
            add(author);

            // Create a required text field with a max length of 30 characters that edits the book's title
            final TextField title = new TextField("title",
                    new PropertyModel(bookModel, "title"));
            title.add(new RequiredValidator());
            title.add(LengthValidator.max(30));
            final FormComponentFeedbackBorder titleFeedback =
                new FormComponentFeedbackBorder("titleFeedback");
            titleFeedback.add(title);
            add(titleFeedback);

            // Add fiction checkbox
            add(new CheckBox("fiction", new PropertyModel(bookModel, "fiction")));

            // Books is everything but otherBook
            List books = new ArrayList();
            books.addAll(Book.getBooks());
            books.remove(otherBook);

            // Add companion book choice
            add(new DropDownChoice("companionBook",
                    new PropertyModel(bookModel, "companionBook"), books));

            // Add radio choice test
            final RadioChoice relatedBook = new RadioChoice(
                    "relatedBook", new PropertyModel(bookModel, "relatedBook"));
            relatedBook.add(new RadioOptionSet("relatedBooks", books));
            relatedBook.add(new RadioOption("otherBook", otherBook));
            add(relatedBook);

            // Multi-select among writing styles
            add(new ListMultipleChoice("writingStyles",
                    new PropertyModel(bookModel, "writingStyles"),
                    EnumeratedType.getValues(Book.WritingStyle.class)));
        }

