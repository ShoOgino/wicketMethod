	/**
	 * Start Jetty; inhereting classes can override methods beforeSetUp and afterSetUp for test case
	 * specific behaviour.
	 * 
	 * @throws Exception
	 */
	public void setUp() throws Exception
	{
		// first let current test case set up fixture
		beforeSetUp();
		try
		{
			if (process == null)
			{
				String[] startCommandWithArgs = Util.addCommandArguments(startCommand,
						getJettyConfig(), getPort(), getWebappContextRoot(), getContextPath(),
						isUseJettyPlus());

				JettyExternalVMStartupWorker worker = new JettyExternalVMStartupWorker(
						startCommandWithArgs, monitorPort, commKey, maxTries, sleepBetweenTries);
				worker.start(); // start worker trhead
				worker.join(); // wait for worker to finish

				// throw exception if the worker was not able to start Jetty in time
				if (!worker.isJettyStarted())
				{
					String msg = "Starting Jetty in a seperate VM failed";
					throw new Exception(msg);
				}
				process = worker.getProcess(); // keep reference to external process
			}
		}
		catch (Exception e)
		{
			e.printStackTrace();
			throw e;
		}
		// call for further set up
		afterSetUp();
	}

