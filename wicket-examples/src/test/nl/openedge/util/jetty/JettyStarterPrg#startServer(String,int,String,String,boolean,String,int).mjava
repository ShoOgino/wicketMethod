	/**
	 * Start Jetty Server and the admin monitor.
	 * 
	 * @param jettyConfig
	 *            jetty config location; if null, the next three parameters will be used instead
	 * @param port
	 *            port for http requests
	 * @param webappContextRoot
	 *            webapplication context root
	 * @param contextPath
	 *            context path (webapp name)
	 * @param useJettyPlus
	 *            whether to use JettyPlus
	 * @param monitorCommKey
	 *            auth key
	 * @param monitorPort
	 *            listen port for admin monitor
	 * @throws MalformedURLException when the url is not valid
	 * @throws MultiException when Jetty is unable to startup
	 * @throws JettyHelperException when the server could not be created
	 */
	private static void startServer(String jettyConfig, int port, String webappContextRoot,
			String contextPath, boolean useJettyPlus, String monitorCommKey, int monitorPort)
			throws MalformedURLException, MultiException, JettyHelperException
	{
		Server jettyServer = null;
		// get instance of proper Jetty server
		if (jettyConfig != null) // either start with xml configuration document
		{
			URL jettyConfigURL = null;
			jettyConfigURL = URLHelper.convertToURL(jettyConfig, JettyStarterPrg.class);
			log.info("Creating Jetty with configuration " + jettyConfigURL);
			jettyServer = JettyHelper.getJettyServerInstance(jettyConfigURL, useJettyPlus);
		}
		else
		// or some basic arguments
		{
			jettyServer = JettyHelper.getJettyServerInstance(port, webappContextRoot,
					contextPath, useJettyPlus);
		}

		// now, before starting the server, first create the monitor
		JettyMonitor monitor = JettyMonitor.startMonitor(jettyServer, monitorCommKey,
				monitorPort); // start admin monitor
		log.info("Started " + monitor);

		// finally, start the server
		jettyServer.start();
		log.info("Started " + jettyServer);
	}

