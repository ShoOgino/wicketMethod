	/**
	 * Constructor
	 */
	public EffectsPage()
	{
		final Label c1 = new Label("c1", new PropertyModel<>(this, "counter1"));
		c1.setOutputMarkupId(true);
		add(c1);

		final Label c2 = new Label("c2", new PropertyModel<>(this, "counter2"));
		c2.setOutputMarkupId(true);
		add(c2);

		final Label c3 = new Label("c3", new PropertyModel<>(this, "counter3"));
		c3.setOutputMarkupId(true);
		add(c3);

		add(new AjaxLink<Void>("c1-link")
		{
			@Override
			public void onClick(AjaxRequestTarget target)
			{
				counter1++;
				target.add(c1);
				target.appendJavaScript(String.format("jQuery('#%s').effect('shake');",
					c1.getMarkupId()));
			}

			@Override
			protected void updateAjaxAttributes(AjaxRequestAttributes attributes)
			{
				attributes.setChannel(new AjaxChannel("effects", Type.DROP));

				super.updateAjaxAttributes(attributes);
			}
		});

		add(new AjaxFallbackLink<Void>("c2-link")
		{
			@Override
			public void onClick(Optional<AjaxRequestTarget> targetOptional)
			{
				counter2++;
				targetOptional.ifPresent(target -> {
					target.add(c2);
					target.appendJavaScript(String.format("jQuery('#%s').effect('highlight');",
							c2.getMarkupId()));
				});
			}

			@Override
			protected void updateAjaxAttributes(AjaxRequestAttributes attributes)
			{
				attributes.setChannel(new AjaxChannel("effects", Type.DROP));

				super.updateAjaxAttributes(attributes);
			}
		});

		add(new AjaxFallbackLink<Void>("c3-link")
		{
			@Override
			public void onClick(Optional<AjaxRequestTarget> targetOptional)
			{
				counter3++;
				targetOptional.ifPresent(target -> {
					target.prependJavaScript((String.format("jQuery('#%s').fadeOut(500, Wicket.Ajax.suspendCall());", c3.getMarkupId())));
					target.add(c3);
					target.appendJavaScript((String.format("jQuery('#%s').hide().fadeIn(500);", c3.getMarkupId())));
				});
			}

			@Override
			protected void updateAjaxAttributes(AjaxRequestAttributes attributes)
			{
				attributes.setChannel(new AjaxChannel("effects", Type.DROP));

				super.updateAjaxAttributes(attributes);
			}
		});
	}

