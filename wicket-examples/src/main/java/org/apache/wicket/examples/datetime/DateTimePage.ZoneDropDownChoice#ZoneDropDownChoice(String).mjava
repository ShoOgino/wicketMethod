		public ZoneDropDownChoice(String id)
		{
			super(id, new IModel<List<ZoneId>>()
			{
				private static final long serialVersionUID = 1L;

				@Override
				public List<ZoneId> getObject()
				{
					return ZoneId.getAvailableZoneIds().stream().map(id -> ZoneId.of(id))
						.collect(Collectors.toList());
				}
			});

			setModel(new PropertyModel<ZoneId>(DateTimePage.this, "clientZone"));

			setChoiceRenderer(new IChoiceRenderer<ZoneId>()
			{
				private static final long serialVersionUID = 1L;

				@Override
				public Object getDisplayValue(ZoneId object)
				{
					String name = object.getDisplayName(TextStyle.FULL, getLocale());

					ZoneOffset offset = LocalDateTime.now().atZone(object).getOffset();

					return name + offset;
				}

				@Override
				public String getIdValue(ZoneId object, int index)
				{
					return object.getId();
				}

				@Override
				public ZoneId getObject(String id, IModel<? extends List<? extends ZoneId>> choices)
				{
					return ZoneId.of(id);
				}
			});

			add(new FormComponentUpdatingBehavior()
			{
				private static final long serialVersionUID = 1L;

				protected void onUpdate()
				{
					// clear raw input of all inputs so that values are reformatted
					getForm().clearInput();
				};
			});
		}

