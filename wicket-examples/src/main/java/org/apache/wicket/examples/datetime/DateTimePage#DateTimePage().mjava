	/**
	 * Constructor.
	 */
	public DateTimePage()
	{
		add(TimeField.forShortStyle("time1", Model.of(LocalTime.of(22, 15))));
		add(TimeField.forTimeStyle("time2", Model.of(LocalTime.of(22, 15)), "F"));
		add(new TimeField("time3", Model.of(LocalTime.of(22, 15)), new StyleTimeConverter("S")) {
			private static final long serialVersionUID = 1L;

			@Override
			protected boolean use12HourFormat() {
				return false;
			}
		});
		final DateTimeField datetime1 = new DateTimeField("datetime1", Model.of(LocalDateTime.now()));
		final FeedbackPanel feedback = new FeedbackPanel("feedback");
		Form<String> form = new Form<>("form");
		add(form.add(datetime1)
				.add(feedback.setOutputMarkupId(true))
				.add(new AjaxButton("submit")
				{
					private static final long serialVersionUID = 1L;

					@Override
					protected void onSubmit(AjaxRequestTarget target)
					{
						form.info(String.format("DateTime was just submitted: %s", datetime1.getModelObject()));
						target.add(feedback);
					}

					@Override
					protected void onError(AjaxRequestTarget target)
					{
						target.add(feedback);
					}
				})
			);
	}

