	/**
	 * constructor
	 */
	public DataTablePage()
	{
		List<IColumn<Contact, String>> columns = new ArrayList<>();

		columns.add(new AbstractColumn<Contact, String>(new ResourceModel("actions"))
		{
			@Override
			public void populateItem(Item<ICellPopulator<Contact>> cellItem, String componentId,
				IModel<Contact> model)
			{
				cellItem.add(new ActionPanel(componentId, model));
			}
		});

		columns.add(new PropertyColumn<Contact, String>(new ResourceModel("id"), "id")
		{
			@Override
			public String getCssClass()
			{
				return "numeric";
			}
		});

		columns.add(new LambdaColumn<>(new ResourceModel("firstName"), "firstName", Contact::getFirstName));

		columns.add(new LambdaColumn<Contact, String>(new ResourceModel("lastName"), "lastName", Contact::getLastName)
		{
			@Override
			public String getCssClass()
			{
				return "last-name";
			}
		});

		columns.add(new PropertyColumn<>(new ResourceModel("homePhone"), "homePhone"));
		columns.add(new PropertyColumn<>(new ResourceModel("cellPhone"), "cellPhone"));
		columns.add(new PropertyColumn<>(new ResourceModel("bornDate"), "bornDate"));

		SortableContactDataProvider dataProvider = new SortableContactDataProvider();
		DataTable<Contact, String> dataTable = new DefaultDataTable<>("table", columns,
				dataProvider, 8);
		
		dataTable.addBottomToolbar(new ExportToolbar(dataTable).addDataExporter(new CSVDataExporter() {
			/**
			 * Use converters of this page.
			 * 
			 * @see DataTablePage#createConverter(Class)
			 */
			@Override
			protected IConverterLocator getConverterLocator()
			{
				return DataTablePage.this;
			}
			
			/**
			 * Wrap models on the page so resource properties get picked up. 
			 */
			@Override
			protected <T> IModel<T> wrapModel(IModel<T> model)
			{
				return DataTablePage.this.wrap(model);
			}
		}));

		add(dataTable);

		DataTable<Contact, String> tableWithColGroup = new DataTable<>("tableWithColGroup", columns,
				dataProvider, 8);
		tableWithColGroup.addTopToolbar(new HeadersToolbar<>(tableWithColGroup, dataProvider));
		add(tableWithColGroup);
		
		//This is a table that uses ColGroup to style the columns: 
		ColGroup colgroup = tableWithColGroup.getColGroup();
		colgroup.addCol(colgroup.new Col(AttributeModifier.append("class", "lightblue")));
		colgroup.addCol(colgroup.new Col(AttributeModifier.append("class", "lightgreen")));
		colgroup.addCol(colgroup.new Col(AttributeModifier.append("class", "pink")));
		colgroup.addCol(colgroup.new Col(AttributeModifier.append("class", "yellow")));
		colgroup.addCol(colgroup.new Col(AttributeModifier.append("span", "2"),
			AttributeModifier.append("class", "brown")));
	}

