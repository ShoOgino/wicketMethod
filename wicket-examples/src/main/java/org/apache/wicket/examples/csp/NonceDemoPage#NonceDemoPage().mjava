	public NonceDemoPage()
	{
		super();
		add(new Label("testNonceScript", getString("testNonceScript")));
		add(new Label("testNoNonceScript", getString("testNoNonceScript")));

		final Label clickMeCount = new Label("clickMeCount", clickMeCountModel);
		clickMeCount.setOutputMarkupId(true);
		add(clickMeCount);
		
		final WebMarkupContainer delayedVisible = new WebMarkupContainer("delayedVisible") {
			@Override
			public void renderHead(IHeaderResponse response)
			{
				super.renderHead(response);
				
				response.render(JavaScriptHeaderItem.forReference(JS_DELAYED));
				response.render(CssHeaderItem.forReference(CSS_DELAYED));
			}
		};
		delayedVisible.setOutputMarkupPlaceholderTag(true);
		delayedVisible.setVisible(false);
		add(delayedVisible);
		
		add(new AjaxLink<String>("clickMe")
		{
			@Override
			public void onClick(AjaxRequestTarget target)
			{
				clickMeCountModel.setObject(clickMeCountModel.getObject() + 1);

				// target.add (works even without unsafe-eval)
				target.add(clickMeCount);

				// append javascript (won't work without unsafe-eval)
				target.appendJavaScript("document.querySelector(\".click-me-text\").innerHTML = \"replaced\";");
				
				delayedVisible.setVisible(true);
				target.add(delayedVisible);
			}
		}.setOutputMarkupId(true));
	}

