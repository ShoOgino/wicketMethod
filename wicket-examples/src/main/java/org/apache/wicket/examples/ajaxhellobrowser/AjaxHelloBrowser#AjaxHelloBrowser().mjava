	/**
	 * Constructor.
	 */
	public AjaxHelloBrowser()
	{
		final MultiLineLabel clientInfo = new MultiLineLabel("clientinfo", new IModel<String>()
		{
			@Override
			public String getObject()
			{
				ClientProperties properties = getClientProperties();
				return properties.toString();
			}
		});
		clientInfo.setOutputMarkupPlaceholderTag(true);
		clientInfo.setVisible(false);

		IModel<String> clientTimeModel = () -> {
			ClientProperties properties = getClientProperties();
			TimeZone timeZone = properties.getTimeZone();
			if (timeZone != null)
			{
				Calendar cal = Calendar.getInstance(timeZone);
				Locale locale = getLocale();
				DateFormat dateFormat = DateFormat.getTimeInstance(DateFormat.LONG, locale);
				dateFormat.setTimeZone(timeZone);
				String calAsString = dateFormat.format(cal.getTime());
				StringBuilder b = new StringBuilder("Based on your settings, your time is: ");
				b.append(calAsString);
				b.append(" (and your time zone is ");
				b.append(timeZone.getDisplayName(getLocale()));
				b.append(')');
				return b.toString();
			}
			return "Unfortunately, we were not able to figure out what your time zone is, so we have"
					+ " no idea what your time is";
		};
		final Label clientTime = new Label("clienttime", clientTimeModel);
		clientTime.setOutputMarkupPlaceholderTag(true);
		clientTime.setVisible(false);

		add(new AjaxClientInfoBehavior() {

			@Override
			public void renderHead(Component component, IHeaderResponse response)
			{
				super.renderHead(component, response);

				String script = "Wicket.BrowserInfo.collectExtraInfo = function(info) { info.extendedProperty = 'This property was read extra.'; };";

				response.render(JavaScriptHeaderItem.forScript(script, "extended-client-info"));
			}

			@Override
			protected WebClientInfo newWebClientInfo(RequestCycle requestCycle)
			{
				return new WebClientInfo(requestCycle, new ExtendedClientProperties());
			}

			@Override
			protected void onClientInfo(AjaxRequestTarget target, WebClientInfo webClientInfo)
			{
				clientInfo.setVisible(true);
				clientTime.setVisible(true);

				target.add(clientInfo, clientTime);
			}
		});

		add(clientInfo, clientTime);
	}

