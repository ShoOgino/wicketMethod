	/**
	 * Constructor.
	 * 
	 * @param parameters
	 *            Page parameters
	 */
	public Home(final PageParameters parameters)
	{
		// create a list with sublists
		List l1 = new ArrayList();
		l1.add("test 1.1");
		l1.add("test 1.2");
		List l2 = new ArrayList();
		l2.add("test 2.1");
		l2.add("test 2.2");
		l2.add("test 2.3");
		List l3 = new ArrayList();
		l3.add("test 3.1");
		l2.add(l3);
		l2.add("test 2.4");
		l1.add(l2);
		l1.add("test 1.3");

		// construct the panel
		add(new RecursivePanel("panels", l1));

		// create a tree
		TreeModel treeModel = convertToTreeModel(l1);
		final Tree tree = new Tree("tree", treeModel)
		{
			@Override
			protected String renderNode(TreeNode node)
			{
				DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode)node;
				Object userObject = treeNode.getUserObject();
				return (userObject instanceof List) ? "<subtree>"
					: String.valueOf(treeNode.getUserObject());
			}
		};
		// disable ajax links in this example
		tree.setLinkType(LinkType.REGULAR);

		add(tree);
		add(new Link("expandAll")
		{
			@Override
			public void onClick()
			{
				tree.getTreeState().expandAll();
			}
		});

		add(new Link("collapseAll")
		{
			@Override
			public void onClick()
			{
				tree.getTreeState().collapseAll();
			}
		});

		add(new BookmarkablePageLink("ajaxTreeLink", SimpleTreePage.class));
	}

