	/**
	 * Constructor.
	 */
	public Index()
	{
		// Add the Ajaxian link to the page...
		add(new Link<Void>("link")
		{
			private static final long serialVersionUID = 1L;

			/**
			 * Handles a click on the link. This method is accessed normally using a standard http
			 * request, but in this example, we use Ajax to perform the call.
			 */
			@Override
			public void onClick()
			{
				// Increment count
				count++;

				// The response should refresh the label displaying the counter.
				getRequestCycle().replaceAllRequestHandlers(
					new ComponentRenderingRequestHandler(counter));
			}

			/**
			 * Alter the javascript 'onclick' event to emit the Ajax call and update the counter
			 * label.
			 */
			@Override
			protected String getOnClickScript(CharSequence url)
			{
				IRequestHandler handler = new ListenerInterfaceRequestHandler(
					new PageAndComponentProvider(getPage(), this), ILinkListener.INTERFACE);
				Url componentUrl = RequestCycle.get().mapUrlFor(handler);
				componentUrl.addQueryParameter("anticache", Math.random());
				return new AppendingStringBuffer("new Ajax.Updater('counter', '").append(
					componentUrl)
					.append("', {method:'get'}); return false;")
					.toString();
			}
		});

		// Add the label
		add(counter = new Label("counter", new PropertyModel<>(this, "count")));
	}

