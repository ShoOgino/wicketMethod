	@Override
	protected void renderCollection(Set<ResourceReferenceAndStringData> alreadyRendered,
		BasicGroupingKey key, HttpAggregatingResourceReferenceCollection coll)
	{
		// for debugging:
		getRealResponse().renderString("<!-- " + key + " -->\n");

		// TODO: I'm not sure why yet, but our aggregator fails on wicket-event.js, so for now, we
		// skip aggregating all "UNKNOWN" references
		if (ResourceGroup.UNKNOWN.equals(key.getGroup()))
		{
			super.renderCollection(alreadyRendered, key, coll);
			return;
		}

		// build an aggregated URL:
		StringBuilder refs = new StringBuilder();
		boolean first = true;
		for (ResourceReferenceAndStringData data : coll)
		{
			ResourceReference ref = data.getReference();
			if (!first)
			{
				refs.append('|');
			}
			refs.append(ref.getScope().getName()).append(':').append(ref.getName());
			first = false;
		}

		PageParameters parameters = new PageParameters();
		parameters.add("refs", refs);
		parameters.add("type", key.isCss() ? "css" : "js");
		ResourceReference ref = new PackageResourceReference("merged-resources");
		if (key.isCss())
		{
			getRealResponse().renderCSSReference(ref, parameters, null);
		}
		else
		{
			getRealResponse().renderJavaScriptReference(ref, parameters, null);
		}
	}

