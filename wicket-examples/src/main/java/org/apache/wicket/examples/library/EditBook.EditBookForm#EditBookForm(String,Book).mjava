		/**
		 * Constructor
		 * 
		 * @param id
		 *            id of form
		 * @param book
		 *            Book model
		 */
		public EditBookForm(final String id, final Book book)
		{
			super(id, new CompoundPropertyModel<Book>(book));

			// Create a required text field with a max length of 30 characters
			// that edits the book's title
			final TextField<String> title = new TextField<String>("title");
			title.setRequired(true);
			title.add(new StringValidator(null, 30));

			final MarkupContainer titleFeedback = new FormComponentFeedbackBorder("titleFeedback");
			add(titleFeedback);
			titleFeedback.add(title);

			// Create a required text field that edits the book's author
			final TextField<String> author = new TextField<String>("author");
			author.setRequired(true);
			final MarkupContainer authorFeedback = new FormComponentFeedbackBorder("authorFeedback");
			add(authorFeedback);
			authorFeedback.add(author);

			// Add fiction checkbox
			add(new CheckBox("fiction"));

			// Books is everything but otherBook
			List<Book> books = new ArrayList<Book>();
			books.addAll(Book.getBooks());
			books.remove(otherBook);

			// Add companion book choice
			add(new DropDownChoice<Book>("companionBook", books));

			// Add radio choice test
			final RadioChoice<Book> relatedBook = new RadioChoice<Book>("relatedBook", books);
			add(relatedBook);

			// Multi-select among writing styles
			add(new ListMultipleChoice<EnumeratedType>("writingStyles",
				EnumeratedType.getValues(Book.WritingStyle.class)));
		}

