	/**
	 * Because only servlet 2.4 supports web.xml locale-encoding-mapping-list deployment
	 * descriptors, this is a workaround for servlet 2.3
	 */
	@Override
	protected void configureResponse(final WebResponse response)
	{
		final Locale originalLocale = getSession().getLocale();
		getSession().setLocale(Locale.GERMANY);

		super.configureResponse(response);

		// This is no longer useful in many cases, since we now forward the
		// <?xml ..encoding=".." ?> from the Page's markup and use it explicitly
		// set the responses encoding (see super class implementation).
		// It is however not completely useless, as many html (not xhtml) pages
		// might not have that xml declaration <?xml ..?> string.
		/*
		 * final String encoding = "text/" + getMarkupType() + "; charset=" +
		 * CharSetUtil.getEncoding(getRequestCycle());
		 * 
		 * getResponse().setContentType(encoding);
		 */
		getSession().setLocale(originalLocale);
	}

