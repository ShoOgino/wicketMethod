	/**
	 * Constructor
	 */
	public FormPage()
	{
		// create feedback panel to show errors
		final FeedbackPanel feedbackErrors = new FeedbackPanel("feedbackErrors", new ExactLevelFeedbackMessageFilter(FeedbackMessage.ERROR));
		feedbackErrors.setOutputMarkupId(true);
		add(feedbackErrors);
		
		// create feedback panel to show info message
		final FeedbackPanel feedbackSuccess = new FeedbackPanel("feedbackSuccess", new ExactLevelFeedbackMessageFilter(FeedbackMessage.INFO));
		feedbackSuccess.setOutputMarkupId(true);
		add(feedbackSuccess);
		
		// add form with markup id setter so it can be updated via ajax
		Bean bean = new Bean();
		Form<Bean> form = new Form<Bean>("form", new CompoundPropertyModel<>(bean)) 
		{
			@Override
			protected void onSubmit()
			{
				super.onSubmit();
				info("Form successfully submitted!");
			}
		};
		
		add(form);
		form.setOutputMarkupId(true);

		FormComponent fc;

		// add form components to the form as usual

		fc = new RequiredTextField<>("name");
		fc.add(new StringValidator(4, null));
		fc.setLabel(new ResourceModel("label.name"));

		form.add(fc);
		form.add(new SimpleFormComponentLabel("name-label", fc));

		fc = new RequiredTextField<>("email");
		fc.add(EmailAddressValidator.getInstance());
		fc.setLabel(new ResourceModel("label.email"));

		form.add(fc);
		form.add(new SimpleFormComponentLabel("email-label", fc));

		// attach an ajax validation behavior to all form component's keydown
		// event and throttle it down to once per second

		form.add(new AjaxFormValidatingBehavior("keydown", Duration.ONE_SECOND));
	}

