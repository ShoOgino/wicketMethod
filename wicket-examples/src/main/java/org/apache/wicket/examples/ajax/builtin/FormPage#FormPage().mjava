	/**
	 * Constructor
	 */
	public FormPage()
	{
		// create feedback panel to show errors
		final FeedbackPanel feedback = new FeedbackPanel("feedback");
		feedback.setOutputMarkupId(true);
		add(feedback);

		// add form with markup id setter so it can be updated via ajax
		Bean bean = new Bean();
		Form<Bean> form = new Form<Bean>("form", new CompoundPropertyModel<Bean>(bean));
		add(form);
		form.setOutputMarkupId(true);

		FormComponent fc;

		// add form components to the form as usual

		fc = new RequiredTextField<String>("name");
		fc.add(new StringValidator(4, null));
		fc.setLabel(new ResourceModel("label.name"));

		form.add(fc);
		form.add(new SimpleFormComponentLabel("name-label", fc));

		fc = new RequiredTextField<String>("email");
		fc.add(EmailAddressValidator.getInstance());
		fc.setLabel(new ResourceModel("label.email"));

		form.add(fc);
		form.add(new SimpleFormComponentLabel("email-label", fc));

		// attach an ajax validation behavior to all form component's keydown
		// event and throttle it down to once per second

		AjaxFormValidatingBehavior.addToAllFormComponents(form, "keydown", Duration.ONE_SECOND);

		// add a button that can be used to submit the form via ajax
		form.add(new AjaxButton("ajax-button", form)
		{
			@Override
			protected void onSubmitBeforeForm(AjaxRequestTarget target, Form<?> form)
			{
				// repaint the feedback panel so that it is hidden
				target.add(feedback);
			}

			@Override
			protected void onError(AjaxRequestTarget target, Form<?> form)
			{
				// repaint the feedback panel so errors are shown
				target.add(feedback);
			}
		});
	}

