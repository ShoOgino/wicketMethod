	private void initDownload()
	{
		IResource resource = new ResourceStreamResource() {
			protected IResourceStream getResourceStream() {
				// simulate delay
				try
				{
					TimeUnit.MILLISECONDS.sleep(5000);
				}
				catch (InterruptedException e)
				{
				}
				
				return new StringResourceStream("downloaded via ajax");
			};
			
		}.setFileName("File-from-IResource.txt").setContentDisposition(ContentDisposition.ATTACHMENT).setCacheDuration(Duration.NONE);
		
		final AjaxDownload download = new AjaxDownload(resource) {
			
			@Override
			protected void onBeforeDownload(AjaxRequestTarget target)
			{
				downloadingContainer.setVisible(true);
				target.add(downloadingContainer);
			}

			@Override
			protected void onDownloadSuccess(AjaxRequestTarget target)
			{
				downloadingContainer.setVisible(false);
				target.add(downloadingContainer);
			}
			
			@Override
			protected void onDownloadFailed(AjaxRequestTarget target)
			{
				downloadingContainer.setVisible(false);
				target.add(downloadingContainer);
			}
		};
		add(download);
		
		add(new AjaxLink<Void>("download")
		{
			@Override
			public void onClick(AjaxRequestTarget target)
			{
				download.initiate(target);
			}
		});
	}

