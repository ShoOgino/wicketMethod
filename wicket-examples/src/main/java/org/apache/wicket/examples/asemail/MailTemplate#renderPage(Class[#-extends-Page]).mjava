	/**
	 * Collects the html generated by the rendering of a page.
	 * 
	 * @param pageClass
	 *            the class of the page which should be rendered.
	 * @return the html rendered by a page
	 */
	private CharSequence renderPage(final Class<? extends Page> pageClass)
	{
		PageParameters parameters = new PageParameters();
		parameters.set("name", name);

		final RenderPageRequestHandler handler = new RenderPageRequestHandler(new PageProvider(
			pageClass, parameters), RedirectPolicy.NEVER_REDIRECT);

		final PageRenderer pageRenderer = getApplication().getPageRendererProvider().get(handler);

		RequestCycle originalRequestCycle = getRequestCycle();

		BufferedWebResponse tempResponse = new BufferedWebResponse(null);

		RequestCycleContext requestCycleContext = new RequestCycleContext(originalRequestCycle.getRequest(),
				tempResponse, getApplication().getRootRequestMapper(), getApplication().getExceptionMapperProvider().get());
		RequestCycle tempRequestCycle = new RequestCycle(requestCycleContext);

		final Response oldResponse = originalRequestCycle.getResponse();

		try
		{
			originalRequestCycle.setResponse(tempResponse);
			pageRenderer.respond(tempRequestCycle);
		}
		finally
		{
			originalRequestCycle.setResponse(oldResponse);
		}

		return tempResponse.getText();
	}

