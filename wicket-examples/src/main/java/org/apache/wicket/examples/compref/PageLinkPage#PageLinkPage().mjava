	/**
	 * Constructor
	 */
	public PageLinkPage()
	{
		// Add a page link. You can use PageLink in several ways.
		// An alternative option would have been to use the constructor with
		// the Page instance argument like:
		//
		// add(new PageLink("pageLink", new NonBookmarkablePage(this)));
		//
		// The disadvantage of that is that you need to create an instance right
		// away, which
		// will be kept as session data. Instead, we use the more verbose
		// IPageLink
		// anonymous class, which will create the page instance only when
		// needed.

		add(new PageLink<Void>("pageLink", new IPageLink()
		{
			public Page<?> getPage()
			{
				return new NonBookmarkablePage(PageLinkPage.this);
			}

			public Class<? extends Page<?>> getPageIdentity()
			{
				return NonBookmarkablePage.class;
			}
		}));

		// Note that this would have had the same effect, except that the link
		// wouldn't check
		// whether it points to the current page and thus should be 'turned off'
		// (but actually
		// we don't need that check here, as we are certain that is not the
		// case)
		//
		// add(new Link("navigateBackLink")
		// {
		// public void onClick()
		// {
		// setResponsePage(return new NonBookmarkablePage(PageLinkPage.this););
		// }
		// });
	}

