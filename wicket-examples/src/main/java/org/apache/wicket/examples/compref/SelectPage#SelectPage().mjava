	/**
	 * Constructor
	 */
	public SelectPage()
	{
		final Input input = new Input();
		setDefaultModel(new CompoundPropertyModel<Input>(input));

		// Add a FeedbackPanel for displaying our messages
		FeedbackPanel feedbackPanel = new FeedbackPanel("feedback");
		add(feedbackPanel);

		// Add a form with an onSubmit implementation that sets a message
		Form<?> form = new Form<Void>("form")
		{
			private static final long serialVersionUID = 1L;

			@Override
			protected void onSubmit()
			{
				info("input: " + input);
			}
		};
		add(form);

		Select<String> site = new Select<String>("site");
		form.add(site);
		site.add(new SelectOption<String>("site1", new Model<String>("tss")));
		site.add(new SelectOption<String>("site2", new Model<String>("jl")));
		site.add(new SelectOption<String>("site3", new Model<String>("sd")));
		site.add(new SelectOption<String>("site4", new Model<String>("bn")));

		Select<List<String>> choices = new Select<List<String>>("choices");
		form.add(choices);
		IOptionRenderer<String> renderer = new IOptionRenderer<String>()
		{
			private static final long serialVersionUID = 1L;

			@Override
			public String getDisplayValue(String object)
			{
				return object;
			}

			@Override
			public IModel<String> getModel(String value)
			{
				return new Model<String>(value);
			}

		};
		IModel<Collection<? extends String>> model = new WildcardCollectionModel<String>(
			MANY_CHOICES);
		choices.add(new SelectOptions<String>("manychoices", model, renderer));

	}

