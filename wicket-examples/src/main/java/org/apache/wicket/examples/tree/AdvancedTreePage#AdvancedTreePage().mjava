	/**
	 * Construct.
	 */
	public AdvancedTreePage()
	{
		content = new CheckedFolderContent(provider);

		Form<Void> form = new Form<>("form");
		add(form);

		tree = createTree(provider, new FooExpansionModel());
		tree.add(new Behavior()
		{
			private static final long serialVersionUID = 1L;

			@Override
			public void onComponentTag(Component component, ComponentTag tag)
			{
				theme.onComponentTag(component, tag);
			}

			@Override
			public void renderHead(Component component, IHeaderResponse response)
			{
				theme.renderHead(component, response);
			}
		});
		form.add(tree);

		form.add(new DropDownChoice<Content>("content",
			new PropertyModel<>(this, "content"), initContents(),
			new ChoiceRenderer<>("class.simpleName"))
		{
			private static final long serialVersionUID = 1L;

			@Override
			protected boolean wantOnSelectionChangedNotifications()
			{
				return true;
			}
		});

		form.add(new DropDownChoice<Behavior>("theme", new PropertyModel<>(this, "theme"),
			initThemes(), new ChoiceRenderer<>("class.simpleName"))
		{
			private static final long serialVersionUID = 1L;

			@Override
			protected boolean wantOnSelectionChangedNotifications()
			{
				return true;
			}
		});

		form.add(Link.onClick("expandAll", (link) -> FooExpansion.get().expandAll()));

		form.add(Link.onClick("collapseAll", (link) -> FooExpansion.get().collapseAll()));

		form.add(Button.onSubmit("submit", (btn) -> {}));
	}

