	/**
	 * 
	 * @param name
	 * @return true if class if found, false otherwise
	 */
	protected boolean tryClassHere(String name)
	{
		// don't include classes in the java or javax.servlet package
		if (name != null && (name.startsWith("java.") || name.startsWith("javax.servlet")))
		{
			return false;
		}
		// Scan includes, then excludes
		boolean tryHere;

		// If no explicit includes, try here
		if (patterns == null || patterns.size() == 0)
		{
			tryHere = true;
		}
		else
		{
			// See if it matches include patterns
			tryHere = false;
			Iterator<String> includesIterator = patterns.iterator();
			while (includesIterator.hasNext())
			{
				String rawpattern = includesIterator.next();
				if (rawpattern.length() <= 1)
				{
					continue;
				}
				// FIXME it seems that only "includes" are handled. "Excludes" are ignored
				boolean isInclude = rawpattern.substring(0, 1).equals("+");
				String pattern = rawpattern.substring(1);
				if (WildcardMatcherHelper.match(pattern, name) != null)
				{
					tryHere = isInclude;
				}
			}
		}

		return tryHere;
	}

