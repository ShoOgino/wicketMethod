	/**
	 * @see org.apache.wicket.markup.html.CompressedPackageResource#newResourceStream()
	 */
	@Override
	protected IResourceStream newResourceStream()
	{
		final FilteringResourceStream filteringStream = new FilteringResourceStream()
		{
			private static final long serialVersionUID = 1L;

			@Override
			protected byte[] filterContent(byte[] input)
			{
				try
				{
					// @TODO remove in 1.5
					if (Application.get()
						.getResourceSettings()
						.getStripJavascriptCommentsAndWhitespace())
					{
						String s = new String(input, "UTF-8");
						return JavascriptStripper.stripCommentsAndWhitespace(s).getBytes("UTF-8");
					}

					IJavascriptCompressor compressor = Application.get()
						.getResourceSettings()
						.getJavascriptCompressor();
					if (compressor != null)
					{
						String s = new String(input, "UTF-8");
						return compressor.compress(s).getBytes("UTF-8");
					}

					// don't strip the comments, just return original input
					return input;
				}
				catch (Exception e)
				{
					log.error("Error while filtering content", e);
					return input;
				}
			}

			@Override
			protected IResourceStream getOriginalResourceStream()
			{
				return getPackageResourceStream();
			}
		};

		return new CompressingResourceStream()
		{
			private static final long serialVersionUID = 1L;

			@Override
			protected IResourceStream getOriginalResourceStream()
			{
				return filteringStream;
			}
		};
	}

