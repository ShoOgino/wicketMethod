	/**
	 * Retrieves the Wicket URL from the request object as a request parameter, or if none exists
	 * returns the default URL. The name of the request parameter is stored as a request attribute.
	 * 
	 * <p>
	 * This url is then used to pass on to the matching {@link WicketFilter} to process, by way of
	 * {@link RequestDispatcher} via the filters context path.
	 * 
	 * <p>
	 * A "parameter" is a form field name/value pair passed from the HTML side of the world. Its
	 * value is a String.
	 * 
	 * <p>
	 * An "attribute" is a Java object name/value pair passed only through the internal JavaServer
	 * processes. (I.e. it can come from a JSP or servlet but not an HTML page.) Its value is an
	 * Object.
	 * 
	 * @see PortletRequestContext#getLastEncodedPath()
	 * @param request
	 * @param pageType
	 * @param defaultPage
	 *            url of the default page
	 * @return the Wicket URL from within the specified request
	 */
	protected String getWicketURL(PortletRequest request, String pageType, String defaultPage)
	{
		String wicketURL = null;
		// get the name of the wicket url paramater, as looked up from a request attribute called
		// WicketPortlet#WICKET_URL_PORTLET_PARAMETER_ATTR
		String wicketUrlParameterName = (String)request.getAttribute(WicketPortlet.WICKET_URL_PORTLET_PARAMETER_ATTR);
		if (request instanceof ActionRequest)
		{
			// try to lookup the passed in wicket url parameter
			wicketURL = request.getParameter(wicketUrlParameterName);
		}
		else if (request instanceof ResourceRequest)
		{
			wicketURL = ((ResourceRequest)request).getResourceID();
		}
		else
		{
			// try to lookup the passed in wicket url parameter, suffixed with the portlet mode
			String parameterName = wicketUrlParameterName + request.getPortletMode().toString();
			wicketURL = request.getParameter(parameterName);
		}

		// if the wicketURL could not be retrieved, return the url for the default page
		if (wicketURL == null)
		{
			wicketURL = getWicketConfigParameter(request, CONFIG_PARAM_PREFIX + pageType,
				defaultPage);
		}
		return wicketURL;
	}

