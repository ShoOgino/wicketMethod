		/**
		 * @return list of indexes to navigate from the root of the tree to this node (e.g. the path
		 *         to the node).
		 */
		public List<Integer> getPathIndexes()
		{
			List<Integer> path = new ArrayList<>();
			TreeNode nextChild = this;
			TreeNode parent;
			while ((parent = nextChild.parent) != null)
			{
				int indexOf = parent.children.indexOf(nextChild);
				if (indexOf < 0)
					throw new AssertionError("Child not found in parent");
				path.add(indexOf);
				nextChild = parent;
			}
			Collections.reverse(path);
			return path;
		}

