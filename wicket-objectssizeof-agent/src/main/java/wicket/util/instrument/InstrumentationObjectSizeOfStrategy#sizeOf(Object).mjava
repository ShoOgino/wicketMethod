	/**
	 * Calculates full size of object iterating over its hierarchy graph.
	 * 
	 * @param obj
	 *            object to calculate size of
	 * @return object size
	 * 
	 * @see wicket.util.lang.Objects.IObjectSizeOfStrategy#sizeOf(java.lang.Object)
	 */
	public long sizeOf(Object obj) {
		if (obj == null) {
			return 0;
		}
		Map<Object, Object> visited = new IdentityHashMap<Object, Object>();
		Stack<Object> stack = new Stack<Object>();

		long result = internalSizeOf(obj, stack, visited);
		while (!stack.isEmpty()) {
			result += internalSizeOf(stack.pop(), stack, visited);
		}
		visited.clear();
		return result;
	}

