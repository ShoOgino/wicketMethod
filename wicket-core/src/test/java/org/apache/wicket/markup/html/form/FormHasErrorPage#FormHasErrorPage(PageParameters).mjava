	/**
	 * Constructor that is invoked when page is invoked without a session.
	 * 
	 * @param parameters
	 *            Page parameters
	 */
	public FormHasErrorPage(final PageParameters parameters)
	{

		final IModel<String> labelModel = new Model<String>("");
		Label passFail = new Label("passFail", labelModel);
		add(passFail);

		final SubmitLink submitComponent = new SubmitLink("submitComponent");
		final SubmitLink submitFormComponent = new SubmitLink("submitFormComponent");
		final SubmitLink submitForm = new SubmitLink("submitForm");

		final InvalidPanel invalidPanel = new InvalidPanel("invalidPanel");
		final CheckBox formComponent = new CheckBox("formComponent", new Model<Boolean>());

		Form<Void> form = new Form<Void>("form")
		{
			private static final long serialVersionUID = 1L;

			private transient IFormSubmitter submittingComponent;

			@Override
			protected void onError()
			{
				super.onError();
				labelModel.setObject("Test PASSED - an error was expected.");
			}

			@Override
			protected void onSubmit()
			{
				super.onSubmit();
				labelModel.setObject("Test FAILED - an error was expected");
				Assert.fail("A validation error should've been detected by the Form processing");
			}

			@Override
			public void process(IFormSubmitter submittingComponent)
			{
				// keep submitting component for #onValidate()
				this.submittingComponent = submittingComponent;

				super.process(submittingComponent);
			}

			@Override
			protected void onValidate()
			{
				// set the error based on which link submitted the form
				if (submittingComponent == submitFormComponent)
				{
					formComponent.error("FormComponent validation error");
				}
				else if (submittingComponent == submitComponent)
				{
					invalidPanel.error("Panel validation error");
				}
				else
				{
					error("Form validation error");
				}
			}
		};
		add(form);
		form.add(submitComponent);
		form.add(submitFormComponent);
		form.add(submitForm);

		form.add(invalidPanel);
		form.add(formComponent);

		add(new FeedbackPanel("feedback"));
	}

