	/**
	 * ... and this should throw a {@link PageExpiredException} if the page is expired
	 */
	@ParameterizedTest
	@ValueSource(strings = { "true", "false" })
	void testExpiredPageWithRecreationDisabled(boolean doMount)
	{
		mountPage(doMount);

		tester.getApplication().getPageSettings().setRecreateBookmarkablePagesAfterExpiry(false);
		PageWithLink page = tester.startPage(PageWithLink.class,
			new PageParameters().add("param", "value", INamedParameters.Type.MANUAL));
		Link<?> link = (Link<?>)page.get("link");

		assertThrows(PageExpiredException.class, () -> {
			String url = link.getURL().toString();
			assertEquals(
				"./wicket/bookmarkable/org.apache.wicket.markup.html.link.PageWithLink?0-1.-link",
				url);
			// simulate a page expiry
			url = url.replace("PageWithLink?0", "PageWithLink?3");

			tester.executeUrl(url);
		});
	}

