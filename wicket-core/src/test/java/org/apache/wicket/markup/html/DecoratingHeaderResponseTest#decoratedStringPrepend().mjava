	/**
	 * Basic IHeaderResponseDecorator, just prepending the DECORATED string to resource name.
	 * 
	 * @throws IOException
	 * @throws ResourceStreamNotFoundException
	 * @throws ParseException
	 */
	@Test
	void decoratedStringPrepend() throws IOException, ResourceStreamNotFoundException,
		ParseException
	{
		tester.getApplication()
			.getHeaderResponseDecorators()
			.add(response -> new DecoratingHeaderResponse(response)
			{
				@Override
				public void render(HeaderItem item)
				{
					if (item instanceof JavaScriptReferenceHeaderItem)
					{
						JavaScriptReferenceHeaderItem original =
							(JavaScriptReferenceHeaderItem) item;
						item = JavaScriptHeaderItem.forReference(
							new PackageResourceReference(
								"DECORATED-" + original.getReference().getName()),
							original.getId());
					}
					super.render(item);
				}
			});
		tester.startPage(TestPage.class);
		XmlPullParser parser = new XmlPullParser();
		parser.parse(tester.getLastResponseAsString());
		XmlTag tag = parser.nextTag();
		boolean isDecorated = false;
		do
		{
			if (tag.isOpen() && "script".equals(tag.getName()))
			{
				isDecorated = tag.getAttribute("src").toString().contains("DECORATED");
				if (!isDecorated)
				{
					fail();
				}
				break;
			}
		}
		while ((tag = parser.nextTag()) != null);
		assertTrue(isDecorated);
	}

