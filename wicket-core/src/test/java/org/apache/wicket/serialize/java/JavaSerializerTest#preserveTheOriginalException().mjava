	/**
	 * https://issues.apache.org/jira/browse/WICKET-5667
	 */
	@Test
	void preserveTheOriginalException()
	{
		JavaSerializer serializer = new JavaSerializer("JavaSerializerTest-aa")
		{
			// Override serialize to re-throw the exception instead of just logging it
			// The exception is used later to make the assertions
			@Override
			public byte[] serialize(Object object)
			{
				try
				{
					final ByteArrayOutputStream out = new ByteArrayOutputStream();
					ObjectOutputStream oos = null;
					try
					{
						oos = newObjectOutputStream(out);
						oos.writeObject("applicationKey");
						oos.writeObject(object);
					}
					finally
					{
						try
						{
							IOUtils.close(oos);
						}
						finally
						{
							out.close();
						}
					}
					return out.toByteArray();
				}
				catch (Exception x)
				{
					throw new RuntimeException(x);
				}
			}
		};
		try
		{
			serializer.serialize(new ObjectThatBlowsOnSerialization());
			fail("The serialization should have failed!");
		}
		catch (Exception x)
		{
			Throwable cause0 = x.getCause();
			assertThat(cause0, instanceOf(WicketRuntimeException.class));
			WicketRuntimeException wrx = (WicketRuntimeException) cause0;

			Throwable cause1 = wrx.getCause();
			assertThat(cause1, instanceOf(IllegalStateException.class));
			assertEquals("Cannot serialize me twice!", cause1.getMessage());

			Throwable cause2 = cause1.getCause();
			assertThat(cause2, instanceOf(NotSerializableException.class));
		}
	}

