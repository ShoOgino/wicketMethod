	/**
	 * The test
	 */
	@Test
	public void onRemovalFromHierarchy()
	{
		final RemoveTestPage page = new RemoveTestPage();
		tester.startPage(page);
		// on initial load of the page no calls should have occurred.
		assertEquals("componentOnRemovalFromHierarchy was called.", 0,
			page.getComponentOnRemovalFromHierarchyCalls());
		assertEquals("linkOnRemovalFromHierarchy was called.", 0,
			page.getLinkOnRemovalFromHierarchyCalls());
		assertEquals("behaviorOnRemovalFromHierarchy was called.", 0,
			page.getBehaviorOnRemovalCalls());

		tester.clickLink(PATH);
		// first click provoked a remove, so one call.
		assertEquals("componentOnRemovalFromHierarchy wasn't called.", 1,
			page.getComponentOnRemovalFromHierarchyCalls());
		// test if it got propagated to the children.
		assertEquals("linkOnRemovalFromHierarchy wasn't called.", 1,
			page.getLinkOnRemovalFromHierarchyCalls());
		assertEquals("behaviorOnRemovalFromHierarchy wasn't called.", 1,
			page.getBehaviorOnRemovalCalls());

		try
		{
			tester.clickLink(PATH);
			fail("Missing Exception");
		}
		catch (IllegalStateException wre)
		{
			// do nothing.
			// This exception was expected.
		}
	}

