	/**
	 * The test
	 */
	@Test
	void onRemovalFromHierarchy()
	{
		final RemoveTestPage page = new RemoveTestPage();
		tester.startPage(page);
		// on initial load of the page no calls should have occurred.
		assertEquals(0, page.getComponentOnRemovalFromHierarchyCalls(),
			"componentOnRemovalFromHierarchy was called.");
		assertEquals(0, page.getLinkOnRemovalFromHierarchyCalls(),
			"linkOnRemovalFromHierarchy was called.");
		assertEquals(0, page.getBehaviorOnRemovalCalls(),
			"behaviorOnRemovalFromHierarchy was called.");

		tester.clickLink(PATH);
		// first click provoked a remove, so one call.
		assertEquals(1, page.getComponentOnRemovalFromHierarchyCalls(),
			"componentOnRemovalFromHierarchy wasn't called.");
		// test if it got propagated to the children.
		assertEquals(1, page.getLinkOnRemovalFromHierarchyCalls(),
			"linkOnRemovalFromHierarchy wasn't called.");
		assertEquals(1, page.getBehaviorOnRemovalCalls(),
			"behaviorOnRemovalFromHierarchy wasn't called.");

		try
		{
			tester.clickLink(PATH);
			fail("Missing Exception");
		}
		catch (IllegalStateException wre)
		{
			// do nothing.
			// This exception was expected.
		}
	}

