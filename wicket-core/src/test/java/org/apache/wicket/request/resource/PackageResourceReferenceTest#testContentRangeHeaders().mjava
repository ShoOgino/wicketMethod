	/**
	 * See WICKET-5819 - Media tags
	 */
	@Test
	public void testContentRangeHeaders()
	{
		// Test header fields
		ResourceReference reference = new PackageResourceReference(scope, "resource.txt",
			locales[1], styles[1], variations[1]);
		Request request = tester.getRequestCycle().getRequest();
		Response response = tester.getRequestCycle().getResponse();
		MockHttpServletResponse mockHttpServletResponse = (MockHttpServletResponse)response.getContainerResponse();
		Attributes mockAttributes = new Attributes(request, response);
		reference.getResource().respond(mockAttributes);
		Assert.assertEquals(ContentRangeType.BYTES.getTypeName(),
			mockHttpServletResponse.getHeader("Accept-Range"));
		// For normal: If a resource supports content range no content is delivered
		// if no "Range" header is given, but we have to deliver it, because
		// other resources then media should get the content. (e.g. CSS, JS, etc.) Browsers
		// detecting media requests and automatically add the "Range" header for
		// partial content and they don't make an initial request to detect if a media
		// resource supports Content-Range (by the Accept-Range header)
		Assert.assertEquals("resource_var_style_en.txt",
			new String(mockHttpServletResponse.getBinaryContent()));
	}

