	@Test
	public void shouldRedirectToTargetUrlCondition() {

		boolean ajax;
		RedirectPolicy redirectPolicy;
		boolean redirectToRender;
		boolean targetEqualsCurrentUrl;
		boolean newPageInstance;
		boolean pageStateless;
		boolean sessionTemporary;

		// if
		//		render policy is always-redirect

		ajax=false;
		redirectPolicy=RedirectPolicy.ALWAYS_REDIRECT;
		redirectToRender=false;
		targetEqualsCurrentUrl=false;
		newPageInstance=false;
		pageStateless=false;
		sessionTemporary=false;

		TestPageRenderer renderer = new TestPageRenderer(null);
		Assert.assertTrue(renderer.shouldRedirectToTargetUrl(ajax, redirectPolicy, redirectToRender, targetEqualsCurrentUrl, newPageInstance, pageStateless,sessionTemporary));

		// 	or
		//		it's redirect-to-render
		redirectPolicy=RedirectPolicy.AUTO_REDIRECT;
		redirectToRender=true;

		Assert.assertTrue(renderer.shouldRedirectToTargetUrl(ajax, redirectPolicy, redirectToRender, targetEqualsCurrentUrl, newPageInstance, pageStateless,sessionTemporary));

		//	or
		//		its ajax and the targetUrl matches current url
		redirectToRender=false;
		ajax=true;
		targetEqualsCurrentUrl=true;

		Assert.assertTrue(renderer.shouldRedirectToTargetUrl(ajax, redirectPolicy, redirectToRender, targetEqualsCurrentUrl, newPageInstance, pageStateless,sessionTemporary));

		// 	or
		//		targetUrl DONT matches current url and
		//				is new page instance
		//			or
		//				session is temporary and page is stateless
		ajax=false;
		targetEqualsCurrentUrl=false;
		newPageInstance=true;

		Assert.assertTrue(renderer.shouldRedirectToTargetUrl(ajax, redirectPolicy, redirectToRender, targetEqualsCurrentUrl, newPageInstance, pageStateless,sessionTemporary));

		newPageInstance=false;
		sessionTemporary=true;
		pageStateless=true;

		Assert.assertTrue(renderer.shouldRedirectToTargetUrl(ajax, redirectPolicy, redirectToRender, targetEqualsCurrentUrl, newPageInstance, pageStateless,sessionTemporary));
		// just redirect
	}

