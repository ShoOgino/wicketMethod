	/**
	 * Setup {@link org.apache.wicket.settings.ExceptionSettings.AjaxErrorStrategy#INVOKE_FAILURE_HANDLER}
	 * so Wicket will not redirect to the configured {@link InternalErrorPage}/{@link ExceptionErrorPage}
	 * but will preserve the current page and send http status 500 to wicket-ajax.js
	 */
	@Test
	public void callsOnFailure()
	{

		WicketTester tester = new WicketTester(new DummyApplication()
		{

			/**
			 * @see org.apache.wicket.protocol.http.WebApplication#init()
			 */
			@Override
			protected void init()
			{
				super.init();

				getExceptionSettings().setAjaxErrorHandlingStrategy(
					ExceptionSettings.AjaxErrorStrategy.INVOKE_FAILURE_HANDLER);
			}

		});
		tester.setExposeExceptions(false);
		tester.startPage(InternalErrorCallsAjaxOnFailurePage.class);

		tester.clickLink("failure-link", true);

		MockHttpServletResponse errorPageResponse = tester.getLastResponse();
		assertEquals(500, errorPageResponse.getStatus());

		// assert that the original page is still the last rendered one
		tester.assertRenderedPage(InternalErrorCallsAjaxOnFailurePage.class);
		tester.destroy();
	}

