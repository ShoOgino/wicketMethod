	/**
	 * Verifies that a new instance of date converter is returned
	 * if there is no custom converter registered.
	 *
	 * https://issues.apache.org/jira/browse/WICKET-4839
	 */
	@Test
	public void customDateConverter()
	{

		/**
		 * A custom converter that can override the default
		 * registered DateConverter
		 */
		class CustomDateConverter extends DateConverter
		{
		}

		IConverter<Date> dateConverter = locator.getConverter(Date.class);

		// assert that a DateConverter is returned
		assertSame(DateConverter.class, dateConverter.getClass());
		assertNotSame(CustomDateConverter.class, dateConverter.getClass());

		IConverter<Date> secondDateConverter = locator.getConverter(Date.class);

		// assert that a new instance of DateConverter is returned
		assertNotSame(dateConverter, secondDateConverter);

		locator.set(Date.class, new CustomDateConverter());
		dateConverter = locator.getConverter(Date.class);

		// assert that the CustomDateConverter is returned
		assertNotSame(DateConverter.class, dateConverter.getClass());
		assertSame(CustomDateConverter.class, dateConverter.getClass());

	}

