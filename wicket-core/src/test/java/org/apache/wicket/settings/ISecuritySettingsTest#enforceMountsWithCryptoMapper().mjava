	/**
	 * https://issues.apache.org/jira/browse/WICKET-5560
	 */
	@Test
	void enforceMountsWithCryptoMapper()
	{
		WebApplication app = tester.getApplication();

		IRequestHandler handler = new BookmarkablePageRequestHandler(
			new PageProvider(UnknownPage.class));

		String plainTextNonMountedUrl = tester.urlFor(handler).toString();

		assertTrue(plainTextNonMountedUrl.startsWith("wicket/bookmarkable/"),
			"Plain text non mounted url should start with wicket/bookmarkable/: " +
				plainTextNonMountedUrl);

		tester.executeUrl(plainTextNonMountedUrl);
		tester.assertRenderedPage(UnknownPage.class);

		app.setRootRequestMapper(new CryptoMapper(app.getRootRequestMapper(), app));

		/*
		 * Execute dummy request to get WicketTester to re-initialise with CryptoMapper in place.
		 */
		tester.executeUrl("");

		String encryptedNonMountedUrl = tester.urlFor(handler).toString();

		assertFalse(encryptedNonMountedUrl.startsWith("wicket/bookmarkable/"),
			"Encrypted URL should not start with wicket/bookmarkable/" + encryptedNonMountedUrl);

		tester.executeUrl(plainTextNonMountedUrl);
		assertNull(tester.getLastRenderedPage());
		tester.executeUrl(encryptedNonMountedUrl);
		tester.assertRenderedPage(UnknownPage.class);

		app.mountPackage("unknown", UnknownPage.class);

		tester.executeUrl(plainTextNonMountedUrl);
		assertNull(tester.getLastRenderedPage());
		tester.executeUrl(encryptedNonMountedUrl);
		tester.assertRenderedPage(UnknownPage.class);

		app.getSecuritySettings().setEnforceMounts(true);

		tester.executeUrl(plainTextNonMountedUrl);
		assertNull(tester.getLastRenderedPage());
		tester.executeUrl(encryptedNonMountedUrl);
		assertNull(tester.getLastRenderedPage());
	}

