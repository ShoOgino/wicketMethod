	/**
	 * Check if {@code value} can be added to the list of other values.
	 * 
	 * @param value
	 *            The value to add.
	 * @param existingDirectiveValues
	 *            The other values.
	 * @throws IllegalArgumentException
	 *             if the given value is invalid.
	 */
	public void checkValueForDirective(CSPRenderable value,
			List<CSPRenderable> existingDirectiveValues)
	{
		if (!existingDirectiveValues.isEmpty())
		{
			if (CSPDirectiveSrcValue.WILDCARD.equals(value)
				|| CSPDirectiveSrcValue.NONE.equals(value))
			{
				throw new IllegalArgumentException(
					"A -src directive can't contain an * or a 'none' if it already contains other values ");
			}
			if (existingDirectiveValues.contains(CSPDirectiveSrcValue.WILDCARD)
				|| existingDirectiveValues.contains(CSPDirectiveSrcValue.NONE))
			{
				throw new IllegalArgumentException(
					"A -src directive can't contain other values if it already contains an * or a 'none'");
			}
		}

		if (value instanceof CSPDirectiveSrcValue)
		{
			return;
		}

		if (value instanceof CSPDirectiveSandboxValue)
		{
			throw new IllegalArgumentException(
				"A -src directive can't contain any of the sandbox directive values");
		}

		String strValue = value.render(null, null);
		if ("data:".equals(strValue) || "https:".equals(strValue))
		{
			return;
		}

		// strip off "*." so "*.example.com" becomes "example.com" and we can check if
		// it
		// is a valid uri
		if (strValue.startsWith("*."))
		{
			strValue = strValue.substring(2);
		}

		try
		{
			new URI(strValue);
		}
		catch (URISyntaxException urise)
		{
			throw new IllegalArgumentException("Illegal URI for -src directive", urise);
		}
	}

