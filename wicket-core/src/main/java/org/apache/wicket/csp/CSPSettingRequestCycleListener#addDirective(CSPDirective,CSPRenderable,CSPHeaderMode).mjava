	private CSPSettingRequestCycleListener addDirective(CSPDirective directive, CSPRenderable value,
			CSPHeaderMode mode)
	{
		// Add backwards compatible frame-src
		// see http://caniuse.com/#feat=contentsecuritypolicy2
		if (CSPDirective.CHILD_SRC.equals(directive))
		{
			addDirective(CSPDirective.FRAME_SRC, value, mode);
		}
		switch (mode)
		{
			case BLOCKING:
				if (blockingDirectives.get(directive) == null)
				{
					blockingDirectives.put(directive, new ArrayList<>());
				}
				directive.checkValueForDirective(value, blockingDirectives.get(directive));
				blockingDirectives.get(directive).add(value);
				return this;
			case REPORT_ONLY:
				if (reportingDirectives.get(directive) == null)
				{
					reportingDirectives.put(directive, new ArrayList<>());
				}
				directive.checkValueForDirective(value, reportingDirectives.get(directive));
				reportingDirectives.get(directive).add(value);
				return this;
			default:
				throw new IllegalArgumentException("Incorrect CSPHeaderMode!");
		}

	}

