	/**
	 * Creates an {@link AjaxSubmitLink} based on lambda expressions
	 *
	 * @param id
	 *            the id of ajax submit link
	 * @param onSubmit
	 *            the {@link WicketBiConsumer} which accepts the {@link AjaxRequestTarget} and the
	 *            {@link Form}
	 * @param onError
	 *            the {@link WicketBiConsumer} which accepts the {@link AjaxRequestTarget} and the
	 *            {@link Form}
	 * @return the {@link AjaxSubmitLink}
	 */
	public static AjaxSubmitLink onSubmit(String id,
	                                            WicketBiConsumer<AjaxSubmitLink, AjaxRequestTarget> onSubmit,
	                                            WicketBiConsumer<AjaxSubmitLink, AjaxRequestTarget> onError)
	{
		Args.notNull(onSubmit, "onSubmit");
		Args.notNull(onError, "onError");

		return new AjaxSubmitLink(id)
		{
			private static final long serialVersionUID = 1L;

			@Override
			public void onSubmit(AjaxRequestTarget target, Form<?> form)
			{
				onSubmit.accept(this, target);
			}

			@Override
			protected void onError(AjaxRequestTarget target, Form<?> form)
			{
				onError.accept(this, target);
			}
		};
	}

