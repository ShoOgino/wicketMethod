	@Override
	public void renderHead(Component component, IHeaderResponse response)
	{
		super.renderHead(component, response);

		// a function that registers a click listener which dynamically
		// extracts the currently selected checkboxes/radios on every click
		AppendingStringBuffer asb = new AppendingStringBuffer();
		asb.append("function attachChoiceHandlers(markupId, attrs) {\n");
		asb.append(" function getInputValues(groupId, attributes) {\n");
		asb.append("  var result = [], srcElement = attributes.event.target;\n");

		asb.append("  var inputNode = srcElement;\n");
		asb.append("  if (!inputNode.checked) return;\n");
		asb.append("  if (!inputNode.type) return;\n");
		asb.append("  if (!(inputNode.className.indexOf('wicket-'+markupId)>=0)&&!(inputNode.id.indexOf(markupId+'-')>=0)) return;\n");
		asb.append("  var inputType = inputNode.type.toLowerCase();\n");
		asb.append("  if (inputType === 'checkbox' || inputType === 'radio') {\n");
		asb.append("   var name = inputNode.name, value = inputNode.value;\n");
		asb.append("   result.push({ name: name, value: value });\n");
		asb.append("  }\n"); // if (checkbox or radio)

		asb.append("  return result;\n");
		asb.append(" }\n"); // function getInputValues()
		asb.append(" attrs.pre = (attrs.pre || []).concat([ function(attributes) { return attributes.event.target.tagName.toLowerCase() === 'input'; } ]);\n");
		asb.append(" attrs.dep = (attrs.dep || []).concat([ function(attributes) { var deps = getInputValues(markupId, attributes); return deps; } ]);\n");
		asb.append(" Wicket.Ajax.post(attrs);\n");
		asb.append("}\n"); // function attachChoiceHandlers()

		response.render(JavaScriptHeaderItem.forScript(asb, "attachChoice-" + component.getMarkupId()));

		String onLoadScript = String.format("attachChoiceHandlers('%s', %s)",
				component.getMarkupId(), renderAjaxAttributes(component));
		response.render(OnLoadHeaderItem.forScript(onLoadScript));

	}

