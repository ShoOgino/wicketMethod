	@Override
	public void renderHead(Component component, IHeaderResponse response)
	{
		super.renderHead(component, response);

		// a function that registers a click listener which dynamically
		// extracts the currently selected checkboxes/radios on every click
		AppendingStringBuffer asb = new AppendingStringBuffer();
		asb.append("function attachChoiceHandlers(markupId, attrs) {\n");
		asb.append(" function getInputValues(groupId) {\n");
		asb.append("  var result = [];\n");
		asb.append("  var inputNodes = Wicket.$(groupId).getElementsByTagName('input');\n");
		asb.append("  for (var i = 0 ; i < inputNodes.length ; i ++) {\n");
		asb.append("   var inputNode = inputNodes[i];\n");
		asb.append("   if (!inputNode.checked) continue;\n");
		asb.append("   if (!inputNode.type) continue;\n");
		asb.append("   if (!(inputNode.className.indexOf('wicket-'+markupId)>=0)&&!(inputNode.id.indexOf(markupId+'-')>=0)) continue;\n");
		asb.append("   var inputType = inputNode.type.toLowerCase();\n");
		asb.append("   if (inputType === 'checkbox' || inputType === 'radio') {\n");
		asb.append("    var name = inputNode.name, value = inputNode.value;\n");
		asb.append("    result.push({ name: name, value: value });\n");
		asb.append("   }\n"); // if
		asb.append("  }\n");  // for
		asb.append("  return result;\n");
		asb.append(" }\n"); // function getInputValues()
		asb.append(" attrs.dep = [ function() { var deps = getInputValues(markupId); return deps; } ];\n");
		asb.append(" Wicket.Ajax.post(attrs);\n");
		asb.append("}\n"); // function attachChoiceHandlers()

		response.render(JavaScriptHeaderItem.forScript(asb, "attachChoice-" + component.getMarkupId()));

		String onLoadScript = String.format("attachChoiceHandlers('%s', %s)",
				component.getMarkupId(), renderAjaxAttributes(component));
		response.render(OnLoadHeaderItem.forScript(onLoadScript));

	}

