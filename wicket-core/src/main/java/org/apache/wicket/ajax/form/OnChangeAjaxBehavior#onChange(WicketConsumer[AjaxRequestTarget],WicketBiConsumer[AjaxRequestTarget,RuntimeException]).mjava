	/**
	 * Creates an {@link OnChangeAjaxBehavior} based on lambda expressions
	 * 
	 * @param onChange
	 *            the {@link WicketConsumer} which accepts the {@link AjaxRequestTarget}
	 * @param onError
	 *            the {@link WicketBiConsumer} which accepts the {@link AjaxRequestTarget} and the
	 *            {@link RuntimeException}
	 * @return the {@link OnChangeAjaxBehavior}
	 */
	public static OnChangeAjaxBehavior onChange(WicketConsumer<AjaxRequestTarget> onChange,
	                                            WicketBiConsumer<AjaxRequestTarget, RuntimeException> onError)
	{
		Args.notNull(onChange, "onChange");
		Args.notNull(onError, "onError");

		return new OnChangeAjaxBehavior()
		{
			private static final long serialVersionUID = 1L;

			@Override
			protected void onUpdate(AjaxRequestTarget target)
			{
				onChange.accept(target);
			}

			@Override
			protected void onError(AjaxRequestTarget target, RuntimeException e)
			{
				onError.accept(target, e);
			}
		};
	}

