	/**
	 * Creates an {@link AjaxFormComponentUpdatingBehavior} based on lambda expressions
	 * 
	 * @param eventName
	 *            the event name
	 * @param onUpdate
	 *            the {@code SerializableConsumer} which accepts the {@link AjaxRequestTarget}
	 * @param onError
	 *            the {@code SerializableBiConsumer} which accepts the {@link AjaxRequestTarget} and
	 *            the {@link RuntimeException}
	 * @return the {@link AjaxFormComponentUpdatingBehavior}
	 */
	public static AjaxFormComponentUpdatingBehavior onUpdate(String eventName,
		SerializableConsumer<AjaxRequestTarget> onUpdate,
		SerializableBiConsumer<AjaxRequestTarget, RuntimeException> onError)
	{
		Args.notNull(onUpdate, "onUpdate");
		Args.notNull(onError, "onError");

		return new AjaxFormComponentUpdatingBehavior(eventName)
		{
			private static final long serialVersionUID = 1L;

			@Override
			protected void onUpdate(AjaxRequestTarget target)
			{
				onUpdate.accept(target);
			}

			@Override
			protected void onError(AjaxRequestTarget target, RuntimeException e)
			{
				onError.accept(target, e);
			}
		};
	}

