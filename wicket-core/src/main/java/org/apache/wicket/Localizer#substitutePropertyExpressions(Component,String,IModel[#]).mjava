	/**
	 * Helper method to handle property variable substitution in strings.
	 * 
	 * @param component
	 *            The component requesting a model value
	 * @param string
	 *            The string to substitute into
	 * @param model
	 *            The model
	 * @return The resulting string
	 */
	public String substitutePropertyExpressions(final Component component, final String string,
		final IModel<?> model)
	{
		if ((string != null) && (model != null))
		{
			return new PropertyVariableInterpolator(string, model.getObject())
			{
				@Override
				protected String toString(Object value)
				{
					IConverter converter;
					if (component == null)
					{
						converter = Application.get()
							.getConverterLocator()
							.getConverter(value.getClass());
					}
					else
					{
						converter = component.getConverter(value.getClass());
					}

					return converter.convertToString(value, Session.get().getLocale());
				}
			}.toString();
		}
		return string;
	}

