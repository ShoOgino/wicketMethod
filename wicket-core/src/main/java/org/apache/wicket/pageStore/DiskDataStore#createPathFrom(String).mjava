	/**
	 * creates a three-level path from the sessionId in the format 0000/0000/<sessionId>. The two
	 * prefixing directories are created from the sessionId's hashcode and thus, should be well
	 * distributed.
	 *
	 * This is used to avoid problems with Filesystems allowing no more than 32k entries in a
	 * directory.
	 *
	 * Note that the prefix paths are created from Integers and not guaranteed to be four chars
	 * long.
	 *
	 * @param sessionId
	 *      must not be null
	 * @return path in the form 0000/0000/sessionId
	 */
	private String createPathFrom(final String sessionId)
	{
		int sessionIdHashCode = sessionId.hashCode();
		if (sessionIdHashCode == Integer.MIN_VALUE) {
			// Math.abs(MIN_VALUE) == MIN_VALUE, so avoid it
			sessionIdHashCode += 1;
		}
		int hash = Math.abs(sessionIdHashCode);
		String low = String.valueOf(hash % 9973);
		String high = String.valueOf((hash / 9973) % 9973);
		StringBuilder bs = new StringBuilder(sessionId.length() + 10);
		bs.append(low);
		bs.append(File.separator);
		bs.append(high);
		bs.append(File.separator);
		bs.append(sessionId);

		return bs.toString();
	}

