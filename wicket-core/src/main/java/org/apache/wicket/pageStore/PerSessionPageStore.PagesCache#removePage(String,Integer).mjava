		/**
		 *
		 * @param sessionId
		 *          The id of the http session
		 * @param pageId
		 *          The id of the page to remove from the cache
		 * @return the removed {@link org.apache.wicket.page.IManageablePage} or <code>null</code> - otherwise
		 */
		@Override
		public IManageablePage removePage(final String sessionId, final Integer pageId)
		{
			IManageablePage result = null;

			if (maxEntriesPerSession > 0)
			{
				Args.notNull(sessionId, "sessionId");
				Args.notNull(pageId, "pageId");

				SoftReference<ConcurrentSkipListMap<PageValue, IManageablePage>> pagesPerSession = cache.get(sessionId);
				if (pagesPerSession != null)
				{
					ConcurrentMap<PageValue, IManageablePage> pages = pagesPerSession.get();
					if (pages != null)
					{
						PageValue pv = new PageValue(pageId);
						IManageablePage page = pages.remove(pv);
						if (page != null)
						{
							result = page;
						}
					}
				}
			}

			return result;
		}

