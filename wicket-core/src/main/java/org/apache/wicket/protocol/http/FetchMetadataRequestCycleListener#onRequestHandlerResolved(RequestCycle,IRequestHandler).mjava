  @Override
  public void onRequestHandlerResolved(RequestCycle cycle, IRequestHandler handler)
  {
    handler = unwrap(handler);
    IPageRequestHandler pageRequestHandler = getPageRequestHandler(handler);
    if (pageRequestHandler == null) {
      return;
    }

    IRequestablePage targetedPage = pageRequestHandler.getPage();
    HttpServletRequest containerRequest = (HttpServletRequest)cycle.getRequest()
        .getContainerRequest();

    String pathInfo = containerRequest.getPathInfo();
    if (exemptedPaths.contains(pathInfo)) {
      if (log.isDebugEnabled()) {
        log.debug("Allowing request to {} because it matches an exempted path",
            new Object[]{pathInfo});
      }
      return;
    }

    for (ResourceIsolationPolicy resourceIsolationPolicy : resourceIsolationPolicies) {
      if (!resourceIsolationPolicy.isRequestAllowed(containerRequest, targetedPage)) {
        if (log.isDebugEnabled()) {
          log.debug("Isolation policy {} has rejected a request to {}",
              new Object[]{Classes.simpleName(resourceIsolationPolicy.getClass()), pathInfo});
        }
        throw new AbortWithHttpErrorCodeException(ERROR_CODE, ERROR_MESSAGE);
      }
    }
  }

