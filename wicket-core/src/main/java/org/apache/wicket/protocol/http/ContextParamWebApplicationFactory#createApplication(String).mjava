	/**
	 * Instantiates the application instance.
	 * 
	 * @param applicationClassName
	 *            the classname of the application to create
	 * @return the web application
	 */
	protected WebApplication createApplication(final String applicationClassName)
	{
		try
		{
			ClassLoader loader = Thread.currentThread().getContextClassLoader();
			if (loader == null)
			{
				loader = getClass().getClassLoader();
			}

			// see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6500212
			// final Class<?> applicationClass = loader.loadClass(applicationClassName);
			final Class<?> applicationClass = Class.forName(applicationClassName, false, loader);
			if (WebApplication.class.isAssignableFrom(applicationClass))
			{
				// Construct WebApplication subclass
				return (WebApplication)applicationClass.newInstance();
			}
			else
			{
				throw new WicketRuntimeException("Application class " + applicationClassName +
					" must be a subclass of WebApplication");
			}
		}
		catch (ClassNotFoundException e)
		{
			throw new WicketRuntimeException("Unable to create application of class " +
				applicationClassName, e);
		}
		catch (InstantiationException e)
		{
			throw new WicketRuntimeException("Unable to create application of class " +
				applicationClassName, e);
		}
		catch (IllegalAccessException e)
		{
			throw new WicketRuntimeException("Unable to create application of class " +
				applicationClassName, e);
		}
		catch (SecurityException e)
		{
			throw new WicketRuntimeException("Unable to create application of class " +
				applicationClassName, e);
		}
	}

