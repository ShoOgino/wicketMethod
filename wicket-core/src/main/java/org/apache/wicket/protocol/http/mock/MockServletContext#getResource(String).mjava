	/**
	 * Get the URL for a particular resource that is relative to the web app root directory.
	 *
	 * @param name
	 *            The name of the resource to get
	 * @return The resource, or null if resource not found
	 * @throws MalformedURLException
	 *             If the URL is invalid
	 */
	@Override
	public URL getResource(String name) throws MalformedURLException
	{
		if (webappRoot == null)
		{
			return null;
		}

		URL result = null;

		if (name.startsWith("/"))
		{
			name = name.substring(1);
		}

		File f = new File(webappRoot, name);
		if (f.exists())
		{
			result = f.toURI().toURL();
		}

		if (result == null)
		{
			result = getClass().getClassLoader().getResource("META-INF/resources/" + name);
		}

		return result;
	}

