	/**
	 * Try to find Enclosures that have their controllers added already, and add them to the target.
	 */
	@Override
	public void onBeforeRespond(final Map<String, Component> map, final AjaxRequestTarget target)
	{
		final List<String> keysToRemove = new ArrayList<>();

		target.getPage().visitChildren(InlineEnclosure.class, new IVisitor<InlineEnclosure, Void>()
		{
			@Override
			public void component(final InlineEnclosure enclosure, final IVisit<Void> visit)
			{
				Iterator<Map.Entry<String, Component>> entriesItor = map.entrySet().iterator();
				while (entriesItor.hasNext())
				{
					Map.Entry<String, Component> entry = entriesItor.next();
					Component component = entry.getValue();
					if (isControllerOfEnclosure(component, enclosure))
					{
						final Component controller = component;
						target.add(enclosure);
						visit.dontGoDeeper();
						enclosure.visitChildren(new IVisitor<Component, Void>() {
							@Override
							public void component(Component descendant, IVisit<Void> visit) {
								if (descendant == controller) {
									// if the controlling component is in the enclosure we do not need to repaint it
									// individually, it will be repainted as part of the enclosure repaint
									keysToRemove.add(controller.getId());
								}
							}
						});
						break;
					}
				}
			}
		});

		for (String key : keysToRemove)
		{
			map.remove(key);
		}
	}

