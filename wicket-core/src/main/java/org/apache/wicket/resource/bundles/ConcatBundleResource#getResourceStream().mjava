	@Override
	public IResourceStream getResourceStream()
	{
		List<IResourceStream> streams = collectResourceStreams();

		if (streams == null)
		{
			return null;
		}

		final String contentType = findContentType(streams);
		final Instant lastModified = findLastModified(streams);
		AbstractResourceStream ret = new AbstractResourceStream()
		{
			private static final long serialVersionUID = 1L;

			private byte[] bytes;
			
			private ByteArrayInputStream inputStream;

			private byte[] getBytes() {
				if (bytes == null) {
					try
					{
						bytes = readAllResources(streams);
					}
					catch (IOException e)
					{
						return null;
					}
					catch (ResourceStreamNotFoundException e)
					{
						return null;
					}
				}
				
				return bytes;
			}
			
			@Override
			public InputStream getInputStream() throws ResourceStreamNotFoundException
			{
				if (inputStream == null) {
					inputStream = new ByteArrayInputStream(getBytes());				
				}
				
				return inputStream;
			}

			@Override
			public Bytes length()
			{
				return Bytes.bytes(getBytes().length);
			}

			@Override
			public String getContentType()
			{
				return contentType;
			}

			@Override
			public Instant lastModifiedTime()
			{
				return lastModified;
			}

			@Override
			public void close() throws IOException
			{
				if (inputStream != null) {
					inputStream.close();					
				}
			}
		};
		return ret;
	}

