	@Override
	public IResourceStream getResourceStream()
	{
		List<IResourceStream> resources = collectResourceStreams();

		if (resources == null)
		{
			return null;
		}

		byte[] bytes;
		try
		{
			bytes = readAllResources(resources);
		}
		catch (IOException e)
		{
			return null;
		}
		catch (ResourceStreamNotFoundException e)
		{
			return null;
		}

		final String contentType = findContentType(resources);
		final Instant lastModified = findLastModified(resources);
		final ByteArrayInputStream inputStream = new ByteArrayInputStream(bytes);
		final long length = bytes.length;
		AbstractResourceStream ret = new AbstractResourceStream()
		{
			private static final long serialVersionUID = 1L;

			@Override
			public InputStream getInputStream() throws ResourceStreamNotFoundException
			{
				return inputStream;
			}

			@Override
			public Bytes length()
			{
				return Bytes.bytes(length);
			}

			@Override
			public String getContentType()
			{
				return contentType;
			}

			@Override
			public Instant lastModifiedTime()
			{
				return lastModified;
			}

			@Override
			public void close() throws IOException
			{
				inputStream.close();
			}
		};
		return ret;
	}

