	/**
	 * If subclasses of this class have special cases where they force something into a particular
	 * bucket, regardless of the filters, they can create a Runnable that renders to the real
	 * response, and pass it to this method with the name of the filter (bucket) that they want it
	 * to appear in.
	 * 
	 * Example: <code>
	               public void renderJavascriptIntoHead(final String js, final String id) {
	                       runWithFilter(new Runnable() {
	                               public void run()
	                               {
	                                       getRealResponse().renderJavascript(js, id);
	                               }
	                       }, "headerBucket");
	               }
	        * </code>
	 * 
	 * @param runnable
	 *            the runnable that renders to the real response.
	 * @param filterName
	 *            the name of the filter bucket that you want the runnable to render into
	 */
	protected final void runWithFilter(Runnable runnable, String filterName)
	{
		run(runnable, responseFilterMap.get(filterName));
	}

