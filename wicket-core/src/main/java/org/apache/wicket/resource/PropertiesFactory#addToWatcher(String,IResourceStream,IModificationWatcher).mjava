	/**
	 * Add the resource stream to the file being watched
	 * 
	 * @param path
	 * @param resourceStream
	 * @param watcher
	 */
	private void addToWatcher(final String path, final IResourceStream resourceStream,
		final IModificationWatcher watcher)
	{
		watcher.add(resourceStream, new IChangeListener()
		{
			public void onChange()
			{
				log.info("A properties files has changed. Removing all entries " +
					"from the cache. Resource: " + resourceStream);

				// Clear the whole cache as associated localized files may
				// be affected and may need reloading as well.
				clearCache();

				// Inform all listeners
				for (IPropertiesChangeListener listener : afterReloadListeners)
				{
					try
					{
						listener.propertiesChanged(path);
					}
					catch (Exception ex)
					{
						PropertiesFactory.log.error("PropertiesReloadListener has thrown an exception: " +
							ex.getMessage());
					}
				}
			}
		});
	}

