	/**
	 * Creates a {@link Behavior} that uses the given {@code SerializableConsumer consumer} to do
	 * something with the component's tag.
	 *
	 * <p>
	 * Usage:<br/>
	 * <code>component.add(onTag(tag -> tag.put(key, value)));</code>
	 * </p>
	 *
	 * @param onTagConsumer
	 *            the {@code SerializableConsumer} that accepts the {@link ComponentTag}
	 * @return The created behavior
	 */
	public static Behavior onTag(SerializableConsumer<ComponentTag> onTagConsumer)
	{
		Args.notNull(onTagConsumer, "onTagConsumer");

		return new Behavior()
		{
			@Override
			public void onComponentTag(Component component, ComponentTag tag)
			{
				onTagConsumer.accept(tag);
			}
		};
	}

