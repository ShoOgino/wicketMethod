	private void check(Object obj)
	{
		if (obj == null)
		{
			return;
		}

		try
		{
			if (stack.contains(obj))
			{
				return;
			}
		}
		catch (RuntimeException e)
		{
			log.warn("Wasn't possible to check the object '{}' possible due an problematic " +
					"implementation of equals method", obj.getClass());
			/*
			 * Can't check if this obj were in stack, giving up because we don't want to throw an
			 * invaluable exception to user. The main goal of this checker is to find non
			 * serializable data
			 */
			return;
		}

		stack.push(obj);
		try
		{
			internalCheck(obj);
		}
		finally
		{
			stack.pop();
		}
	}

