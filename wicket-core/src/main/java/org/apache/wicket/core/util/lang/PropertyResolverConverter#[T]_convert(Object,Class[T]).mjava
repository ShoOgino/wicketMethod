	/**
	 * @param <T>
	 *            target type
	 * @param object
	 * @param clz
	 * @return converted value of the type given, or null if the value cannot be converted to the
	 *         given type.
	 */
	public <T> T convert(Object object, Class<T> clz)
	{
		if (object == null)
		{
			return null;
		}
		if (clz.isAssignableFrom(object.getClass()))
		{
			@SuppressWarnings("unchecked")
			T result = (T)object;
			return result;
		}
		IConverter<T> converter = converterSupplier.getConverter(clz);
		if (object instanceof String)
		{
			return converter.convertToObject((String)object, locale);
		}
		else if (clz == String.class)
		{
			@SuppressWarnings("unchecked")
			T result = (T)convertToString(object, locale);
			return result;
		}
		else
		{
			T result;
			try
			{
				result = Objects.convertValue(object, clz);
			}
			catch (RuntimeException ex)
			{
				result = null;
			}
			if (result == null)
			{
				String tmp = convertToString(object, locale);
				result = converter.convertToObject(tmp, locale);
			}
			return result;
		}
	}

