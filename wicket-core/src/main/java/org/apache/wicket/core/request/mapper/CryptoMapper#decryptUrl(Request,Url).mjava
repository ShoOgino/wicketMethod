	protected Url decryptUrl(final Request request, final Url encryptedUrl)
	{
		/*
		 * If the encrypted URL has no segments it is the home page URL,
		 * and does not need decrypting.
		 */
		if (encryptedUrl.getSegments().isEmpty())
		{
			return encryptedUrl;
		}

		List<String> encryptedSegments = encryptedUrl.getSegments();

		Url url = new Url(request.getCharset());
		try
		{
			/*
			 * The first encrypted segment contains an encrypted version of the
			 * entire plain text url.
			 */
			String encryptedUrlString = encryptedSegments.get(0);
			if (Strings.isEmpty(encryptedUrlString))
			{
				return null;
			}

			String decryptedUrl = getCrypt().decryptUrlSafe(encryptedUrlString);
			if (decryptedUrl == null)
			{
				return null;
			}
			Url originalUrl = Url.parse(decryptedUrl, request.getCharset());

			int originalNumberOfSegments = originalUrl.getSegments().size();
			int encryptedNumberOfSegments = encryptedUrl.getSegments().size();

			HashedSegmentGenerator generator = new HashedSegmentGenerator(encryptedUrlString);
			int segNo = 1;
			for (; segNo < encryptedNumberOfSegments; segNo++)
			{
				if (segNo > originalNumberOfSegments)
				{
					break;
				}

				String next = generator.next();
				String encryptedSegment = encryptedSegments.get(segNo);
				if (!next.equals(encryptedSegment))
				{
					/*
					 * This segment received from the browser is not the same as the
					 * expected segment generated by the HashSegmentGenerator. Hence it,
					 * and all subsequent segments are considered plain text siblings of the
					 * original encrypted url.
					 */
					break;
				}

				/*
				 * This segments matches the expected checksum, so we add the corresponding
				 * segment from the original URL.
				 */
				url.getSegments().add(originalUrl.getSegments().get(segNo - 1));
			}
			/*
			 * Add all remaining segments from the encrypted url as plain text segments.
			 */
			for (; segNo < encryptedNumberOfSegments; segNo++)
			{
				// modified or additional segment
				url.getSegments().add(encryptedUrl.getSegments().get(segNo));
			}

			url.getQueryParameters().addAll(originalUrl.getQueryParameters());
			// WICKET-4923 additional parameters
			url.getQueryParameters().addAll(encryptedUrl.getQueryParameters());
		}
		catch (Exception e)
		{
			log.error("Error decrypting URL", e);
			url = null;
		}

		return url;
	}

