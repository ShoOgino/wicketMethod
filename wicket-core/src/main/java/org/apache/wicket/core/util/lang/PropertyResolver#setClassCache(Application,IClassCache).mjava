	/**
	 * Sets the {@link IGetAndSetLocator} for the given application.
	 *
	 * If the Application is null then it will be the default if no application is found. So if you
	 * want to be sure that your {@link IGetAndSetLocator} is handled in all situations then call this
	 * method twice with your implementations. One time for the application and the second time with
	 * null.
	 *
	 * @param application
	 *            to use or null if the default must be set.
	 * @param classCache
	 */
	@Deprecated
	public static void setClassCache(final Application application, final IClassCache classCache)
	{
		setLocator(application, new IGetAndSetLocator() {
			
			private DefaultGetAndSetLocator locator = new DefaultGetAndSetLocator();
			
			@Override
			public IGetAndSet getAndSet(Class<?> clz, String name) {
				Map<String, IGetAndSet> map = classCache.get(clz);
				if (map == null) {
					map = new ConcurrentHashMap<String, IGetAndSet>(8);
					classCache.put(clz, map);
				}
				
				IGetAndSet getAndSetter = map.get(name);
				if (getAndSetter == null) {
					getAndSetter = locator.getAndSet(clz, name);
					map.put(name, getAndSetter);
				}
				
				return getAndSetter;
			}
		});
	}

