	/**
	 * Lazy loads the stream settings on demand
	 *
	 * @param initialize
	 *            a flag indicating whether to load the settings
	 * @return the meta data with the stream settings
	 */
	private StreamData getData(boolean initialize)
	{
		if (streamData == null && initialize)
		{
			streamData = new StreamData();

			try
			{
				streamData.connection = url.openConnection();
				streamData.contentLength = streamData.connection.getContentLength();

				// Default implementation "sun.net.www.MimeTable" works on strings with "/" only and
				// doesn't properly parse paths nor URLs. So providing an absolute URI is compatible
				// with the default implementation, while the string can't be misinterpreted as path
				// like has been the case with "URL.getFile" before. That doesn't decode to paths,
				// results only look similar sometimes.
				String uriStr = url.toURI().toString();

				if (Application.exists())
				{
					streamData.contentType = Application.get().getMimeType(uriStr);
				}
				else
				{
					streamData.contentType = streamData.connection.getContentType();
				}

				if (streamData.contentType == null || streamData.contentType.contains("unknown"))
				{
					streamData.contentType = URLConnection.getFileNameMap().getContentTypeFor(
						uriStr);
				}
			}
			catch (IOException | URISyntaxException ex)
			{
				throw new IllegalArgumentException("Invalid URL parameter " + url, ex);
			}
		}

		return streamData;
	}

