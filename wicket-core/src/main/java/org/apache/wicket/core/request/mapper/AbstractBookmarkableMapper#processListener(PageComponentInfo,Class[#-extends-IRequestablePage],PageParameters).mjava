	/**
	 * Creates a {@code IRequestHandler} that notifies an {@link IRequestListener}.
	 * 
	 * @param pageComponentInfo
	 * @param pageClass
	 * @param pageParameters
	 * @return a {@code IRequestHandler} that notifies an {@link IRequestListener}.
	 */
	protected IRequestHandler processListener(PageComponentInfo pageComponentInfo,
		Class<? extends IRequestablePage> pageClass, PageParameters pageParameters)
	{
		PageInfo pageInfo = pageComponentInfo.getPageInfo();
		ComponentInfo componentInfo = pageComponentInfo.getComponentInfo();
		Integer renderCount = null;

		if (componentInfo != null)
		{
			renderCount = componentInfo.getRenderCount();
		}

		PageAndComponentProvider provider = new PageAndComponentProvider(pageInfo.getPageId(),
			pageClass, pageParameters, renderCount, componentInfo.getComponentPath());

		provider.setPageSource(getContext());

		checkExpiration(provider, pageInfo);

		return new ListenerInterfaceRequestHandler(provider, componentInfo.getBehaviorId());
	}

