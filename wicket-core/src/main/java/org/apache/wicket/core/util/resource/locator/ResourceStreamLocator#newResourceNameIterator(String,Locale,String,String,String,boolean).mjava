	/**
	 * 
	 * @see org.apache.wicket.core.util.resource.locator.IResourceStreamLocator#newResourceNameIterator(java.lang.String,
	 *      java.util.Locale, java.lang.String, java.lang.String, java.lang.String, boolean)
	 */
	@Override
	public IResourceNameIterator newResourceNameIterator(final String path, final Locale locale,
		final String style, final String variation, final String extension, final boolean strict)
	{
		final Iterable<String> extensions;

		final String realPath;

		if ((extension == null) && (path != null) && (path.indexOf('.') != -1))
		{
			// extract the path and extension
			realPath = Strings.beforeLast(path, '.');
			String realExtension = Strings.afterLast(path, '.');
			if (realExtension.indexOf(',') > -1)
			{
				// multiple extensions are not allowed in the path parameter
				// it could be an attack, so ignore it and pretend there are no resources
				return new EmptyResourceNameIterator();
			}

			// add a minimized file to the resource lookup if necessary
			if (Application.exists() &&
				Application.get().getResourceSettings().getUseMinifiedResources())
			{
				extensions = Arrays.asList("min." + realExtension, realExtension);
			}
			else
			{
				extensions = Collections.singleton(realExtension);
			}
		}
		else
		{
			realPath = path;
			if (extension == null)
			{
				extensions = NO_EXTENSIONS;
			}
			else
			{
				String[] commaSeparated = Strings.split(extension, ',');
				List<String> nonMinifiedExtensions = Arrays.asList(commaSeparated);

				// add a minimized file to the resource lookup if necessary
				if (Application.exists() &&
					Application.get().getResourceSettings().getUseMinifiedResources())
				{
					ArrayList<String> minifiedExtensions = new ArrayList<>();
					for (String nonMinifiedExtension : nonMinifiedExtensions)
					{
						minifiedExtensions.add("min." + nonMinifiedExtension);
						minifiedExtensions.add(nonMinifiedExtension);
					}
					extensions = minifiedExtensions;
				}
				else
				{
					extensions = nonMinifiedExtensions;
				}
			}
		}

		return newResourceNameIterator(realPath, locale, style, variation, extensions, strict);
	}

