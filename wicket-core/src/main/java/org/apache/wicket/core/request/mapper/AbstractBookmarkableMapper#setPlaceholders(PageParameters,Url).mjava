	/**
	 * Replaces mandatory and optional parameters with their values.
	 *
	 * If a mandatory parameter is not provided then the method returns {@code false}
	 * indicating that there is a problem.
	 * Optional parameters with missing values are just dropped.
	 *
	 * @param parameters
	 *          The parameters with the values
	 * @param url
	 *          The url with the placeholders
	 * @return
	 *          {@code true} if all mandatory parameters are properly substituted,
	 *          {@code false} - otherwise
	 */
	protected boolean setPlaceholders(PageParameters parameters, Url url)
	{
		boolean mandatoryParametersSet = true;

		int dropped = 0;
		for (int i = 0; i < mountSegments.length; ++i)
		{
			String placeholder = getPlaceholder(mountSegments[i]);
			String optionalPlaceholder = getOptionalPlaceholder(mountSegments[i]);
			if (placeholder != null)
			{
				if (parameters.getNamedKeys().contains(placeholder))
				{
					url.getSegments().set(i - dropped, parameters.get(placeholder).toString());
					parameters.remove(placeholder);
				}
				else
				{
					mandatoryParametersSet = false;
					break;
				}
			}
			else if (optionalPlaceholder != null)
			{
				if (parameters.getNamedKeys().contains(optionalPlaceholder))
				{
					url.getSegments().set(i - dropped, parameters.get(optionalPlaceholder).toString(""));
					parameters.remove(optionalPlaceholder);
				}
				else
				{
					url.getSegments().remove(i - dropped);
					dropped++;
				}
			}
		}

		return mandatoryParametersSet;
	}

