	/**
	 * Adds components.
	 */
	private void initComps()
	{
		IModel<ClientProperties> properties = new AbstractReadOnlyModel<ClientProperties>()
		{
			@Override
			public ClientProperties getObject()
			{
				return WebSession.get().getClientInfo().getProperties();
			}
		};

		// hide the formerly used meta-tag from markup
		// TODO remove in Wicket 8
		add(new WebMarkupContainer("meta") {
			protected void onAfterRender() {
				super.onAfterRender();

				log.warn("remove the meta tag with wicket:id=\"meta\" from the markup of your BrowserInfoPage subclass");
			}
		}.setVisible(false));

		add(new ContinueLink("link", properties));

		browserInfoForm = new BrowserInfoForm("postback", properties)
		{
			private static final long serialVersionUID = 1L;

			@Override
			protected void afterSubmit()
			{
				getModelObject().setJavaScriptEnabled(true);

				continueToOriginalDestination();

				// switch to home page if no original destination was intercepted
				setResponsePage(getApplication().getHomePage());
			}
		};
		add(browserInfoForm);
	}

