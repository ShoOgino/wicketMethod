	/**
	 * Called (by the default implementation of 'process') when all fields validated, the form was
	 * updated and it's data was allowed to be persisted. It is meant for delegating further
	 * processing to clients.
	 * <p>
	 * This implementation first finds out whether the form processing was triggered by a nested
	 * IFormSubmittingComponent of this form. If that is the case, that component's onSubmit is
	 * called first.
	 * </p>
	 * <p>
	 * Regardless of whether a submitting component was found, the form's onSubmit method is called
	 * next.
	 * </p>
	 * 
	 * @param submittingComponent
	 *            the component that triggered this form processing, or null if the processing was
	 *            triggered by something else (like a non-Wicket submit button or a javascript
	 *            execution)
	 */
	protected void delegateSubmit(IFormSubmitter submittingComponent)
	{
		final Form<?> processingForm = findFormToProcess(submittingComponent);

		if (submittingComponent == null)
		{
			// no submitter => just process the forms
			submitFormsIncludingNested(processingForm);
		}
		else
		{
			// submitter button was clicked => check order
			final SubmitOrder submitOrder = submittingComponent.getSubmitOrder();
			switch (submitOrder)
			{
				case BEFORE_FORM :
					submittingComponent.onSubmit();
					submitFormsIncludingNested(processingForm);
					break;
				case AFTER_FORM :
					submitFormsIncludingNested(processingForm);
					submittingComponent.onSubmit();
					break;
				default :
					throw new IllegalStateException("unknown submitorder: " + submitOrder);
			}
		}
	}

