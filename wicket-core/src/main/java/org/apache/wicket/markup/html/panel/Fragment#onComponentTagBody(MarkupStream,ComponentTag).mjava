	/**
	 * {@inheritDoc}
	 */
	@Override
	protected void onComponentTagBody(final MarkupStream markupStream, final ComponentTag openTag)
	{
		// Skip the components body. It will be replaced by the fragment
		if (markupStream.getPreviousTag().isOpen())
		{
			markupStream.skipRawMarkup();
			if (markupStream.get().closes(openTag) == false)
			{
				throw new MarkupException(markupStream, "close tag not found for tag: " +
					openTag.toString() + ". Component: " + this.toString());
			}
		}

		// Get the fragments open tag
		MarkupStream stream = new MarkupStream(getMarkup(null));
		ComponentTag fragmentOpenTag = stream.getTag();

		// if it is an open close tag, skip this fragment.
		if (!fragmentOpenTag.isOpenClose())
		{
			// We'll completely ignore the fragments open tag. It'll not be
			// rendered
			stream.next();

			// Render the body of the fragment
			super.onComponentTagBody(stream, fragmentOpenTag);
		}
	}

