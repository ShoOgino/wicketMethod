	/**
	 * Take the markup string, parse it and return the Markup (list of MarkupElements).
	 * <p>
	 * Limitation: Please note that MarkupFactory is NOT used and thus no caching is used (which
	 * doesn't matter for Strings anyway), but what might matter is that your own MarkupFilters are
	 * not applied, which you might have registered with MarkupFactory.
	 *
	 * @param markup
	 *      the string to use as markup
	 * @param wicketNamespace
	 *      the namespace for Wicket elements and attributes
	 * @return Markup The parsed markup
	 */
	public static Markup of(final String markup, String wicketNamespace)
	{
		try
		{
			MarkupParser markupParser = new MarkupParser(markup);
			markupParser.setWicketNamespace(wicketNamespace);
			return markupParser.parse();
		}
		catch (IOException ex)
		{
			throw new RuntimeException(ex);
		}
		catch (ResourceStreamNotFoundException ex)
		{
			throw new RuntimeException(ex);
		}
	}

