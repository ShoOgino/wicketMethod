	/**
	 * If a default IFormSubmittingComponent was set on this form, this method will be called to
	 * render an extra field with an invisible style so that pressing enter in one of the textfields
	 * will do a form submit using this component. This method is overridable as what we do is best
	 * effort only, and may not what you want in specific situations. So if you have specific
	 * usability concerns, or want to follow another strategy, you may override this method.
	 * 
	 * @see #addDefaultSubmitButtonHandler(IHeaderResponse)
	 */
	protected void appendDefaultButtonField()
	{
		AppendingStringBuffer buffer = new AppendingStringBuffer();

		// hidden div
		buffer.append(String.format("<div hidden=\"\" class=\"%s\">",
			getString(HIDDEN_FIELDS_CSS_CLASS_KEY)));

		// add an empty textfield (otherwise IE doesn't work)
		buffer.append("<input type=\"text\" tabindex=\"-1\" autocomplete=\"off\"/>");

		// add the submitting component
		buffer
			.append(String.format("<input id=\"%s\" type=\"submit\" tabindex=\"-1\" name=\"%s\" />",
				getHiddenFieldsId(HIDDEN_FIELDS_SUBMIT_IDX),
				defaultSubmittingComponent.getInputName()));

		// close div
		buffer.append("</div>");
		
		getResponse().write(buffer);
	}

