	/**
	 * Returns an id using the request-relative counter associated with the 
	 * underlying {@link org.apache.wicket.markup.MarkupResourceStream}'s owner container 
	 * (see {@link org.apache.wicket.markup.MarkupResourceStream#getContainerInfo()}). 
	 * This can be useful for autocomponent tags that need to get a tag id.
	 * 
	 * @return
	 * 		the request-relative id
	 */
	protected int getRequestUniqueId()
	{
		RequestCycle requestCycle = RequestCycle.get();
		Map<String, AtomicInteger> markupUniqueCounters = requestCycle.getMetaData(REQUEST_COUNTER_KEY);
		ContainerInfo containerInfo = getMarkupResourceStream().getContainerInfo();
		String cacheKey = containerInfo != null ? containerInfo.getContainerClass().getCanonicalName() : null;
		
		if (markupUniqueCounters == null)
		{
			markupUniqueCounters = new HashMap<>();
			
			requestCycle.setMetaData(REQUEST_COUNTER_KEY, markupUniqueCounters);
		}
		
		AtomicInteger counter = markupUniqueCounters.get(cacheKey);
		
		if (counter == null)
		{
			counter = new AtomicInteger();
			markupUniqueCounters.put(cacheKey, counter);
		}
		
 	    int cacheHash = cacheKey == null ? 0 : cacheKey.hashCode();
		
 	    //add the counter value to the string hash 
 	    //using the same algorithm of String#hashCode() 
 	    return  cacheHash * 31 + counter.getAndIncrement();
	}

