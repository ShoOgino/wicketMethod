	/**
	 * Method for dispatching/calling a interface on a page from the given url. Used by
	 * {@link org.apache.wicket.markup.html.form.Form#onFormSubmitted()} for dispatching events
	 * 
	 * @param page
	 *            The page where the event should be called on.
	 * @param url
	 *            The url which describes the component path and the interface to be called.
	 */
	private void dispatchEvent(final Page page, final String url)
	{
		// the current requst's url is most likely wicket/page?x-y.IFormSubmitListener-path-to-form
		// while the passed in url is most likely page?x.y.IOnChangeListener-path-to-component
		// we transform the passed in url into wicket/page?x-y.IOnChangeListener-path-to-component
		// so the system mapper can interpret it
		Url resolved = new Url(getRequest().getUrl());
		resolved.resolveRelative(Url.parse(url));

		IRequestMapper mapper = getApplication().getRootRequestMapper();
		Request request = getRequest().cloneWithUrl(resolved);
		IRequestHandler handler = mapper.mapRequest(request);

		if (handler != null)
		{
			getRequestCycle().scheduleRequestHandlerAfterCurrent(handler);
		}
	}

