	/**
	 * Converts submitted choice ids to choice objects.
	 * 
	 * @param ids
	 *            choice ids. this array is nonnull and always contains at least one id.
	 * @return list of choices.
	 */
	protected List<T> convertChoiceIdsToChoices(String[] ids)
	{
		ArrayList<T> selectedValues = new ArrayList<T>();

		// If one or more ids is selected
		if (ids != null && ids.length > 0 && !Strings.isEmpty(ids[0]))
		{
			// Get values that could be selected
			final Map<String, T> choiceIds2choiceValues = createChoicesIdsMap();

			// Loop through selected indices
			for (String id : ids)
			{
				if (choiceIds2choiceValues.containsKey(id))
				{
					selectedValues.add(choiceIds2choiceValues.get(id));
				}
			}
		}
		addRetainedDisabled(selectedValues);

		return selectedValues;

	}

