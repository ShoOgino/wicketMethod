	/**
	 * Renders button image.
	 * 
	 * @see RenderedDynamicImageResource#render(Graphics2D)
	 */
	@Override
	protected boolean render(Graphics2D graphics, Attributes attributes)
	{
		// Get width and height
		final int width = getWidth();
		final int height = getHeight();

		// Get size of text
		graphics.setFont(getFont());
		final FontMetrics fontMetrics = graphics.getFontMetrics();
		final int dxText = fontMetrics.stringWidth(label);
		final int dxMargin = 10;

		// Does text fit with a nice margin?
		if (dxText > width - dxMargin)
		{
			// Re-render as a larger button
			setWidth(dxText + dxMargin);
			return false;
		}
		else
		{
			// Turn on anti-aliasing
			graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
				RenderingHints.VALUE_ANTIALIAS_ON);

			// Draw background
			Color bgColor = getBackgroundColor();
			graphics.setColor(bgColor);
			graphics.fillRect(0, 0, width, height);

			// Draw round rectangle
			graphics.setColor(getColor());
			graphics.setBackground(bgColor);
			graphics.fillRoundRect(0, 0, width, height, arcWidth, arcHeight);

			// Draw text
			graphics.setColor(getTextColor());
			final int x = (width - dxText) / 2;
			final int y = (getHeight() - fontMetrics.getHeight()) / 2;
			graphics.drawString(label, x, y + fontMetrics.getAscent());
			return true;
		}
	}

