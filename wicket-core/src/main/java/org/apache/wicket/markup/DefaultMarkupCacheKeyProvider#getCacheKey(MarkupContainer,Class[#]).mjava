	/**
	 * Construct a proper key value for the cache
	 * 
	 * @param container
	 *            The container requesting the markup
	 * @param clazz
	 *            The clazz to get the key for
	 * @return Key that uniquely identifies any markup that might be associated with this markup
	 *         container.
	 */
	@Override
	public String getCacheKey(final MarkupContainer container, final Class<?> clazz)
	{
		final String classname = clazz.getName();
		final StringBuilder buffer = new StringBuilder(classname.length() + 64);
		buffer.append(classname);

		final String variation = container.getVariation();
		if (variation != null)
		{
			buffer.append('_').append(variation);
		}

		final String style = container.getStyle();
		if (style != null)
		{
			buffer.append('_').append(style);
		}

		final Locale locale = container.getLocale();
		if (locale != null)
		{
			buffer.append('_').append(locale.toString());
		}

		buffer.append('.').append(container.getMarkupType().getExtension());
		return buffer.toString();
	}

