	/**
	 * Create a new markup parser. Markup parsers read the markup and dissect it in Wicket relevant
	 * pieces {@link MarkupElement}'s (kind of Wicket's DOM).
	 * <p>
	 * MarkupParser's can be extended by means of {@link IMarkupFilter}. You can add your own filter
	 * as follows:
	 * 
	 * <pre>
	 *    public MyMarkupFactory {
	 *      ...
	 *      public MarkupParser newMarkupParser(final MarkupResourceStream resource) {
	 *         MarkupParser parser = super.newMarkupParser(resource);
	 *         parser.add(new MyFilter());
	 *         return parser;
	 *      }
	 *    }
	 * </pre>
	 * 
	 * @see #onAppendMarkupFilter(IMarkupFilter)
	 * 
	 * @param resource
	 *            The resource containing the markup
	 * @return A fresh instance of {@link MarkupParser}
	 */
	public MarkupParser newMarkupParser(final MarkupResourceStream resource)
	{
		// Markup parsers can not be re-used
		return new MarkupParser(newXmlPullParser(), resource)
		{
			@Override
			protected IMarkupFilter onAppendMarkupFilter(final IMarkupFilter filter)
			{
				return MarkupFactory.this.onAppendMarkupFilter(filter);
			}
		};
	}

