	/**
	 * Returns a IModel checking whether the predicate holds for the contained object, if it is not
	 * {@code null}. If the predicate doesn't evaluate to {@code true}, the contained object will be {@code null}.
	 *
	 * @param predicate
	 *            a predicate to be used for testing the contained object
	 * @return a new IModel
	 */
	default IModel<T> filter(SerializablePredicate<? super T> predicate)
	{
		Args.notNull(predicate, "predicate");
		return new IModel<T>()
		{
			@Override
			public T getObject()
			{
				T object = IModel.this.getObject();
				if (object != null && predicate.test(object))
				{
					return object;
				}
				else
				{
					return null;
				}
			}

			@Override
			public void detach()
			{
				IModel.this.detach();
			}
		};
	}

