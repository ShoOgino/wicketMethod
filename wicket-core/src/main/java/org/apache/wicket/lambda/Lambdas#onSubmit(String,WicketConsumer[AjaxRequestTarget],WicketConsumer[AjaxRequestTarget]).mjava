	/**
	 * Creates an {@link AjaxFormSubmitBehavior} based on lambda expressions
	 * 
	 * @param eventName
	 *            the event name
	 * @param onSubmit
	 *            the {@link WicketConsumer} which accepts the {@link AjaxRequestTarget}
	 * @param onError
	 *            the {@link WicketConsumer} which accepts the {@link AjaxRequestTarget}
	 * @return the {@link AjaxFormSubmitBehavior}
	 */
	public static AjaxFormSubmitBehavior onSubmit(String eventName,
		WicketConsumer<AjaxRequestTarget> onSubmit, WicketConsumer<AjaxRequestTarget> onError)
	{
		Args.notNull(onSubmit, "onSubmit");
		Args.notNull(onError, "onError");

		return new AjaxFormSubmitBehavior(eventName)
		{
			private static final long serialVersionUID = 1L;

			@Override
			protected void onSubmit(AjaxRequestTarget target)
			{
				onSubmit.accept(target);
			}

			@Override
			protected void onError(AjaxRequestTarget target)
			{
				onError.accept(target);
			}
		};
	}

