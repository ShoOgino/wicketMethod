	/**
	 *
	 */
	private void setupNextRequestCycle()
	{
		request = new MockHttpServletRequest(application, httpSession, servletContext);
		request.setURL(request.getContextPath() + request.getServletPath() + "/");

		// assign protocol://host:port to next request unless the last request was ajax
		final boolean assignBaseLocation = lastRequest != null &&
			lastRequest.getHeader("Wicket-Ajax") == null;

		// resume request processing with scheme://host:port from last request
		if (assignBaseLocation)
		{
			request.setScheme(lastRequest.getScheme());
			request.setSecure(lastRequest.isSecure());
			request.setServerName(lastRequest.getServerName());
			request.setServerPort(lastRequest.getServerPort());
		}

		transferRequestCookies();

		response = new MockHttpServletResponse(request);

		// Preserve response cookies in redirects
		// XXX: is this really needed ? Browsers wont do that, but some
		// Wicket tests assert that a cookie is in the response,
		// even after redirects (see org.apache.wicket.util.cookies.SetCookieAndRedirectTest.statefulPage())
		// They should assert that the cookie is in the next *request*
		if (lastResponse != null && lastResponse.isRedirect())
		{
			List<Cookie> lastResponseCookies = lastResponse.getCookies();
			for (Cookie cookie : lastResponseCookies)
			{
				if (cookie.getMaxAge() != 0)
				{
					// max-age==0 are already handled in #transferRequestCookies() above
					response.addCookie(cookie);
				}
			}
		}

		ServletWebRequest servletWebRequest = newServletWebRequest();
		requestCycle = application.createRequestCycle(servletWebRequest,
			newServletWebResponse(servletWebRequest));
		ThreadContext.setRequestCycle(requestCycle);

		if (session == null)
		{
			newSession();
		}
	}

