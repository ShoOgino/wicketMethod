	/**
	 * Loads the template if it is not loaded yet
	 */
	private void load() {
		if (buffer.length() == 0)
		{
			String path = Packages.absolutePath(scope, fileName);

			Application app = Application.get();

			// first try default class loading locator to find the resource
			IResourceStream stream = app.getResourceSettings()
				.getResourceStreamLocator()
				.locate(scope, path, getStyle(), getVariation(), getLocale(), null, false);

			if (stream == null)
			{
				// if the default locator didn't find the resource then fallback
				stream = new ResourceStreamLocator().locate(scope, path, getStyle(), getVariation(), getLocale(), null, false);
			}

			if (stream == null)
			{
				throw new IllegalArgumentException("resource " + fileName + " not found for scope " +
					scope + " (path = " + path + ")");
			}

			setLastModified(stream.lastModifiedTime());

			try
			{
				if (encoding != null)
				{
					buffer.append(Streams.readString(stream.getInputStream(), encoding));
				}
				else
				{
					buffer.append(Streams.readString(stream.getInputStream()));
				}
			}
			catch (IOException e)
			{
				throw new RuntimeException(e);
			}
			catch (ResourceStreamNotFoundException e)
			{
				throw new RuntimeException(e);
			}
			finally
			{
				try
				{
					stream.close();
				}
				catch (IOException e)
				{
					log.error(e.getMessage(), e);
				}
			}
		}
	}

