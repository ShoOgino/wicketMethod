	/**
	 * Get a resource reference matching the parameters from the registry or if not found and
	 * requested, create an default resource reference and add it to the registry.
	 * <p>
	 * Part of the search is scanning the class (scope) and it's superclass for static
	 * ResourceReference fields. Found fields get registered automatically (but are different from
	 * auto-generated ResourceReferences).
	 * 
	 * @see #createDefaultResourceReference(org.apache.wicket.request.resource.ResourceReference.Key)
	 * @see ClassScanner
	 * 
	 * @param key
	 *            The data making up the resource reference
	 * @param strict
	 *            If true, "weaker" combination of scope, name, locale etc. are not tested
	 * @param createIfNotFound
	 *            If true a default resource reference is created if no entry can be found in the
	 *            registry. The newly created resource reference will be added to the registry.
	 * @return Either the resource reference found in the registry or, if requested, a resource
	 *         reference automatically created based on the parameters provided. The automatically
	 *         created resource reference will automatically be added to the registry.
	 */
	public final ResourceReference getResourceReference(final Key key, final boolean strict,
		final boolean createIfNotFound)
	{
		ResourceReference resource = _getResourceReference(key.getScope(), key.getName(),
			key.getLocale(), key.getStyle(), key.getVariation(), strict);

		// Nothing found so far?
		if (resource == null)
		{
			// Scan the class (scope) and it's super classes for static fields containing resource
			// references. Such resources are registered as normal resource reference (not
			// auto-added).
			if (scanner.scanClass(key.getScopeClass()) > 0)
			{
				// At least one new resource reference got registered => Search the registry again
				resource = _getResourceReference(key.getScope(), key.getName(), key.getLocale(),
					key.getStyle(), key.getVariation(), strict);
			}

			// Still nothing found => Shall a new reference be auto-created?
			if ((resource == null) && createIfNotFound)
			{
				resource = addDefaultResourceReference(key);
			}
		}

		return resource;
	}

