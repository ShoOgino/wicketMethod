	/**
	 * Return {@link IRequestHandler} for the given exception.
	 * 
	 * @param e exception to handle
	 * @return RequestHandler instance
	 *
	 * @see IRequestCycleListener#onException(RequestCycle, Exception)
	 * @see IExceptionMapper#map(Exception)
	 */
	protected IRequestHandler handleException(final Exception e)
	{

		if (Application.exists() && Application.get().usesDevelopmentConfig())
		{
			/*
			 * Call out the fact that we are processing an exception in a loud way, helps to notice
			 * them when developing even if they get wrapped or processed in a custom handler.
			 */
			logExtra.warn("********************************");
			logExtra.warn("Handling the following exception", e);
			logExtra.warn("********************************");
		}

		IRequestHandler handler = listeners.onException(this, e);
		if (handler != null)
		{
			return handler;
		}
		return exceptionMapper.map(e);
	}

