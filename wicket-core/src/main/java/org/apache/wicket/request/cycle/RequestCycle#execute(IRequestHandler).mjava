	/**
	 * Executes a request handler and fires pre/post listener methods
	 * 
	 * @param handler
	 */
	private void execute(IRequestHandler handler)
	{
		Args.notNull(handler, "handler");

		while (handler != null) {
			try
			{
				listeners.onRequestHandlerResolved(this, handler);
				IRequestHandler next = requestHandlerExecutor.execute(handler);
				listeners.onRequestHandlerExecuted(this, handler);
				
				handler = next;
			}
			catch (RuntimeException e)
			{
				ReplaceHandlerException replacer = Exceptions.findCause(e, ReplaceHandlerException.class);

				if (replacer == null)
				{
					throw e;
				}

				if (replacer.isRemoveAll())
				{
					requestHandlerExecutor.schedule(null);
				}

				handler = replacer.getReplacementRequestHandler();
			}
		}
	}

