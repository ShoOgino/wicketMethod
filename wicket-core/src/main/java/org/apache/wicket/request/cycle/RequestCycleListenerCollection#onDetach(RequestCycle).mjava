	/**
	 * Notifies all registered listeners of the {@code onDetach} event in first in last out order
	 * (i.e. the last listener that received an {@code #onBeginRequest} will be the first to get
	 * notified of an {@code onDetach}.
	 * 
	 * @see IRequestCycleListener#onDetach(RequestCycle)
	 */
	public void onDetach(final RequestCycle cycle)
	{
		reversedNotify(new INotifier<IRequestCycleListener>()
		{
			public void notify(IRequestCycleListener listener)
			{
				try
				{
					listener.onDetach(cycle);
				}
				catch (Exception e)
				{
					logger.error("Error detaching request cycle listener: " + listener +
						" of class: " + listener.getClass().getName(), e);
				}
			}
		});
	}

