	/**
	 * Creates a default resource reference and registers it.
	 * 
	 * @param key
	 *      the data making up the resource reference
	 * @return The default resource created
	 */
	private ResourceReference addDefaultResourceReference(final Key key)
	{
		// Can be subclassed to create other than PackagedResourceReference
		ResourceReference reference = createDefaultResourceReference(key);

		if (reference != null)
		{
			// number of RRs which can be auto-added is restricted (cache size). Remove entries, and
			// unregister excessive ones, if needed.
			enforceAutoAddedCacheSize(getAutoAddedCapacity());

			// Register the new RR
			_registerResourceReference(reference);

			// Add it to the auto-added list
			if (autoAddedQueue != null)
			{
				autoAddedQueue.add(key);
			}
		}
		else
		{
			log.warn("A ResourceReference wont be created for a resource with key [{}] because it cannot be located.", key);
		}
		return reference;
	}

