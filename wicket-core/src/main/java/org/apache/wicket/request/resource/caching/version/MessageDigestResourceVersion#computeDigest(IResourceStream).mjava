	/**
	 * compute digest for resource stream
	 * 
	 * @param resourceStream
	 *            resource stream to compute message digest for
	 * 
	 * @return binary message digest
	 * 
	 * @throws ResourceStreamNotFoundException
	 * @throws IOException
	 */
	protected byte[] computeDigest(IResourceStream resourceStream)
		throws ResourceStreamNotFoundException, IOException
	{
		final MessageDigest digest = getMessageDigest();
		final InputStream inputStream = resourceStream.getInputStream();

		try
		{
			// get actual buffer size
			final int bufferLen = (int)Math.min(Integer.MAX_VALUE, bufferSize.bytes());

			// allocate read buffer
			final byte[] buf = new byte[bufferLen];
			int len;

			// read stream and update message digest
			while ((len = inputStream.read(buf)) != -1)
			{
				digest.update(buf, 0, len);
			}
			// finish message digest and return hash
			return digest.digest();
		}
		finally
		{
			IOUtils.close(inputStream);
		}
	}

