		/*
		 * Method in the superclass is private, call it via reflection.
		 */
		private static ClassLoader latestUserDefinedLoader()
		{
			try
			{
				Method originalMethod =
					ObjectInputStream.class.getDeclaredMethod("latestUserDefinedLoader");
				originalMethod.setAccessible(true);
				return (ClassLoader) originalMethod.invoke(null);
			}
			catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException
					| NoSuchMethodException | SecurityException e)
			{
				// should not happen
				throw new WicketRuntimeException(e);
			}
		}

