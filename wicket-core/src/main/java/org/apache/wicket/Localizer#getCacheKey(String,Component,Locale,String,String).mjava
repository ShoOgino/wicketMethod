	/**
	 * Gets the cache key
	 * 
	 * @param key
	 * @param component
	 * @param locale
	 *            Guaranteed to be != null
	 * @param style
	 * @param variation
	 * @return The value of the key
	 */
	protected String getCacheKey(final String key, final Component component, final Locale locale,
		final String style, final String variation)
	{
		if (component != null)
		{
			StringBuilder buffer = new StringBuilder(200);
			buffer.append(key);

			Component cursor = component;

			while (cursor != null)
			{
				buffer.append('-').append(metaDatabase.id(cursor.getClass()));

				if (cursor instanceof Page)
				{
					break;
				}

				/*
				 * only append component id if component is not a loop item because (a) these ids
				 * are irrelevant when generating resource cache keys (b) they cause a lot of
				 * redundant keys to be generated
				 * 
				 * also if the cursor component is an auto component we append a constant string
				 * instead of component's id because auto components have a newly generated id on
				 * every render.
				 */
				final Component parent = cursor.getParent();
				final boolean skip = parent instanceof AbstractRepeater;

				if (skip == false)
				{
					String cursorKey = cursor.isAuto() ? "wicket-auto" : cursor.getId();
					buffer.append(':').append(cursorKey);
				}

				cursor = parent;
			}

			buffer.append('-').append(locale);
			buffer.append('-').append(style);
			buffer.append('-').append(variation);

			return buffer.toString();
		}
		else
		{
			// locale is guaranteed to be != null
			return key + '-' + locale.toString() + '-' + style;
		}
	}

