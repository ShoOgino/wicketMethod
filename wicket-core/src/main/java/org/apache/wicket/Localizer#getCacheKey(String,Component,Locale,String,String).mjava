	/**
	 * Gets the cache key
	 * 
	 * @param key
	 * @param component
	 * @param locale
	 *            Guaranteed to be != null
	 * @param style
	 * @param variation
	 * @return The value of the key
	 */
	protected String getCacheKey(final String key, final Component component, final Locale locale,
		final String style, final String variation)
	{
		String cacheKey = key;
		if (component != null)
		{
			AppendingStringBuffer buffer = new AppendingStringBuffer(200);
			buffer.append(key);

			Component cursor = component;
			while (cursor != null)
			{
				buffer.append("-").append(metaDatabase.id(cursor.getClass()));

				if (cursor instanceof Page)
				{
					break;
				}

				/*
				 * only append component id if parent is not a repeater because (a) these ids are
				 * irrelevant when generating resource cache keys (b) they cause a lot of redundant
				 * keys to be generated
				 */
				if (cursor.getParent() != null && !(cursor.getParent() instanceof AbstractRepeater))
				{
					buffer.append(":").append(cursor.getId());
				}

				cursor = cursor.getParent();
			}

			buffer.append("-").append(locale);
			buffer.append("-").append(style);
			buffer.append("-").append(variation);
			cacheKey = buffer.toString();
		}
		else
		{
			// locale is guaranteed to be != null
			cacheKey += "-" + locale.toString();
			cacheKey += "-" + style;
		}

		return cacheKey;
	}

