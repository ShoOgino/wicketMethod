	/**
	 * Test that a component will update it's model when authorization is ok.
	 * 
	 * @throws Exception
	 */
	public void testEnabledDisallowedComponent() throws Exception
	{
		WicketTester app = new WicketTester();
		app.getSecuritySettings().setAuthorizationStrategy(new DummyAuthorizationStrategy()
		{

			public boolean allow(AuthorizationAction action, Component c)
			{
				if ((action.equals(IAuthorizationStrategy.ACTION_ENABLED_STATE))
						&& c instanceof TextField && c.getId().equals("stringInput"))
				{
					return false;
				}
				return true;
			}
		});
		app.startPage(AuthTestPage1.class);
		app.assertRenderedPage(AuthTestPage1.class);
		app.setParameterForNextRequest("form:stringInput", "test");
		try
		{
			app.submitForm("form");
			fail("model update should not have been allowed"); // bad
		}
		catch (WicketRuntimeException e)
		{
			// good
		}

	}

