	/**
	 * Compare the output generated by Wicket ("document") with the a previously
	 * generated file which contains the expected result.
	 * 
	 * @param document
	 *            Current output
	 * @param file
	 *            Expected ouput
	 * @param clazz
	 *            Used to load the file (relativ to clazz package)
	 * @return true, if equal
	 * @throws IOException
	 */
	public static final boolean validatePage(final String document, final Class clazz,
			final String file) throws IOException
	{
		String filename = clazz.getPackage().getName();
		filename = filename.replace('.', '/');
		filename += "/" + file;

		InputStream in = clazz.getClassLoader().getResourceAsStream(filename);
		if (in == null)
		{
			throw new IOException("File not found: " + filename);
		}

		String reference = Streams.readString(in);

		boolean equals = document.equals(reference);
		if (equals == false)
		{
			// Change the condition to true, if you want to make the new output
			// the reference output for future tests. That is, it is regarded as
			// correct. It'll replace the current reference files. Thus change
			// it only for one test-run.
			// -Dwicket.replace.expected.results=true
			final String prop = System.getProperty("wicket.replace.expected.results");
			if (prop != null)
			{
				in.close();
				in = null;

				replaceExpectedResultFile(document, clazz, file);
				return true;
			}

			System.err.println("File name: " + file);
			/*  */
			System.err.println("===================");
			System.err.println(document);
			System.err.println("===================");

			System.err.println(reference);
			System.err.println("===================");
			/* */

			String[] test1 = StringList.tokenize(document, "\n").toArray();
			String[] test2 = StringList.tokenize(reference, "\n").toArray();
			Diff diff = new Diff(test1, test2);
			Diff.change script = diff.diff_2(false);
			DiffPrint.Base p = new DiffPrint.UnifiedPrint(test1, test2);
			p.setOutput(new PrintWriter(System.err));
			p.print_script(script);
		}

		return equals;
	}

