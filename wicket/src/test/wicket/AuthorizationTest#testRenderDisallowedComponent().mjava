	/**
	 * Test that a component will be rendered when authorization is ok.
	 * 
	 * @throws Exception
	 */
	public void testRenderDisallowedComponent() throws Exception
	{
		WicketTester app = new WicketTester();
		app.getSecuritySettings().setAuthorizationStrategy(new DummyAuthorizationStrategy()
		{
			/**
			 * @see wicket.authorization.IAuthorizationStrategy#allowAction(wicket.Component,
			 *      wicket.authorization.Action)
			 */
			public boolean allowAction(Component component, Action action)
			{
				if (action == Component.RENDER && component instanceof Label)
				{
					return false;
				}
				return true;
			}
		});
		app.startPage(AuthTestPage1.class);
		app.assertRenderedPage(AuthTestPage1.class);
		app.assertInvisible("label");
	}

