    public void testNewPageStringPage() throws IOException 
    {
        final Page page = new MockPage(null);
        
        // MyPage0: no constructor at all
        Exception e = null;
        try
        {
            factory.newPage(MyPage0.class.getName(), page).getClass();
        }
        catch (RenderException ex)
        {
            e = ex;
        }
        assertNotNull("MyPage0 should have thrown an exception", e);

        // MyPage1 has only a default constructor
        e = null;
        try
        {
            factory.newPage(MyPage1.class.getName(), page).getClass();
        }
        catch (RenderException ex)
        {
            e = ex;
        }
        assertNotNull("MyPage1 should have thrown an exception", e);
        
        // MyPage2: PageParameter parameter constructor only
        e = null;
        try
        {
            factory.newPage(MyPage2.class.getName(), page).getClass();
        }
        catch (RenderException ex)
        {
            e = ex;
        }
        assertNotNull("MyPage2 should have thrown an exception as it does not have a default or no constructor", e);
        
        // MyPage3: Page parameter constructor only
        assertEquals(MyPage3.class, factory.newPage(MyPage3.class.getName(), page).getClass());
        
        // MyPage4: Illegal String parameter constructor only
        e = null;
        try
        {
            factory.newPage(MyPage4.class.getName(), page).getClass();
        }
        catch (RenderException ex)
        {
            e = ex;
        }
        assertNotNull("MyPage4 should have thrown an exception as it does not have a default or no constructor", e);

        // MyPage5: PageParameter and default constructor 
        e = null;
        try
        {
            factory.newPage(MyPage5.class.getName(), page).getClass();
        }
        catch (RenderException ex)
        {
            e = ex;
        }
        assertNotNull("MyPage1 should have thrown an exception", e);

        // String: Illegal String parameter constructor only
        e = null;
        try
        {
            factory.newPage(String.class.getName(), page).getClass();
        }
        catch (RenderException ex)
        {
            e = ex;
        }
        assertNotNull("String does not extend Page. Should habe thrown an exception", e);
    }

