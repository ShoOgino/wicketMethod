	@SuppressWarnings({"unchecked"})
	public void testLastModifiedTimestampCache()
	{
		long millis = 87654321L;
		final ResourceReferenceWithTimestamp reference = new ResourceReferenceWithTimestamp(Time.milliseconds(millis));
		final IRequestHandler handler = new ResourceReferenceRequestHandler(reference, null);

		// setup mock request cycle
		RequestCycle cycle = Mockito.mock(RequestCycle.class);
		ThreadContext.setRequestCycle(cycle);

		// request url with timestamp
		Url url1 = encoderWithTimestamps.mapHandler(handler);
		assertNotNull(url1);
		assertEquals(1, reference.lastModifiedInvocationCount);

		// subsequent request should take timestamp from request cycle scoped cache
		Url url2 = encoderWithTimestamps.mapHandler(handler);
		assertNotNull(url2);

		Url url3 = encoderWithTimestamps.mapHandler(handler);
		assertNotNull(url3);
		
		assertEquals(1, reference.lastModifiedInvocationCount);

		// urls should be equal
		assertEquals(url1, url2);
		assertEquals(url1, url3);

		// clear cache
		BasicResourceReferenceMapper.removeLastModifiedTimestampFromCache(reference);

		// request url with timestamp (will force a lookup)
		Url url4 = encoderWithTimestamps.mapHandler(handler);
		assertNotNull(url4);
		assertEquals(2, reference.lastModifiedInvocationCount);

		assertEquals(url1, url4);
	}

