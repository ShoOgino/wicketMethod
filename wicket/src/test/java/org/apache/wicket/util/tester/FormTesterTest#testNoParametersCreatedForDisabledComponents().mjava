	/**
	 * @throws Exception
	 */
	public void testNoParametersCreatedForDisabledComponents() throws Exception
	{
		tester.startPage(new MockFormPage()
		{
			private static final long serialVersionUID = -3023635650340910221L;

			@Override
			protected void onBeforeRender()
			{
				super.onBeforeRender();
				// on first rendering there can't be any form parameters.
				// on second rendering there must not be any since we disable the form.
				// the components all get rendered as disabled, so the browser would not send
				// any parameters. thus FormTester must not send any either.
				assertTrue(getRequest().getPostParameters().getParameterNames().isEmpty());
			}
		});
		final Component form = tester.getComponentFromLastRenderedPage("form");
		form.setEnabled(false);
		assertFalse(form.isEnabled());
		Component check = tester.getComponentFromLastRenderedPage("form:checkbox");
		assertTrue(check.isEnabled());
		assertFalse(check.isEnabledInHierarchy());
		FormTester formTester = tester.newFormTester("form");
		formTester.submit();
	}

