	/**
	 * 
	 * @throws Exception
	 */
	public final void testEncoding() throws Exception
	{
		final XmlPullParser parser = new XmlPullParser();
		parser.parse("<?xml version=\"1.0\" encoding=\"iso-8859-1\" ?>");
		assertEquals("iso-8859-1", parser.getEncoding());
		XmlTag tag = (XmlTag)parser.nextTag();
		assertNull(tag);

		parser.parse("<?xml version=\"1.0\" encoding='iso-8859-1' ?> test test");
		assertEquals("iso-8859-1", parser.getEncoding());
		tag = (XmlTag)parser.nextTag();
		assertNull(tag);

		// re-order and move close (remove whitespaces
		parser.parse("   <?xml encoding='iso-8859-1'version=\"1.0\"?> test test");
		assertEquals("iso-8859-1", parser.getEncoding());
		tag = (XmlTag)parser.nextTag();
		assertNull(tag);

		// attribute value must be enclosed by ""
		parser.parse("<?xml encoding=iso-8859-1 ?> test test");
		assertEquals("iso-8859-1", parser.getEncoding());

		// Invaluid encoding
		Exception ex = null;
		try
		{
			parser.parse("<?xml encoding='XXX' ?>");
		}
		catch (UnsupportedEncodingException e)
		{
			ex = e;
		}
		assertNotNull(ex);

		// no extra characters allowed before <?xml>
		// TODO General: I'd certainly prefer an exception
		parser.parse("xxxx <?xml encoding='iso-8859-1' ?>");
		assertNull(parser.getEncoding());
		tag = (XmlTag)parser.nextTag();
		assertNull(tag);

		// no extra characters allowed before <?xml>
		// Are comments allowed preceding the encoding string?
		parser.parse("<!-- Comment --> <?xml encoding='iso-8859-1' ?>");
		assertNull(parser.getEncoding());
		tag = (XmlTag)parser.nextTag();
		assertNull(tag);

		// 'test' is not a valid attribut. But we currently don't test it.
		parser.parse("<?xml test='123' >");
		assertNull(parser.getEncoding());
		tag = (XmlTag)parser.nextTag();
		assertNull(tag);
	}

