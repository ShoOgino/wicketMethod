	/**
	 * 
	 */
	public void testAssertComponentOnAjaxResponse()
	{
		// Start the tester
		WicketTester tester = new WicketTester();

		final Page page = new MockPageWithLink();
		AjaxLink ajaxLink = new AjaxLink(page, MockPageWithLink.LINK_ID)
		{
			private static final long serialVersionUID = 1L;

			@Override
			public void onClick(AjaxRequestTarget target)
			{
				// Replace the link with a normal Link
				Link link = new Link(page, MockPageWithLink.LINK_ID)
				{
					private static final long serialVersionUID = 1L;

					@Override
					public void onClick()
					{
						// Do nothing
					}
				};
				link.setOutputMarkupId(true);

				target.addComponent(link);
			}
		};
		ajaxLink.setOutputMarkupId(true);

		tester.startPage(new ITestPageSource()
		{
			private static final long serialVersionUID = 1L;

			public Page getTestPage()
			{
				return page;
			}
		});


		// Click the link
		tester.clickLink(MockPageWithLink.LINK_ID);

		// The link must be a Link :)
		tester.assertComponent(MockPageWithLink.LINK_ID, Link.class);

		// Get the new link component
		Component component = tester.getComponentFromLastRenderedPage(MockPageWithLink.LINK_ID);

		// This must not fail
		tester.assertComponentOnAjaxResponse(component);
		
		tester.destroy();
	}

