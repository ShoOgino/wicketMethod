    /**
     * Validate the text token that was found.
     *
     * @param expectedElements The iterator of expected elements
     * @param parser The parser
     * @return Whether the text is valid or not
     */
    private boolean validateText(Iterator expectedElements, HtmlDocumentParser parser) {
        boolean valid = true;
        if ( expectedElements.hasNext() ) {
            DocumentElement e = (DocumentElement)expectedElements.next();
            if ( e instanceof TextContent ) {
                if ( !((TextContent)e).getValue().equals(parser.getText() ) ) {
                    System.err.println("Found text '" + parser.getText() + "' does not match " +
                                       "expected text '" + ((TextContent)e).getValue() + "'");
                    valid = false;
                }
            }
            else {
                System.err.println("Found text '" + parser.getText() + "' was not expected. " +
                                   "We were expecting: " + e.toString());
                valid = false;
            }
        }
        else {
            System.err.println("Found text '" + parser.getText() + "' was not expected. " +
                               "We were not expecting any more elements within the current tag");
            valid = false;
        }
        return valid;
    }

