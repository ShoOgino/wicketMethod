        /**
         * Mark to be discarded each line that matches no line of another file.
         * If a line matches many lines, mark it as provisionally discardable.
         * 
         * @see equivCount()
         * @param counts
         *            The count of each equivalence number for the other file.
         * @return 0=nondiscardable, 1=discardable or 2=provisionally
         *         discardable for each line
         */

        private byte[] discardable(final int[] counts)
        {
            final int end = buffered_lines;
            final byte[] discards = new byte[end];
            final int[] equivs = this.equivs;
            int many = 5;
            int tem = end / 64;

            /*
             * Multiply MANY by approximate square root of number of lines. That
             * is the threshold for provisionally discardable lines.
             */
            while ((tem = tem >> 2) > 0)
                many *= 2;

            for (int i = 0; i < end; i++)
            {
                int nmatch;
                if (equivs[i] == 0)
                    continue;
                nmatch = counts[equivs[i]];
                if (nmatch == 0)
                    discards[i] = 1;
                else if (nmatch > many)
                    discards[i] = 2;
            }
            return discards;
        }

