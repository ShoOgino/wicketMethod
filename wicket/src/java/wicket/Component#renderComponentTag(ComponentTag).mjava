	/**
	 * Writes a simple tag out to the response stream. Any components that might
	 * be referenced by the tag are ignored. Also undertakes any tag attribute
	 * modifications if they have been added to the component.
	 * 
	 * @param tag
	 *            The tag to write
	 */
	protected final void renderComponentTag(ComponentTag tag)
	{
		final boolean stripWicketTags = Application.get().getMarkupSettings().getStripWicketTags();
		if ((tag.isWicketTag() == false) || (stripWicketTags == false))
		{
			// Apply behavior modifiers
			if ((behaviors != null) && !behaviors.isEmpty() && !tag.isClose()
					&& (isIgnoreAttributeModifier() == false))
			{

				IValueMap attributeMap = markupAttributes != null ? new ValueMap(
						markupAttributes) : null;
				tag = tag.mutable(attributeMap);

				for (IBehavior behavior : behaviors)
				{
					// Components may reject some behavior components
					if (isBehaviorAccepted(behavior))
					{
						behavior.onComponentTag(this, tag);
					}
				}
			}

			// Write the tag
			tag.writeOutput(getResponse(), stripWicketTags, this.findMarkupStream()
					.getWicketNamespace());
		}
	}

