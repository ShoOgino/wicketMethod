	/**
	 * Writes a simple tag out to the response stream. Any components that might
	 * be referenced by the tag are ignored. Also undertakes any tag attribute
	 * modifications if they have been added to the component.
	 * 
	 * @param tag
	 *            The tag to write
	 */
	protected final void renderComponentTag(ComponentTag tag)
	{
		final ApplicationSettings settings = getApplication().getSettings();
		if (!(tag instanceof ComponentWicketTag) || !settings.getStripWicketTags())
		{
			// Apply attribute modifiers
			if (attributeModifiers != null && tag.getType() != XmlTag.CLOSE)
			{
				tag = tag.mutable();
				for (AttributeModifier current = attributeModifiers; current != null; current = current.next)
				{
					current.replaceAttibuteValue(this, tag);
				}
			}

			// Strip component id attribute if desired
			if (settings.getStripComponentIds())
			{
				// Get mutable copy of tag and remove component id
				tag = tag.mutable();
				tag.removeComponentId(settings.getComponentIdAttribute(), settings
						.getApplyDefaultComponentId());
			}

			// Write the tag
			getResponse().write(tag);
		}
	}

