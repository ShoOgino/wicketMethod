	/**
	 * @see wicket.session.pagemap.IPageMapEvictionStrategy#evict(wicket.PageMap)
	 */
	public void evict(final PageMap pageMap)
	{
		synchronized (Session.get())
		{
			// Do we need to evict under this strategy?
			if (pageMap.getVersions() > maxVersions)
			{
				// Remove oldest entry from access stack
				final PageMap.Access oldestAccess = (PageMap.Access)pageMap.getAccessStack().remove(0);
				final IPageMapEntry oldestEntry = pageMap.getEntry(oldestAccess.getId());
	
				// If entry is a page (cannot be null if we're evicting)
				if (oldestEntry instanceof Page)
				{
					Page page = (Page)oldestEntry;
	
					// If there is more than one version of this page
					if (page.getVersions() > 1)
					{
						// expire the oldest version
						page.expireOldestVersion();
					}
					else
					{
						// expire whole page
						pageMap.removeEntry(page);
					}
				}
				else
				{
					// If oldestEntry is not an instance of Page, then it is some
					// custom, user-defined IPageMapEntry class and cannot contain
					// versioning information, so we just remove the entry.
					if (oldestEntry != null)
					{
						pageMap.removeEntry(oldestEntry);
					}
				}
			}
		}
	}

