	/**
	 * Creates a new Page using the given constructor and argument.
	 * 
	 * @param constructor
	 *            The constructor to invoke
	 * @param argument
	 *            The argument to pass to the constructor
	 * @return The new page
	 * @throws WicketRuntimeException
	 *             Thrown if the Page cannot be instantiated using the given
	 *             constructor and argument.
	 */
	private final Page newPage(final Constructor constructor, final Object argument)
	{
		try
		{
			return (Page)constructor.newInstance(new Object[] { argument });
		}
		catch (InstantiationException e)
		{
			throw new WicketRuntimeException("Can't instantiate page using constructor "
					+ constructor + " and argument " + argument, e);
		}
		catch (IllegalAccessException e)
		{
			throw new WicketRuntimeException("Can't instantiate page using constructor "
					+ constructor + " and argument " + argument, e);
		}
		catch (InvocationTargetException e)
		{
			// honor redirect exception contract defined in IPageFactory
			if (e.getTargetException() instanceof AbortException || 
					e.getTargetException() instanceof AuthorizationException)
			{
				throw (RuntimeException)e.getTargetException();
			}
			throw new WicketRuntimeException("Can't instantiate page using constructor "
					+ constructor + " and argument " + argument, e);
		}
	}

