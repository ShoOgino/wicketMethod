    /**
     * Start watching at a given polling rate
     * @param pollFrequency The poll rate
     */
    public void start(final Duration pollFrequency)
    {
        // Construct task with the given polling frequency
        final Task task = new Task("Watcher");

        task.run(pollFrequency, new ICode()
        {
            public void run(final Log codeListener)
            {
                for (final Iterator iterator = changeableToEntry.values().iterator(); iterator
                        .hasNext();)
                {
                    // Get next entry
                    final Entry entry = (Entry) iterator.next();

                    // If the changeable has been modified after the last known
                    // modification time
                    final Time changeableLastModified = entry.changeable.lastModifiedTime();

                    if (changeableLastModified.after(entry.lastModifiedTime))
                    {
                        // Notify all listeners that the changeable changed
                        entry.listeners.notifyListeners();

                        // Update timestamp
                        entry.lastModifiedTime = changeableLastModified;
                    }
                }
            }
        });
    }

