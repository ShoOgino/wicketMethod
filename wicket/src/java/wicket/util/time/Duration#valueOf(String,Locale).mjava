	/**
	 * Converts the given string to a new Duration object. The string can take
	 * the form of a floating point number followed by a number of milliseconds,
	 * seconds, minutes, hours or days. For example "6 hours" or "3.4 days".
	 * Parsing is case insensitive.
	 * 
	 * @param string
	 *            The string to parse
	 * @param locale
	 *            Locale used for parsing
	 * @return The duration value of the given string
	 * @throws StringValueConversionException
	 */
	public static Duration valueOf(final String string, final Locale locale)
			throws StringValueConversionException
	{
		final Matcher matcher = pattern.matcher(string);

		if (matcher.matches())
		{
			final double value = StringValue.valueOf(matcher.group(1), locale).toDouble();
			final String units = matcher.group(3);

			if (units.equalsIgnoreCase("millisecond"))
			{
				return milliseconds(value);
			}
			else if (units.equalsIgnoreCase("second"))
			{
				return seconds(value);
			}
			else if (units.equalsIgnoreCase("minute"))
			{
				return minutes(value);
			}
			else if (units.equalsIgnoreCase("hour"))
			{
				return hours(value);
			}
			else if (units.equalsIgnoreCase("day"))
			{
				return days(value);
			}
			else
			{
				throw new StringValueConversionException("Unrecognized units: " + string);
			}
		}
		else
		{
			throw new StringValueConversionException("Unable to parse duration: " + string);
		}
	}

