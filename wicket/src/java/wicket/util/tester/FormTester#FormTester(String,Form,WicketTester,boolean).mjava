	/**
	 * @see WicketTester#newFormTester(String)
	 * 
	 * @param path
	 *            path to form component
	 * @param workingForm
	 *            form component to be test
	 * @param wicketTester
	 *            wicketTester that create FormTester
	 * @param fillBlankString
	 *            specify whether filling child Text Components with blank
	 *            String
	 */
	protected FormTester(final String path, final Form workingForm,
			final WicketTester wicketTester, final boolean fillBlankString)
	{
		this.path = path;
		this.workingForm = workingForm;
		this.wicketTester = wicketTester;
		this.wicketTester.setupRequestAndResponse();

		// fill blank String for Text Component.
		workingForm.visitFormComponents(new FormComponent.AbstractVisitor()
		{
			@Override
			public void onFormComponent(FormComponent formComponent)
			{
				// do nothing for invisible component
				if (!formComponent.isVisibleInHierarchy())
				{
					return;
				}

				// if component is text field and do not have exist value, fill
				// blank String if required
				if (formComponent instanceof AbstractTextComponent)
				{
					if (fillBlankString && Strings.isEmpty(formComponent.getValue()))
					{
						setFormComponentValue(formComponent, "");
						return;
					}
				}
			}

		});
	}

