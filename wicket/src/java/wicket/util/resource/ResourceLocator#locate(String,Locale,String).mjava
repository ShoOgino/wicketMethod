    /**
     * Locate a file based on its name (potentially with a style), a 
     * locale and an extension. See above for more details on how
     * the locale is used and the order applied to find the resource.
     * 
     * @param path filename including path and style, but without locale and extension
     * @param locale the locale to apply
     * @param extension the filename's extension
     * @return null, if resource not found
     */
    private Resource locate(final String path, final Locale locale, final String extension)
    {
    	// 1. apply Locale default toString() implementation. See Locale 
    	//    javadoc for more details on that.
        Resource resource = locate(path + locale.toString() + extension);
        if (resource != null)
        {
        	return resource;
        }
        
        // 2. if country is avaible
        if ((locale.getCountry() != null) && (locale.getCountry().length() > 0))
        {
            String localeString = locale.getLanguage() + "_" + locale.getCountry();
            resource = locate(path + localeString + extension);
            if (resource != null)
            {
                return resource;
            }
        }

        // 3. if (at least the) language is available 
        if ((locale.getLanguage() != null) && (locale.getLanguage().length() > 0))
        {
            String localeString = locale.getLanguage();
            resource = locate(path + localeString + extension);
            if (resource != null)
            {
                return resource;
            }
        }

        // Not found
        return null;
    }

