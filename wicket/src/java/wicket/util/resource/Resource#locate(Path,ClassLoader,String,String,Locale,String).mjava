    /**
     * Loads a resource from the file system from next to a given class. This method
     * prefers to load from the source tree first in the default locale. If a source tree
     * cannot be found, the classpath is used.
     * 
     * @param sourcePath Source path to look along for resource
     * @param classloader The classloader to look on if the resource is not on the source
     *            path
     * @param resourcePath The path to the resource
     * @param style Any resource style, such as a skin style
     * @param locale The locale of the resource to load
     * @param extension The extension of the resource
     * @return The resource
     */
    public static Resource locate(final Path sourcePath, final ClassLoader classloader,
            String resourcePath, final String style, final Locale locale, final String extension)
    {
        // If no extension specified, extract extension
        final String extensionString;

        if (extension == null)
        {
            extensionString = "." + Strings.lastPathComponent(resourcePath, '.');
            resourcePath = Strings.beforeLastPathComponent(resourcePath, '.');
        }
        else
        {
            extensionString = "." + extension;
        }

        // Compute string components
        resourcePath = resourcePath.replace('.', '/');

        // The resource
        Resource resource = null;

        // Search the sourcePath provided first and classpath second
        if ((sourcePath != null) && (sourcePath.size() > 0))
        {
            resource = new ResourceLocator()
			{
	            /**
	             * Check if file exists.
	             * 
	             * @param filename name of the file
	             * @return null, if file not found
	             */
	            protected Resource locate(final String filename)
	            {
	                final File file = sourcePath.find(filename);

	                if (file != null)
	                {
	                    return new Resource(file);
	                }

	                return null;
	            }
	    	}.locate(resourcePath, style, locale, extensionString);
	    	
	    	if (resource != null)
	    	{
	    		return resource;
	    	}
        }

        // Try classpath second
        resource = new ResourceLocator()
		{
            /**
             * Check if file exists.
             * @param filename the resource's filename
             * @return null, if file not found
             */
            protected Resource locate(final String filename)
            {
                // Try loading filename on classpath
                final URL url = classloader.getResource(filename);

                if (url != null)
                {
                    return new Resource(url);
                }

                return null;
            }
    	}.locate(resourcePath, style, locale, extensionString);

    	return resource;
    }

