	/**
	 * Continuation of remove(), called only when synch lock is held and
	 * interference has been detected.
	 * @param key 
	 * @param hash 
	 * @return continuation object
	 */
	protected Object sremove(Object key, int hash)
	{
		Entry[] tab = table;
		int index = hash & (tab.length - 1);
		Entry first = tab[index];

		for (Entry e = first; e != null; e = e.next)
		{
			if (e.hash == hash && eq(key, e.key))
			{
				Object oldValue = e.value;
				e.value = null;
				count--;
				Entry head = e.next;
				for (Entry p = first; p != e; p = p.next)
					head = new Entry(p.hash, p.key, p.value, head);

				tab[index] = head;
				recordModification(head);
				return oldValue;
			}
		}
		return null;
	}

