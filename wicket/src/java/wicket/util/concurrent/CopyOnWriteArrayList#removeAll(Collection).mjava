	/**
	 * Removes from this Collection all of its elements that are contained in
	 * the specified Collection. This is a particularly expensive operation in
	 * this class because of the need for an internal temporary array.
	 * <p>
	 * 
	 * @return true if this Collection changed as a result of the call.
	 */
	public synchronized boolean removeAll(Collection c)
	{
		Object[] elementData = array_;
		int len = elementData.length;
		if (len == 0)
			return false;

		// temp array holds those elements we know we want to keep
		Object[] temp = new Object[len];
		int newlen = 0;
		for (int i = 0; i < len; ++i)
		{
			Object element = elementData[i];
			if (!c.contains(element))
			{
				temp[newlen++] = element;
			}
		}

		if (newlen == len)
			return false;

		// copy temp as new array
		Object[] newArray = new Object[newlen];
		System.arraycopy(temp, 0, newArray, 0, newlen);
		array_ = newArray;
		return true;
	}

