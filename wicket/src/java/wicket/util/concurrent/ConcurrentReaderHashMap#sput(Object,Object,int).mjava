	/**
	 * Continuation of put(), called only when synch lock is held and
	 * interference has been detected.
	 * @param key 
	 * @param value 
	 * @param hash 
	 * @return continuation object
	 */
	protected Object sput(Object key, Object value, int hash)
	{
		Entry[] tab = table;
		int index = hash & (tab.length - 1);
		Entry first = tab[index];
		Entry e = first;

		for (;;)
		{
			if (e == null)
			{
				Entry newEntry = new Entry(hash, key, value, first);
				tab[index] = newEntry;
				if (++count >= threshold)
					rehash();
				else
					recordModification(newEntry);
				return null;
			}
			else if (e.hash == hash && eq(key, e.key))
			{
				Object oldValue = e.value;
				e.value = value;
				return oldValue;
			}
			else
				e = e.next;
		}
	}

