    /**
     * Get the formatter for the given name/ pattern/ class/ locale. 1. look in the
     * ConverterRegistry if a formatter was stored with the formatterName and optionally
     * locale as key. 2. if not found, look in the ConverterRegistry if a formatter was
     * stored with the pattern and optionally the locale as key. 3. if not found, look in
     * the ConverterRegistry if a IConverter was stored for the type of the property that
     * implements IFormatter (as well as IConverter).
     * @param formatterName name of formatter
     * @param pattern pattern: might be used as a key to store a IFormatter
     * @param clazz class of property
     * @param locale locale to get IFormatter for
     * @return IFormatter instance of IFormatter if found, null otherwise
     */
    private IFormatter getFormatter(String formatterName, String pattern, Class clazz, Locale locale)
    {
        IFormatter formatter = null;

        // first look up on fieldname
        if (formatterName != null)
        {
            formatter = this.converterRegistry.lookup(formatterName);
        }

        if ((formatter == null) && (pattern != null)) // not found, try pattern
        {
            formatter = this.converterRegistry.lookup(pattern);
        }

        IConverter converter = null;

        if ((formatter == null) && (clazz != null)) // not found, try converter
        {
            try
            {
                converter = this.converterRegistry.lookup(clazz, locale);
            }
            catch (NoSuchMethodException e)
            {
                throw new WicketRuntimeException(e);
            }
            catch (InstantiationException e)
            {
                throw new WicketRuntimeException(e);
            }
            catch (IllegalAccessException e)
            {
                throw new WicketRuntimeException(e);
            }
            catch (InvocationTargetException e)
            {
                throw new WicketRuntimeException(e);
            }

            if ((converter != null) && (converter instanceof IFormatter))
            {
                formatter = (IFormatter) converter;
            } // else will return null
        }

        return formatter;
    }

