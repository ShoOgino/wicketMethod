    /**
     * Convert the specified locale-sensitive input object into an output object of the
     * specified type. This method will return Float value or throw exception if value can
     * not be stored in the Float.
     * @param value The input object to be converted
     * @param pattern The pattern is used for the convertion
     * @return converted object
     * @throws ParseException
     * @exception ConversionException if conversion cannot be performed successfully
     */
    protected Object parse(Object value, String pattern) throws ParseException
    {
        final Number parsed = (Number) super.parse(value, pattern);

        if (Math.abs(parsed.doubleValue() - parsed.floatValue()) > (parsed.floatValue() * 0.00001))
        {
            throw new ConversionException("Suplied number is not of type Float: "
                    + parsed.longValue());
        }

        return new Float(parsed.floatValue());

        // unlike superclass it returns Float type
    }

