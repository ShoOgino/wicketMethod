	/**
	 * Construct. WARNING: setting {@link MaskFormatter#setValueClass(Class)} to
	 * anything that implements charsequence, or not setting that class at all,
	 * which has the effect that String will be used will probably not have the
	 * desired effect as then only {@link #toString(Object)} will be called.
	 * Consider wrapping your string value in a custom class so that conversion
	 * will be triggered properly. That class should have a public constructor
	 * with a single string argument. That constructor will be used by
	 * {@link MaskFormatter} to construct instances.
	 * 
	 * @param maskFormatter
	 *            The mask formatter to use for masking and unmasking values
	 */
	public MaskConverter(MaskFormatter maskFormatter)
	{
		if (maskFormatter == null)
		{
			throw new IllegalArgumentException("argument maskFormatter may not be null");
		}

		this.maskFormatter = maskFormatter;
	}

