    /**
     * Convert the specified value into a String. If the specified value is an array, the
     * first element (converted to a String) will be returned. The registered
     * {@link Converter}for the <code>java.lang.String</code> class will be used, which
     * allows applications to customize Object->String conversions (the default
     * implementation simply uses toString()).
     * @param value Value to be converted (may be null)
     */
    private String convertToString(Object value)
    {
        if (value == null)
        {
            return ((String) null);
        }
        else if (value.getClass().isArray())
        {
            if (Array.getLength(value) < 1)
            {
                return (null);
            }

            value = Array.get(value, 0);

            if (value == null)
            {
                return ((String) null);
            }
            else
            {
                try
                {
                    Converter converter = this.converterRegistry.lookup(String.class);
                    Object converted = converter.convert(String.class, value);

                    return (converted instanceof String) ? (String) converted : String
                            .valueOf(converted);
                }
                catch (Exception e)
                {
                    e.printStackTrace();
                    throw new ConversionException(e);
                }
            }
        }
        else
        {
            try
            {
                Converter converter = this.converterRegistry.lookup(String.class);
                Object converted = converter.convert(String.class, value);

                return (converted instanceof String) ? (String) converted : String
                        .valueOf(converted);
            }
            catch (Exception e)
            {
                throw new ConversionException(e);
            }
        }
    }

