    /**
     * Converts the given object to an object of the given type using the given locale.
     * @param value the object to convert
     * @param toType the type to convert to
     * @param locale the optional locale to use for conversion
     * @return the converted object
     * @throws ConversionException on unexpected errors
     */
    public Object convert(Object value, Class toType, Locale locale)
    {
        IConverter converter = null;
        Object converted = null;
        try
        {
            converter = converterRegistry.lookup(toType, locale);
            if (converter != null) // we found a converter
            {
                if (!toType.isArray()) // a common case for request parameters// is that//
                                       // they send parameters as a
                // string array instead of a plain string
                {
                    if (value instanceof String[] && (((String[]) value).length == 1))
                    {
                        value = ((String[]) value)[0];
                    }
                }
                converted = converter.convert(value);
            }
            else
            // no converter was found
            {
                converted = OgnlOps.convertValue(value, toType);
            }
        }
        catch (ConversionException e)
        {
            throw e.setConverter(converter).setLocale(locale)
            	.setTargetType(toType).setTriedValue(value);
        }
        catch (Exception e)
        {
            throw new ConversionException(e).setConverter(converter).setLocale(locale)
                    .setTargetType(toType).setTriedValue(value);
        }
        return converted;
    }

