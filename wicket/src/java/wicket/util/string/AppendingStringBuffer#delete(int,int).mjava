	/**
	 * Removes the characters in a substring of this <code>AppendingStringBuffer</code>.
	 * The substring begins at the specified <code>start</code> and extends to
	 * the character at index <code>end - 1</code> or to the end of the
	 * <code>AppendingStringBuffer</code> if no such character exists. If
	 * <code>start</code> is equal to <code>end</code>, no changes are
	 * made.
	 * 
	 * @param start
	 *            The beginning index, inclusive.
	 * @param end
	 *            The ending index, exclusive.
	 * @return This string buffer.
	 * @exception StringIndexOutOfBoundsException
	 *                if <code>start</code> is negative, greater than
	 *                <code>length()</code>, or greater than <code>end</code>.
	 * @since 1.2
	 */
	public AppendingStringBuffer delete(int start, int end)
	{
		if (start < 0)
		{
			throw new StringIndexOutOfBoundsException(start);
		}
		if (end > count)
		{
			end = count;
		}
		if (start > end)
		{
			throw new StringIndexOutOfBoundsException();
		}

		int len = end - start;
		if (len > 0)
		{
			System.arraycopy(value, start + len, value, start, count - end);
			count -= len;
		}
		return this;
	}

