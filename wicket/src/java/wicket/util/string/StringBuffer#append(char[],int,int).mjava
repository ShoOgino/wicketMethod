	/**
	 * Appends the string representation of a subarray of the <code>char</code>
	 * array argument to this string buffer.
	 * <p>
	 * Characters of the character array <code>str</code>, starting at index
	 * <code>offset</code>, are appended, in order, to the contents of this
	 * string buffer. The length of this string buffer increases by the value of
	 * <code>len</code>.
	 * <p>
	 * The overall effect is exactly as if the arguments were converted to a
	 * string by the method {@link String#valueOf(char[],int,int)} and the
	 * characters of that string were then {@link #append(String) appended} to
	 * this <code>StringBuffer</code> object.
	 * 
	 * @param str
	 *            the characters to be appended.
	 * @param offset
	 *            the index of the first character to append.
	 * @param len
	 *            the number of characters to append.
	 * @return a reference to this <code>StringBuffer</code> object.
	 */
	public StringBuffer append(char str[], int offset, int len)
	{
		int newcount = count + len;
		if (newcount > value.length)
			expandCapacity(newcount);
		System.arraycopy(str, offset, value, count, len);
		count = newcount;
		return this;
	}

