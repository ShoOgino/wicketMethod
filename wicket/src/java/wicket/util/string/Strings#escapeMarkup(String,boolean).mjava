	/**
	 * Converts a Java String to an HTML markup String by replacing illegal
	 * characters with HTML entities where appropriate. Spaces are converted to
	 * non-breaking spaces (&lt;nbsp&gt;) if escapeSpaces is true, tabs are
	 * converted to four non-breaking spaces, less than signs are converted to
	 * &amp;lt; entities and greater than signs to &amp;gt; entities.
	 * 
	 * @param s
	 *            The string to escape
	 * @param escapeSpaces
	 *            True to replace ' ' with nonbreaking space
	 * @return The escaped string
	 */
	public static String escapeMarkup(final String s, final boolean escapeSpaces)
	{
		if (s == null)
		{
			return null;
		}
		else
		{
			final StringBuffer buffer = new StringBuffer();

			for (int i = 0; i < s.length(); i++)
			{
				final char c = s.charAt(i);

				switch (c)
				{
					case '\t' :
						if (escapeSpaces)
						{
							// Assumption is four space tabs (sorry, but that's
							// just
							// how it is!)
							buffer.append("&nbsp;&nbsp;&nbsp;&nbsp;");
						}
						else
						{
							buffer.append(c);
						}
						break;

					case ' ' :
						if (escapeSpaces)
						{
							buffer.append("&nbsp;");
						}
						else
						{
							buffer.append(c);
						}
						break;

					case '<' :
						buffer.append("&lt;");
						break;

					case '>' :
						buffer.append("&gt;");
						break;

					case '&':
					    buffer.append("&amp;");
					    break;

					case '"':
					    buffer.append("&quot;");
					    break;

					case '\'':
					    buffer.append("&#039;");
					    break;

					default :
						buffer.append(c);
						break;
				}
			}

			return buffer.toString();
		}
	}

