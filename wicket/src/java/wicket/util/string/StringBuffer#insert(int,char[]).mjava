	/**
	 * Inserts the string representation of the <code>char</code> array
	 * argument into this string buffer.
	 * <p>
	 * The characters of the array argument are inserted into the contents of
	 * this string buffer at the position indicated by <code>offset</code>.
	 * The length of this string buffer increases by the length of the argument.
	 * <p>
	 * The overall effect is exactly as if the argument were converted to a
	 * string by the method {@link String#valueOf(char[])} and the characters of
	 * that string were then {@link #insert(int,String) inserted} into this
	 * <code>StringBuffer</code> object at the position indicated by
	 * <code>offset</code>.
	 * 
	 * @param offset
	 *            the offset.
	 * @param str
	 *            a character array.
	 * @return a reference to this <code>StringBuffer</code> object.
	 * @exception StringIndexOutOfBoundsException
	 *                if the offset is invalid.
	 */
	public StringBuffer insert(int offset, char str[])
	{
		if ((offset < 0) || (offset > count))
		{
			throw new StringIndexOutOfBoundsException();
		}
		int len = str.length;
		int newcount = count + len;
		if (newcount > value.length)
			expandCapacity(newcount);
		System.arraycopy(value, offset, value, offset + len, count - offset);
		System.arraycopy(str, 0, value, offset, len);
		count = newcount;
		return this;
	}

