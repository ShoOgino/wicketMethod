	/**
	 * Takes a package and a relative path to a resource and returns an absolute
	 * path to the resource. For example, if the given package was java.lang and
	 * the relative path was "../util/List", then "java/util/List" would be
	 * returned.
	 * 
	 * @param p
	 *            The package to start at
	 * @param path
	 *            The relative path to the class
	 * @return The absolute path
	 */
	public static String absolutePath(final Package p, final String path)
	{
		// Is path already absolute?
		if (path.startsWith("/"))
		{
			return path;
		}
		else
		{
			// Break package into list of package names
			final StringList absolutePath = StringList.tokenize(p.getName(), ".");
			
			// Break path into folders
			final StringList folders = StringList.tokenize(path, "/\\");
		
			// Iterate through folders
			for (final IStringIterator iterator = folders.iterator(); iterator.hasNext();)
			{
				// Get next folder
				final String folder = iterator.next();
	
				// Up one?
				if (folder.equals(".."))
				{
					// Pop off stack
					if (absolutePath.size() > 0)
					{
						absolutePath.removeLast();
					}
					else
					{
						throw new IllegalArgumentException("Invalid path " + path);
					}
				}
				else
				{
					// Add to stack
					absolutePath.add(folder);
				}
			}
	
			// Return absolute path
			return absolutePath.join("/");
		}
	}

