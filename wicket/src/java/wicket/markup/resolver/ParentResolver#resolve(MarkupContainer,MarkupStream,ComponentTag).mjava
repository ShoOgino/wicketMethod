	/**
	 * Try to resolve the tag, then create a component, add it to the container
	 * and render it.
	 * <p>
	 * Note: Special tags like &ltwicket:...&gt> and tags which id start with
	 * "_" are not resolved.
	 * 
	 * @see wicket.markup.resolver.IComponentResolver#resolve(MarkupContainer,
	 *      MarkupStream, ComponentTag)
	 */
	public boolean resolve(final MarkupContainer container, final MarkupStream markupStream,
			final ComponentTag tag)
	{
		// Ignore special tags like _panel, _border, _extend etc.
		if (tag.isWicketTag())
		{
			return false;
		}

		MarkupContainer parent = container;
		while ((parent != null) && (parent.isTransparentResolver()))
		{
			// Try to find the component with the parent component.
			parent = parent.getParent();
			if (parent != null)
			{
				Component component = parent.get(tag.getId());
				if (component != null)
				{
					component.render(markupStream);
					return true;
				}
			}
		}

		// If not yet found, restore the original parent and test if it
		// implement IComponentResolver
		parent = container.getParent();
		if (parent instanceof IComponentResolver)
		{
			return ((IComponentResolver)parent).resolve(container, markupStream, tag);
		}
		return false;
	}

