	/**
	 * Try to resolve the tag, then create a component, add it to the container
	 * and render it.
	 * 
	 * @see wicket.IComponentResolver#resolve(MarkupContainer, MarkupStream,
	 *      ComponentTag)
	 * 
	 * @param container
	 *            The container parsing its markup
	 * @param markupStream
	 *            The current markupStream
	 * @param tag
	 *            The current component tag while parsing the markup
	 * @return true, if componentId was handle by the resolver. False, otherwise
	 */
	public boolean resolve(final MarkupContainer container, final MarkupStream markupStream,
			final ComponentTag tag)
	{
		// It must be <body onload>
		if ("body".equalsIgnoreCase(tag.getName()) && (tag.getNamespace() == null))
		{
			// Create, add and render the component.
		    
			// There is only one BodyOnLoadContainer allowed. That is we
			// don't have to worry about creating a unique id.
			BodyOnLoadContainer body = new BodyOnLoadContainer(tag.getId());
			container.autoAdd(body);

			// Yes, we handled the tag
			return true;
		}

		// We were not able to handle the tag
		return false;
	}

