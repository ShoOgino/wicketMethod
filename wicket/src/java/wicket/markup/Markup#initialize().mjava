	/**
	 * Initialize the index where <head> can be found.
	 */
	protected void initialize()
	{
		// Reset
		this.componentMap = null;
		
		if (markup != null)
		{
			// Initialize the index where <wicket:extend> can be found.
			for (int i = 0; i < markup.size(); i++)
			{
				MarkupElement elem = (MarkupElement)markup.get(i);
				if (elem instanceof WicketTag)
				{
					WicketTag tag = (WicketTag)elem;
					if ((tag.isHeadTag() == true) && (tag.getNamespace() != null))
					{
						headerIndex = i;
						break;
					}
				}
			}

			// HTML tags like <img> may not have a close tag. But because that
			// can only be detected until later on in the sequential markup 
			// reading loop, we only can do it now.
			StringBuffer componentPath = null;
			for (int i = 0; i < this.markup.size(); i++)
			{
				MarkupElement elem = (MarkupElement)this.markup.get(i);
				if (elem instanceof ComponentTag)
				{
					ComponentTag tag = (ComponentTag) elem;
					
					// Set the tags components path 
					componentPath = setComponentPathForTag(componentPath, tag);
					
					// and add it to the local cache to be found fast if required
					addToCache(i, tag);
				}
			}
		}

		// The variable is only needed while adding markup elements.
		// initialize() is invoked after all elements have been added.
		this.currentPath = null;
	}

