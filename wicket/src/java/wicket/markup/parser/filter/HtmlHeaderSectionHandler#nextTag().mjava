	/**
	 * Get the next tag from the next MarkupFilter in the chain and search for
	 * Wicket specific tags.
	 * <p>
	 * Note: The xml parser - the next MarkupFilter in the chain - returns
	 * XmlTags which are a subclass of MarkupElement. The implementation of this
	 * filter will return either ComponentTags or ComponentWicketTags. Both are
	 * subclasses of MarkupElement as well and both maintain a reference to the
	 * XmlTag. But no XmlTag is returned.
	 * 
	 * @see wicket.markup.parser.IMarkupFilter#nextTag()
	 * @return The next tag from markup to be processed. If null, no more tags
	 *         are available
	 */
	public MarkupElement nextTag() throws ParseException
	{
		// Get the next tag from the markup.
		// If null, no more tags are available
		ComponentTag tag = (ComponentTag)getParent().nextTag();
		if (tag == null)
		{
			return tag;
		}
		
		// Whatever there is left in the markup, <wicket:head> is no longer allowed
		if (done == true)
		{
		    return tag;
		}

		// if it is <head> or <wicket:head>
		if ("head".equalsIgnoreCase(tag.getName()))
        {
		    // if <wicket:head>
			if (tag instanceof WicketTag)
			{
			    if (tag.isClose() == true)
			    {
			        done = true;
			    }
			}
			else
			{
			    // it is <head>
			    withinHead = !withinHead;
			    if (tag.isClose() == true)
			    {
			        if (done == false)
			        {
			            // we found <head> but no <wicket:head>
			            insertWicketHeadTag();
			        }
			        
			        done = true;
			    }
			}
			
		    return tag;
        }
		
		if ("body".equalsIgnoreCase(tag.getName()))
        {
		    // <head> must allways be before <body>
		    done = true;
		    
		    // we found neither <head> nor <wicket:head>
			tagList.add(new RawMarkup("<head>"));
		    insertWicketHeadTag();
			tagList.add(new RawMarkup("</head>"));
		
		    return tag;
        }
		
		if (!(tag instanceof WicketTag))
		{
		    return tag;
		}

		final WicketTag wtag = (WicketTag) tag;
		if ((withinHead == false) && (wtag.isHeadTag() == true))
		{
		    throw new MarkupException("<wicket:head> is only allow within <head> section.");
		}
		
		return tag;
	}

