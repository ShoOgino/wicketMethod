	/**
	 * Get the next tag from the next MarkupFilter in the chain and search for
	 * Wicket specific tags.
	 * <p>
	 * 
	 * @see wicket.markup.parser.IMarkupFilter#nextTag()
	 * @return The next tag from markup to be processed. If null, no more tags
	 *         are available
	 */
	public MarkupElement nextTag() throws ParseException
	{
		// Get the next tag from the markup.
		// If null, no more tags are available
		ComponentTag tag = (ComponentTag)getParent().nextTag();
		if (tag == null)
		{
			return tag;
		}
		
		// Whatever there is left in the markup, <wicket:head> is no longer allowed
		if ((status == STATE_BODY_FOUND) || (status == STATE_HEAD_CLOSED))
		{
		    return tag;
		}

		// if it is <head> or <wicket:head>
		if (HEAD.equalsIgnoreCase(tag.getName()))
        {
		    // if <wicket:head>
			if (tag instanceof WicketTag)
			{
			    if (tag.isOpen() == true)
			    {
			        status = STATE_WICKET_HEAD_OPENED;
			    }
			    else
			    {
			        status = STATE_WICKET_HEAD_CLOSED;
			    }
			}
			else
			{
			    // it is <head>
			    if (tag.isOpen() == true)
			    {
			        status = STATE_HEAD_OPENED;
			    }
			    else
			    {
			        if (status != STATE_WICKET_HEAD_CLOSED)
			        {
			            // we found <head> but no <wicket:head>
			            insertWicketHeadTag(false);
			        }
			        status = STATE_HEAD_CLOSED;
			    }
			}
			
		    return tag;
        }
		
		if ("body".equalsIgnoreCase(tag.getName()))
        {
		    // we found neither <head> nor <wicket:head>
		    insertWicketHeadTag(true);
		    
		    // <head> must always be before <body>
		    status = STATE_BODY_FOUND;
		    return tag;
        }
		
		return tag;
	}

