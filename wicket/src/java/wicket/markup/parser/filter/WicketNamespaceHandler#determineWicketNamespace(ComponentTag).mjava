	/**
	 * Determine wicket namespace from xmlns:wicket or
	 * xmlns:wicket="http://wicket.sourceforge.net"
	 * 
	 * @param tag
	 * @return Wicket namespace
	 */
	private String determineWicketNamespace(final ComponentTag tag)
	{
		// For all tags attributes
		final ValueMap attributes = tag.getAttributes();
		final Iterator it = attributes.entrySet().iterator();
		while (it.hasNext())
		{
			final Map.Entry entry = (Map.Entry)it.next();

			// Find attributes with namespace "xmlns"
			final String attributeName = (String)entry.getKey();
			if (attributeName.startsWith(XMLNS))
			{
				final String xmlnsUrl = (String)entry.getValue();

				// If Wicket relevant ...
				if ((xmlnsUrl == null) || (xmlnsUrl.trim().length() == 0)
						|| xmlnsUrl.startsWith(WICKET_URI))
				{
					// Set the Wicket namespace for wicket tags (e.g.
					// <eicket:panel>) and attributes (e.g. wicket:id)
					final String namespace = attributeName.substring(XMLNS.length());
					
					// Note: <html ...> tags usually have no wicket:id and hence are treated
					// as raw markup and removing xmlns:wicket from markup does not have any
					// effect. The solution approach does not work.
					if (Application.get().getMarkupSettings().getStripWicketTags())
					{
						attributes.remove(attributeName);
						tag.setModified(true);
					}
					
					return namespace;
				}
			}
		}

		return null;
	}

