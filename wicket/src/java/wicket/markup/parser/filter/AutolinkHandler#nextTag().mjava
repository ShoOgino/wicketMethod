	/**
	 * Get the next MarkupElement from the parent MarkupFilter and handles it if
	 * the specific filter criteria are met. Depending on the filter, it may
	 * return the MarkupElement unchanged, modified or it remove by asking the
	 * parent handler for the next tag.
	 * 
	 * @see wicket.markup.parser.IMarkupFilter#nextTag()
	 * @return Return the next eligible MarkupElement
	 */
	public MarkupElement nextTag() throws ParseException
	{
		// Get next tag. Null, if no more tag available
		final ComponentTag tag = (ComponentTag)parent.nextTag();
		if (tag == null)
		{
			return tag;
		}

		// Only xml tags not already identified as Wicket components will be
		// considered for autolinking. This is because it is assumed that Wicket 
		// components like images or all other kind of Wicket Links will handle it
		// themselves.
		final String href = tag.getAttributes().getString("href");
		if ((autolinking == true) && (tag.getComponentName() == null) && (href != null)
				&& (href.endsWith(".html") || (href.indexOf(".html?") != -1)) 
				&& (href.indexOf(":") == -1))
		{
			// Mark it as autolink enabled
			tag.enableAutolink(true);

			// Just a dummy name. The ComponentTag will not be forwarded.
			tag.setComponentName("_autolink_");
			return tag;
		}

		// For all <wicket:link ..> tags which probably change the
		// current autolink status.
		if (tag instanceof ComponentWicketTag)
		{
			final ComponentWicketTag wtag = (ComponentWicketTag)tag;
			if (wtag.isLinkTag())
			{
				// Beginning of the region
				if (tag.isOpen() || tag.isOpenClose())
				{
					if (tag.isOpen())
					{
						if (autolinkStatus == null)
						{
							autolinkStatus = new Stack();
						}

						// remember the current setting to be reset after the region
						autolinkStatus.push(new Boolean(autolinking));
					}

					// html allows to represent true in different ways
					final String autolink = tag.getAttributes().getString("autolink");
					if ((autolink == null) || "".equals(autolink) || "true".equalsIgnoreCase(autolink)
							|| "1".equals(autolink))
					{
						autolinking = true;
					}
					else
					{
						autolinking = false;
					}
				}
				else if (tag.isClose())
				{
					// restore the autolink setting from before the region
					autolinking = ((Boolean)autolinkStatus.pop()).booleanValue();
				}

				return nextTag();
			}
		}

		return tag;
	}

