	/**
	 * Handle wicket param tags.
	 * 
	 * @param tag
	 *            The current tag
	 * @return The next MarkupElement to be processed
	 * @throws ParseException
	 */
	private ComponentTag handleNext(ComponentTag tag) throws ParseException
	{
		// Ignore all close tags. Wicket params tags must not be close tags
		// and components preceding the param tag can not be close tags
		// either.
		if (tag.isClose())
		{
			return tag;
		}

		// Wicket component tags will have a component name assigned.
		// Ignore all none wicket components.
		if (tag.getId() == null)
		{
			// Reset the last tag seen. Null meaning: the last tag was
			// no wicket tag.
			return tag;
		}

		// By now we know it is a wicket component tag. If it is no
		// wicket param tag, than remember it and we are done.
		if (!(tag instanceof WicketTag) || !((WicketTag)tag).isParamTag())
		{
			return tag;
		}

		// By now we know it is a Wicket param tag.
		// Only empty TEXT is allowed in between the preceding component
		// tag and the param tag.
		final CharSequence rawMarkup = xmlParser.getInput(lastTag.getPos()
				+ lastTag.getLength(), tag.getPos());

		if (rawMarkup.length() > 0)
		{
			String text = rawMarkup.toString();
			text = text.replaceAll("[\\r\\n]+", "").trim();

			if (text.length() > 0)
			{
				throw new ParseException("There must not be any text between a component tag and "
						+ "it's related param tag. Only spaces and line breaks are allowed.", tag
						.getPos());
			}
		}

		// TODO Post 1.2: Enhancement: <wicket:params name = "myProperty">My completely
		// free text that can contain everything</wicket:params> is currently
		// not supported

		// Add the parameters to the previous component tag
		lastTag.getAdditionalAttributes().putAll(tag.getAttributes());

		// If wicket param tags shall not be included in the output, than
		// go ahead and process the next one.
		if (stripWicketTag == true)
		{
			tag = (ComponentTag)getParent().nextTag();
		}
		else
		{
			// E.g. An "expected close tag" exception will be thrown if the
			// component uses replaceComponentTagBody() to replace the body
			// of the component (see src/test/.../MyLabel.html).
			log
					.warn("Be careful. Not stripping <wicket:param> from output may cause subtle errors.");
		}

		return tag;
	}

