	/**
	 * Return the body onLoad attribute of the markup
	 * 
	 * @param markup
	 * @return onLoad attribute
	 */
	private String getBodyOnLoadString(final Markup markup)
	{
		int i = 0;
		
		// The markup must have a <wicket:head> region, else copying the
		// body onLoad attributes doesn't make sense
		for (; i < markup.size(); i++)
		{
			MarkupElement elem = markup.get(i);
			if (elem instanceof WicketTag)
			{
				WicketTag tag = (WicketTag) elem;
				if (tag.isClose() && tag.isHeadTag())
				{
					// Ok, we found <wicket:head>
					break;
				}
				else if (tag.isPanelTag() || tag.isBorderTag())
				{
					// Short cut: We found <wicket:panel> or <wicket:border>.
					// There certainly will be no <wicket:head> later on.
					return null;
				}
			}
			else if (elem instanceof ComponentTag)
			{
				ComponentTag tag = (ComponentTag) elem;
				if (TagUtils.isBodyTag(tag))
				{
					// Short cut: We found <body> but no <wicket:head>.
					// There certainly will be no <wicket:head> later on.
					return null;
				}
			}
		}

		// Found </wicket:head> => get body onLoad
		for (; i < markup.size(); i++)
		{
			MarkupElement elem = markup.get(i);
			if (elem instanceof ComponentTag)
			{
				ComponentTag tag = (ComponentTag) elem;
				if (tag.isOpen() && TagUtils.isBodyTag(tag))
				{
					String onLoad = tag.getAttributes().getString("onLoad");
					return onLoad;
				}
			}
		}
		
		return null;
	}

