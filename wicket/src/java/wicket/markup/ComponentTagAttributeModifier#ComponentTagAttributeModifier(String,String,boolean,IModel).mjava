	/**
	 * Create a new attribute modifier with the given attribute name and
	 * expected pattern to match plus the model to replace with. A null
	 * pattern will match the attribute regardless of its value.
	 * The additional boolean flag specifies whether to add the attribute
	 * if it is not present.
	 *
	 * @param attribute The attribute name to replace the value for
	 * @param pattern The pattern of the current attribute value to match
	 * @param addAttributeIfNotPresent Whether to add the attribute if it is not present
	 * and the replacement value is not null
	 * @param replaceModel The model to replace the value with
	 */
	public ComponentTagAttributeModifier(final String attribute, final String pattern,
			final boolean addAttributeIfNotPresent, final IModel replaceModel)
	{
		if (attribute == null)
		{
			throw new NullPointerException("'attribute' parameter cannot be null");
		}
		if (replaceModel == null)
		{
			throw new NullPointerException("'replaceModel' paramater cannot be null");
		}

		this.attribute = attribute;
		this.pattern = pattern;
		this.enabled = true;
		this.addAttributeIfNotPresent = addAttributeIfNotPresent;
		this.replaceModel = replaceModel;
	}

