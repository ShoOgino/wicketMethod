    /**
     * Scans the given markup string and extracts balancing tags.
     * @return An immutable list of immutable MarkupElement elements
     * @throws ParseException Thrown if markup is malformed or tags don't balance
     */
    private List parseMarkup() throws ParseException
    {
        // List to return
        final List list = new ArrayList();

        final WicketComponentTagIdentifier detectWicketComponents = new WicketComponentTagIdentifier(xmlParser);
        detectWicketComponents.setComponentNameAttribute(this.componentNameAttribute);
        detectWicketComponents.setStripWicketFromComponentTag(this.stripWicketFromComponentTag);

        final WicketParamTagHandler wicketParamTagHandler = new WicketParamTagHandler(
                new HtmlHandler(detectWicketComponents));
        wicketParamTagHandler.setStripWicketTag(this.stripWicketTag);

        final PreviewComponentTagRemover previewComponentTagRemover = new PreviewComponentTagRemover(wicketParamTagHandler);

        final AutolinkHandler autolinkHandler = new AutolinkHandler(previewComponentTagRemover);
        autolinkHandler.setAutomaticLinking(this.automaticLinking);

        final IMarkupFilter parser = autolinkHandler;

        // Loop through tags
        for (ComponentTag tag; null != (tag = (ComponentTag)parser.nextTag());)
        {
            boolean add = (tag.getComponentName() != null);
            if ((add == false) && tag.getXmlTag().isClose())
            {
                add = ((tag.getOpenTag() != null) && (tag.getOpenTag().getComponentName() != null));
            }

            // Add tag to list?
            if (add == true)
            {
                final CharSequence text =
                    	xmlParser.getInputFromPositionMarker(tag.getPos());

                // Add text from last position to tag position
                if (text.length() > 0)
                {
                    String rawMarkup = text.toString();

                    if (stripComments)
                    {
                        rawMarkup = rawMarkup.replaceAll("<!--(.|\n|\r)*?-->", "");
                    }

                    if (compressWhitespace)
                    {
                        rawMarkup = rawMarkup.replaceAll("[ \\t]+", " ");
                        rawMarkup = rawMarkup.replaceAll("( ?[\\r\\n] ?)+", "\n");
                    }

                    list.add(new RawMarkup(rawMarkup));
                }

                if (!"_ignore_".equals(tag.getComponentName()))
                {
	                // Add immutable tag
	                tag.makeImmutable();
	                list.add(tag);
                }

                // Position is after tag
                xmlParser.setPositionMarker();
            }
        }

        // Add tail?
        final CharSequence text = xmlParser.getInputFromPositionMarker(-1);
        if (text.length() > 0)
        {
            list.add(new RawMarkup(text));
        }

        // Return immutable list of all MarkupElements
        return Collections.unmodifiableList(list);
    }

