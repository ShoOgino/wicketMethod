	/**
	 * Find the markup element index of the component with 'path'
	 * 
	 * @param path
	 *            The component path expression
	 * @param throwException
	 *            If true, than throw an exception if not found
	 * @return -1, if not found
	 */
	public final int positionAt(final String path, final boolean throwException)
	{
		if ((path == null) || (path.length() == 0))
		{
			throw new IllegalArgumentException("Parameter 'path' must not be null or empty");
		}

		int index = this.markup.findTag(path);
		if (index == -1)
		{
			if (throwException == true)
			{
				throw new MarkupException("Markup does not contain a Wicket tag with path '" + path
						+ "'; Resource: " + this.markup.getResource().toString());
			}
		}
		else
		{
			// Set the markup stream position to where the fragment begins
			setCurrentIndex(index);
		}
		
		return index;
	}

