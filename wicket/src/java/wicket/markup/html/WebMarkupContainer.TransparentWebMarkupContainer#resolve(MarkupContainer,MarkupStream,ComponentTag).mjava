		/**
		 * Because the autolink component is not able to resolve any inner
		 * component, it'll passed it down to its parent.
		 * 
		 * @param container
		 *            The container parsing its markup
		 * @param markupStream
		 *            The current markupStream
		 * @param tag
		 *            The current component tag while parsing the markup
		 * @return True if componentId was handled by the resolver, false
		 *         otherwise.
		 */
		public final boolean resolve(final MarkupContainer container,
				final MarkupStream markupStream, final ComponentTag tag)
		{
			Component component = this.container.get(tag.getId());
			if (component != null)
			{
				if (component.isVisible() == true)
				{
					component.renderComponent(markupStream);
					component.rendered();
				}
				else
				{
					findMarkupStream().skipComponent();
				}
				return true;
			}
			
			// Delegate the request to the parent component
			final MarkupContainer parent = getParent();
			component = parent.get(tag.getId());
			if (component != null)
			{
				component.render();
				return true;
			}

			if (parent instanceof IComponentResolver)
			{
				return ((IComponentResolver)parent).resolve(container, markupStream, tag);
			}
			
			return false;
		}

