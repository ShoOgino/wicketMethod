	/**
	 * Constructor.
	 * 
	 * @param name
	 *            The component's name
	 * @param pageableListView
	 *            The PageableListView the page links are referring to.
	 */
	public PageableListViewNavigator(final String name,
			final PageableListView pageableListView)
	{
		super(name);

		// Get the navigation bar and add it to the hierarchy
		this.pageableListViewNavigation = newNavigation(pageableListView);
		add(pageableListViewNavigation);

		// model = null; the headline test will be auto-generated during
		// handleBody.
		add(new Label("headline", null)
		{
			// Dynamically - at runtime - create the text
			protected void onComponentTagBody(final MarkupStream markupStream,
					final ComponentTag openTag)
			{
				String text = getHeadlineText(pageableListView);
				replaceComponentTagBody(markupStream, openTag, text);
			}
		});

		// Add additional page links
		add(new PageableListViewNavigationLink("first", pageableListView, 0));
		add(new PageableListViewNavigationIncrementLink("prev", pageableListView, -1));
		add(new PageableListViewNavigationIncrementLink("next", pageableListView, 1));
		add(new PageableListViewNavigationLink("last", pageableListView, pageableListView
				.getPageCount() - 1));
	}

