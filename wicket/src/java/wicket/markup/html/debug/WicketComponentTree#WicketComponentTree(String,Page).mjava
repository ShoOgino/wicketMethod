	/**
	 * Constructor.
	 * 
	 * @param id
	 *            See Component
	 * @param page
	 *            The page to be analyzed
	 * @see Component#Component(String)
	 */
	public WicketComponentTree(final String id, final Page page)
	{
		super(id);
		
		// Create an empty list. It'll be filled later
		final List data = new ArrayList();

		// Name of page
		add(new Label("page", page.toString()));

		// Get the components data and fill and sort the list
		data.clear();
		data.addAll(getComponentData(page));
		Collections.sort(data, new Comparator()
		{
			public int compare(Object o1, Object o2)
			{
				return ((ComponentData)o1).path.compareTo(((ComponentData)o2).path);
			}
		});
		
		// Create the table containing the list the components
		add(new ListView("components", data)
		{
			private static final long serialVersionUID = 1L;
			
			/**
			 * Populate the table with Wicket elements
			 */
			protected void populateItem(final ListItem listItem)
			{
				final ComponentData cdata = (ComponentData)listItem.getModelObject();

				listItem.add(new Label("row", Integer.toString(listItem.getIndex() + 1)));
				listItem.add(new Label("path", cdata.path));
				listItem.add(new Label("type", cdata.type));
				listItem.add(new Label("model", cdata.value));
			}
		});
	}

