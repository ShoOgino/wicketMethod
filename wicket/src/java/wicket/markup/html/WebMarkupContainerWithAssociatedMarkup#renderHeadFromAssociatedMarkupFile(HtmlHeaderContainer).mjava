	/**
	 * Called by components like Panel and Border which have associated Markup
	 * and which may have a &lt;wicket:head&gt; tag.
	 * <p>
	 * Whereas 'this' might be a Panel or Border, the HtmlHeaderContainer
	 * parameter has been added to the Page as a container for all headers any
	 * of its components might wish to contribute.
	 * <p>
	 * The headers contributed are rendered in the standard way.
	 * 
	 * @param container
	 *            The HtmlHeaderContainer added to the Page
	 */
	protected final void renderHeadFromAssociatedMarkupFile(final HtmlHeaderContainer container)
	{
		// Ask the Panel/Border if it has something to contribute to the header
		final HeaderPartContainer headerPart = getHeaderPart();

		// If the panel/border component has something to contribute to
		// the header ...
		if (headerPart != null)
		{
			// A component's header section must only be added once,
			// no matter how often the same Component has been added
			// to the page or any other container in the hierachy.
			if (container.get(headerPart.getId()) == null)
			{
				container.autoAdd(headerPart);

				// Check if the Panel/Border requires some <body onload="..">
				// attribute to be copied to the page's body tag.
				if (checkedBody == false)
				{
					checkedBody = true;
					checkBodyOnLoad();
				}
			}
			else
			{
				// TODO Performance: I haven't found a more efficient solution yet
				// Already added but all the components in this header part must
				// be touched (that they are rendered)
				Response response = getRequestCycle().getResponse();
				try
				{
					getRequestCycle().setResponse(NullResponse.getInstance());
					container.autoAdd(headerPart);
				}
				finally
				{
					getRequestCycle().setResponse(response);
				}
			}
		}
	}

