	/**
	 * Gets the header part for this markup container. Returns null if it doesn't contribute
	 * a header part.
	 * @param index TODO
	 * @return the header part for this markup container or null
	 * 	if it doesn't contribute anything.
	 */
	public final WebMarkupContainer getHeaderPart(int index)
	{
	    // gracefull getAssociateMarkupStream. Throws no exception in case
	    // markup is not found
		final MarkupStream associatedMarkupStream = 
		    	getApplication().getMarkupCache().getMarkupStream(this, null, false);
		
		if (associatedMarkupStream == null)
		{
		    return null;
		}

		do
		{
		    final MarkupElement element = associatedMarkupStream.get();
		    if (element instanceof WicketTag)
		    {
		        final WicketTag wTag = (WicketTag) element;
		        if (wTag.isHeadTag() == true)
		        {
		            final String headerId = "_" + Classes.name(this.getClass()) + "Header";
		            WebMarkupContainer headerContainer = new HtmlHeaderContainer(headerId, associatedMarkupStream);
		            if (this.headerComponents != null)
		            {
		                for (Iterator iter = headerComponents.iterator(); iter.hasNext(); )
		                {
		                    headerContainer.add((Component) iter.next());
		                }
		            }
		            return headerContainer;
		        }
		    }
		} 
		while (associatedMarkupStream.next() != null);

		if (this.headerComponents != null)
		{
		    throw new MarkupException("You have added header components but did not specify a <wicket:head> region in your Page markup: " 
		            + this.toString());
		}
    	return null;
	}

