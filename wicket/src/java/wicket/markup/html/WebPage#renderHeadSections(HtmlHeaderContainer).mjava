	/**
	 * Invoked from HtmlHeaderContainer it'll ask all child components of the 
	 * Page if they have something to contribute to the &lt;head&gt; section 
	 * of the HTML output. If they have, child components will return a 
	 * WebMarkupContainer which is (auto) added to the component hierarchie 
	 * and immediately rendered.<p>
	 * Note: HtmlHeaderContainer will be removed from the component hierachie
	 * at the end of the request (@see #onEndRequest()) and thus can not 
	 * transport status from one request to the next. This is true for all
	 * components added to the header as well. 
	 * 
	 * @param container The header container 
	 */
	public final void renderHeadSections(final HtmlHeaderContainer container)
	{
		// Collect all header parts and render them.
	    // Only MarkupContainer have associated markup files which
	    // may contain <wicket:head> regions.
		visitChildren(IHeaderContributor.class, new IVisitor()
        {
			/**
			 * @see wicket.Component.IVisitor#component(wicket.Component)
			 */
			public Object component(Component component)
			{
				if (component.isVisible())
				{
				    if (component instanceof IHeaderContributor)
				    {
				        ((IHeaderContributor)component).printHead(container);
					}
				}
				return IVisitor.CONTINUE_TRAVERSAL;
			}
        });
	}

