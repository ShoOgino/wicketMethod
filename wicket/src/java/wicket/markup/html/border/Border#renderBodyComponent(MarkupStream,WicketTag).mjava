	/**
	 * Render the wicket:body and all what is in it. 
	 * 
	 * @param markupStream The associated markup stream
	 * @param wtag The wicket:body tag
	 */
	protected void renderBodyComponent(final MarkupStream markupStream, final WicketTag wtag)
	{
		// Ok, it is a wicket:body tag. Now render its body
		final ComponentTag bodyTag = renderBodyComponentTag(wtag, markupStream);

		// Get the border's markup
		final MarkupStream borderMarkup = findMarkupStream();

		// Set markup of border to null. This allows us to find the border's
		// parent's markup. It also indicates that we've been here in the
		// log just above.
		setMarkupStream(null);

		// Draw the children of the border component using its original
		// in-line markup stream (not the border's associated markup stream)
		renderBodyComponentTagBody(findMarkupStream(), openTag);

		// Restore border markup so it can continue rendering
		setMarkupStream(borderMarkup);

		// Render body close tag: </wicket:body>
		if (wtag.isOpenClose())
		{
			markupStream.next();
			bodyTag.setType(XmlTag.CLOSE);
			renderComponentTag(bodyTag);
		}

		// There shall exactly only one body tag per border
		if (haveSeenBodyTag == true)
		{
			markupStream
					.throwMarkupException("There must be exactly one <wicket:body> tag for each border compoment.");
		}

		haveSeenBodyTag = true;
	}

