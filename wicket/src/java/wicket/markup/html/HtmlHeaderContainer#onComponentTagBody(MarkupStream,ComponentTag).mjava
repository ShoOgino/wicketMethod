	/**
	 * First render the body of component. And if it is the header component of
	 * a Page (compared to a Panel or Border), than get the header sections from
	 * all component in the hierachie and render them as well.
	 * 
	 * @see wicket.MarkupContainer#onComponentTagBody(wicket.markup.MarkupStream,
	 *      wicket.markup.ComponentTag)
	 */
	protected void onComponentTagBody(MarkupStream markupStream, ComponentTag openTag)
	{
	    final Response webResponse = this.getResponse();
	    final StringResponse response = new StringResponse();
	    this.getRequestCycle().setResponse(response);
	    
	    try
	    {
		    // In any case, first render the header section associated with the markup
			super.onComponentTagBody(markupStream, openTag);
	
			// If the parent component is a Page (or a bordered Page), we must
			// now include the header sections of all components in the component
			// hierarchie.
			MarkupContainer parent = getParent();
			if (parent instanceof IHeaderRenderer)
			{
				((IHeaderRenderer)parent).renderHeadSections(this);
			}
			
			final String output = response.toString();
			if (output.length() > 0)
			{
			    final boolean requiresHeadTag = (openTag instanceof WicketHeaderTag) && ((WicketHeaderTag)openTag).isRequiresHtmlHeadTag();
			    if (requiresHeadTag)
			    {
			        webResponse.write("<head>");
			    }
			    webResponse.write(output);
			    if (requiresHeadTag)
			    {
				    webResponse.write("</head>");
			    }
			}
	    }
	    finally
	    {
		    this.getRequestCycle().setResponse(webResponse);
	    }
	}

