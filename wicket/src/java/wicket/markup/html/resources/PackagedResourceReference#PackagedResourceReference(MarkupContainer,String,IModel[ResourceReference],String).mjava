	/**
	 * Construct.
	 * 
	 * @param parent
	 *            The parent of this component
	 * 
	 * @param id
	 *            component id
	 * @param resourceReference
	 *            the reference to the resource. Must return an instance of
	 *            {@link ResourceReference}
	 * @param attributeToReplace
	 *            the attribute to replace of the target tag
	 */
	public PackagedResourceReference(MarkupContainer parent, final String id,
			final IModel<ResourceReference> resourceReference, final String attributeToReplace)
	{
		super(parent, id);

		if (resourceReference == null)
		{
			throw new IllegalArgumentException("ResourceReference may not be null");
		}
		if (attributeToReplace == null)
		{
			throw new IllegalArgumentException("AttributeToReplace may not be null");
		}

		IModel<CharSequence> srcReplacement = new Model<CharSequence>()
		{
			private static final long serialVersionUID = 1L;

			@Override
			public CharSequence getObject(Component component)
			{
				ResourceReference o = resourceReference.getObject(component);
				if (o == null)
				{
					throw new IllegalArgumentException(
							"The model must provide a non-null object (component == " + component
									+ ")");
				}
				return urlFor(o);
			}
		};
		add(new AttributeModifier(attributeToReplace, true, srcReplacement));
	}

