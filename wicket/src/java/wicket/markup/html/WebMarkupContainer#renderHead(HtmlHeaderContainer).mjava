	/**
	 * Print to the web response what ever the component wants
	 * to contribute to the head section.
	 * 
	 * @see wicket.markup.html.IHeaderContributor#renderHead(wicket.markup.html.HtmlHeaderContainer)
	 * 
	 * @param container The HtmlHeaderContainer
	 */
	public void renderHead(final HtmlHeaderContainer container)
	{
		// Ask the child component if it has something to contribute
		WebMarkupContainer headerPart = getHeaderPart();

		// If the child component has something to contribute to 
		// the header and in case the very same Component has not 
		// contributed to the page, than ...
		// A component's header section must only be added once, 
		// no matter how often the same Component has been added 
		// to the page or any other container in the hierachy.
		if ((headerPart != null) && (container.get(headerPart.getId()) == null))
		{
			container.autoAdd(headerPart);
			
			// Check if the component requires some <body onload="..">
			// attribute to be copied to the page's body tag. 
			checkBodyOnLoad();
		}
		else if (headerPart != null)
		{
			// already added but all the components in this header part must be touched (that they are rendered)
			Response response = getRequestCycle().getResponse();
			try
			{
				getRequestCycle().setResponse(NullResponse.getInstance());
				container.autoAdd(headerPart);
			} 
			finally
			{
				getRequestCycle().setResponse(response);
			}
		}

		// get head and body contributions in one loop
		AjaxHandler[] handlers = getAjaxHandlers();
		if (handlers != null)
		{
			for (int i = 0; i < handlers.length; i++)
			{
				((IHeaderContributor)handlers[i]).renderHead(container);

				String stmt = ((IBodyOnloadContributor)handlers[i]).getBodyOnload();
				if (stmt != null)
				{
					((WebPage)getPage()).appendToBodyOnLoad(stmt);
				}
			}	
		}
	}

