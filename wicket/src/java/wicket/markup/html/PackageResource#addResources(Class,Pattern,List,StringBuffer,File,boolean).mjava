	/**
	 * Adds resources recursively.
	 * 
	 * @param scope
	 *            the original scope used to get the base directory
	 * @param pattern
	 *            Regexp pattern to match resources
	 * @param resources
	 *            the current list of resources
	 * @param relativePath
	 *            The relative path that is to be prepended to the resource's
	 *            name
	 * @param dir
	 *            the current directory
	 * @param recurse
	 *            Whether this method should recurse into sub packages
	 */
	private static final void addResources(final Class scope, final Pattern pattern,
			final List resources, final StringBuffer relativePath, final File dir, boolean recurse)
	{
		File[] files = dir.listFiles();
		for (int i = 0; i < files.length; i++)
		{
			File file = files[i];
			if (file.isDirectory())
			{
				if (recurse)
				{
					addResources(scope, pattern, resources, relativePath.append(file.getName())
							.append('/'), file, recurse);
				}
			}
			else
			{
				String fileName = file.getName();
				if (pattern.matcher(fileName).matches())
				{
					// we add the entry as a package resource
					resources.add(get(scope, relativePath + fileName, null, null));
				}
			}
		}
	}

