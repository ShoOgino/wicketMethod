	/**
	 * @param tag
	 *            The tag to inspect for an optional src attribute that might
	 *            reference an image.
	 * @throws WicketRuntimeException
	 *             Thrown if an image is required by the caller, but none can be
	 *             found.
	 */
	public void loadImageResource(final ComponentTag tag)
	{
		// If locale has changed from the initial locale used to attach image
		// resource, then we need to reload the resource in the new locale
		if ((locale != null && locale != component.getLocale())
				|| (style != null && style.equals(component.getStyle())))
		{
			if (resource instanceof SharedResource)
			{
				if (isFactoryResource)
				{
					this.resource = null;
				}
				else
				{
					// Change the locale and style for the named resource so it will rebind
					final SharedResource namedResource = (SharedResource)resource;
					namedResource.setLocale(locale);
					namedResource.setStyle(style);					
				}
			}
			else
			{
				this.resource = null;
			}
		}

		// Need to load image resource for this component?
		if (resource == null)
		{
			// Get model string
			final String modelString = component.getModelObjectAsString();

			// If model string is empty, use src attribute of tag
			final String resourcePath;
			if (Strings.isEmpty(modelString))
			{
				resourcePath = tag.getString("src");
			}
			else
			{
				resourcePath = modelString;
			}

			// If we found a resource path, try to load the image resource
			if (!Strings.isEmpty(resourcePath))
			{
				final Package basePackage = component.findParentWithAssociatedMarkup().getClass()
						.getPackage();
				this.resource = StaticImageResource.get(basePackage, resourcePath, component
						.getLocale(), component.getStyle());
			}

			// If we can't get a static image and one isn't already assigned
			if (resource == null)
			{
				// Create image using factory
				this.resource = newImageResource(tag);
				this.isFactoryResource = true;
			}

			// Save component's locale and style so we can detect changes later
			this.locale = component.getLocale();
			this.style = component.getStyle();
		}
	}

