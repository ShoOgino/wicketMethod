	/**
	 * @see wicket.Component#onComponentTagBody(MarkupStream, ComponentTag)
	 */
	protected final void onComponentTagBody(final MarkupStream markupStream,
			final ComponentTag openTag)
	{
		// Iterate through choices
		final List choices = getChoices();
		
		// Buffer to hold generated body
		final AppendingStringBuffer buffer = new AppendingStringBuffer((choices.size()+1) * 70);

		// The selected value
		final String selected = getValue();

		// Loop through choices
		for (int index = 0; index < choices.size(); index++)
		{
			// Get next choice
			final Object choice = choices.get(index);

			// Get label for choice
			final String label = (String)getConverter().convert(getChoiceRenderer().getDisplayValue(choice), String.class);;

			// If there is a display value for the choice, then we know that the
			// choice is automatic in some way. If label is /null/ then we know
			// that the choice is a manually created radio tag at some random
			// location in the page markup!
			if (label != null)
			{
				// Append option suffix
				buffer.append(getPrefix());

				String id = getChoiceRenderer().getIdValue(choice, index);
				final String idAttr = getInputName() + "_" + id;

				// Add radio tag
				buffer.append("<input name=\"").append(getInputName()).append("\"").append(" type=\"radio\"").append(
						(isSelected(choice, index, selected) ? " checked=\"checked\"" : "")).append(" value=\"").append(
						id).append("\" id=\"").append(idAttr).append("\"");

				// Should a roundtrip be made (have onSelectionChanged called)
				// when the option is clicked?
				if (wantOnSelectionChangedNotifications())
				{
					final CharSequence url = urlFor(IOnChangeListener.INTERFACE);

					try
					{
						Form form = getForm();
						buffer.append(" onclick=\"").append(form.getJsForInterfaceUrl(url)).append(";\"");
					}
					catch (WicketRuntimeException ex)
					{
						// NOTE: do not encode the url as that would give invalid
						// JavaScript
						buffer.append(" onclick=\"").append(url).append("&" + getInputName()).append("=").append(
								id).append("';\"");
					}
				}

				buffer.append("/>");

				// Add label for radio button
				String display = label;
				if(localizeDisplayValues())
				{
					display = getLocalizer().getString(label, this, label);
				}
				CharSequence escaped = Strings.escapeMarkup(display, false, true);
				buffer.append("<label for=\"").append(idAttr).append("\">").append(escaped).append("</label>");

				// Append option suffix
				buffer.append(getSuffix());
			}
		}

		// Replace body
		replaceComponentTagBody(markupStream, openTag, buffer);
	}

