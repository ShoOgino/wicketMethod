	/**
	 * Handle the container's body.
	 * 
	 * @param markupStream
	 *            The markup stream
	 * @param openTag
	 *            The open tag for the body
	 * @see wicket.Component#onComponentTagBody(MarkupStream, ComponentTag)
	 */
	protected void onComponentTagBody(final MarkupStream markupStream,
			final ComponentTag openTag)
	{
		final StringBuffer buffer = new StringBuffer();
		final Object selected = getModelObject();

		// Append default option
		buffer.append(getDefaultChoice(selected));

		Iterator it = getChoices().iterator();
		int index = 0;
		while(it.hasNext())
		{
			final Object object = it.next();
			if (object != null)
			{
				final String displayValue = renderer.getDisplayValue(object);
				buffer.append("\n<option ");
				if (isSelected(object, index))
				{
					buffer.append("selected=\"selected\"");
				}
				buffer.append("value=\"");
				buffer.append(renderer.getIdValue(object, index));
				buffer.append("\">");
				String display = getLocalizer().getString(
						getId() + "." + displayValue, this, displayValue);
				String escaped = Strings.escapeMarkup(display, false, true);
				buffer.append(escaped);
				buffer.append("</option>");
				index++;
			}
			else
			{
				throw new IllegalArgumentException("Choice list has null value at index " + index);
			}
		}

		buffer.append("\n");
		replaceComponentTagBody(markupStream, openTag, buffer.toString());
	}

