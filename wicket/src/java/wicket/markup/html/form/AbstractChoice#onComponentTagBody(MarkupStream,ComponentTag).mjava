	/**
	 * Handle the container's body.
	 * 
	 * @param markupStream
	 *            The markup stream
	 * @param openTag
	 *            The open tag for the body
	 * @see wicket.Component#onComponentTagBody(MarkupStream, ComponentTag)
	 */
	protected void onComponentTagBody(final MarkupStream markupStream,
			final ComponentTag openTag)
	{
		final StringBuffer buffer = new StringBuffer();
		final Object selected = getModelObject();
		final IChoiceList choices = getChoices();

		// Append default option
		buffer.append(getDefaultChoice(selected));

		for (int i = 0; i < choices.size(); i++)
		{
			final IChoice choice = choices.get(i);
			if (choice != null)
			{
				final String displayValue = choice.getDisplayValue();
				buffer.append("\n<option ");
				if (isSelected(choice))
				{
					buffer.append("selected=\"selected\"");
				}
				buffer.append("value=\"");
				buffer.append(choice.getId());
				buffer.append("\">");
				String display = getLocalizer().getString(
						getId() + "." + displayValue, this, displayValue);
				String escaped = Strings.escapeMarkup(display);
				buffer.append(escaped);
				buffer.append("</option>");
			}
			else
			{
				throw new IllegalArgumentException("Choice list has null value at index " + i);
			}
		}

		buffer.append("\n");
		replaceComponentTagBody(markupStream, openTag, buffer.toString());
	}

