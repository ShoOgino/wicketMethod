	/**
	 * If a default button was set on this form, this method will be called to
	 * render an extra field with an invisible style so that pressing enter in
	 * one of the textfields will do a form submit using this button. This
	 * method is overridable as what we do is best effort only, and may not what
	 * you want in specific situations. So if you have specific usability
	 * concerns, or want to follow another strategy, you may override this
	 * method.
	 * 
	 * @param markupStream
	 *            The markup stream
	 * @param openTag
	 *            The open tag for the body
	 */
	protected void appendDefaultButtonField(final MarkupStream markupStream,
			final ComponentTag openTag)
	{
		AppendingStringBuffer buffer = new AppendingStringBuffer();
		// get the value, first seeing whether the value attribute is set
		// by a model
		String value = defaultButton.getModelObjectAsString();
		if (value == null || "".equals(value))
		{
			// nope it isn't; try to read from the attributes
			// note that we're only trying lower case here
			value = defaultButton.getMarkupAttributes().getString("value");
		}

		// append the button
		String userAgent = ((WebClientInfo)getSession().getClientInfo()).getUserAgent();
		buffer.append("<input type=\"submit\" value=\"").append(value).append("\" name=\"").append(
				defaultButton.getInputName()).append("\"");
		if (userAgent != null && userAgent.indexOf("MSIE") != -1)
		{
			buffer.append("style=\"width: 0px\"");
		}
		else
		{
			buffer.append(" style=\"display: none\"");
		}
		buffer.append(" />");
		getResponse().write(buffer);
	}

