		/**
		 * @see wicket.markup.html.form.validation.IMessageSource#getMessage(java.lang.String,
		 *      java.util.Map)
		 */
		public String getMessage(String key, Map<String, Object> params)
		{
			// retrieve prefix that will be used to construct message keys
			String prefix = FormComponent.this.getValidatorKeyPrefix();
			if (Strings.isEmpty(prefix))
			{
				prefix = "";
			}

			final Localizer localizer = FormComponent.this.getLocalizer();

			final IModel<Map<String, Object>> paramsModel = new Model<Map<String, Object>>(
					addDefaultParams(params));

			String resource = prefix + getId() + "." + key;

			// Note: It is important that the default value of "" is provided
			// to getString() not to throw a MissingResourceException or to
			// return a default string like "[Warning: String ..."
			String message = localizer.getString(resource, FormComponent.this, paramsModel, "");

			// If not found, than ...
			if (Strings.isEmpty(message))
			{
				// Try a variation of the resource key

				resource = prefix + key;

				message = localizer.getString(resource, FormComponent.this, paramsModel, "");
			}

			// convert empty string to null in case our default value of "" was
			// returned from localizer
			if (Strings.isEmpty(message))
			{
				message = null;
			}
			return message;
		}

