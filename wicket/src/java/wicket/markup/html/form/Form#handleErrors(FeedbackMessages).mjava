	/**
	 * Sets error messages for form. First all childs (form components) are
	 * asked to do their part of error handling, and after that, the registered
	 * (if any) error handler of this form is called.
	 * 
	 * @param errors
	 *            the recorded errors
	 */
	public final void handleErrors(final FeedbackMessages errors)
	{
		// Traverse children of this form, calling validationError() on any
		// components implementing IValidationErrorHandler.
		visitChildren(IValidationErrorHandler.class, new IVisitor()
		{
			public Object component(final Component component)
			{
				// Call validation error handler
				((IValidationErrorHandler)component).validationError(errors);

				// Traverse all children
				return CONTINUE_TRAVERSAL;
			}
		});

		// Call the validation handler that is registered with this form, if any
		if (validationErrorHandler != null)
		{
			validationErrorHandler.validationError(errors);
		}
	}

