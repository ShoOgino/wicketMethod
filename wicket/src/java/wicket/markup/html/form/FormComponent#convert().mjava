	/**
	 * Converts and validates the conversion of the raw input string into the
	 * object specified by {@link FormComponent#getType()} and records any
	 * errors. Converted value is available thorugh
	 * {@link FormComponent#getConvertedInput()}
	 */
	@SuppressWarnings("unchecked")
	protected final void convert()
	{
		if (type == null)
		{
			try
			{
				convertedInput = convertValue(getInputAsArray());
			}
			catch (ConversionException e)
			{
				ValidationError error = new ValidationError();
				if (e.getTargetType() != null)
				{
					error.addKey("ConversionError." + Classes.simpleName(e.getTargetType()));
				}
				error.addKey("ConversionError");

				final Locale locale = e.getLocale();
				if (locale != null)
				{
					error.setParam("locale", locale);
				}
				error.setParam("exception", e);
				Format format = e.getFormat();
				if (format instanceof SimpleDateFormat)
				{
					error.setParam("format", ((SimpleDateFormat)format).toLocalizedPattern());
				}

				error(error);

			}
		}
		else if (!Strings.isEmpty(getInput()))
		{
			final IConverter converter = getConverter(type);
			try
			{
				convertedInput = (T)converter.convertToObject(getInput(), getLocale());
			}
			catch (ConversionException e)
			{
				ValidationError error = new ValidationError();
				error.addKey("TypeValidator." + Classes.simpleName(type));
				error.addKey("TypeValidator");


				error.setParam("type", Classes.simpleName(type));
				final Locale locale = e.getLocale();
				if (locale != null)
				{
					error.setParam("locale", locale);
				}
				error.setParam("exception", e);
				Format format = e.getFormat();
				if (format instanceof SimpleDateFormat)
				{
					error.setParam("format", ((SimpleDateFormat)format).toLocalizedPattern());
				}

				error(error);
			}
		}
	}

