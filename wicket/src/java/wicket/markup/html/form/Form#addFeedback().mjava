	/**
	 * Updates feedback on each feedback component on or attached to the form.
	 */
	private void addFeedback()
	{
		if(feedback != null)
		{
			feedback.clearFeedbackMessages();
		}
		// Traverse children of this form, calling validationError() on any
		// components implementing IFeedback.
		visitChildren(IFeedback.class, new IVisitor()
		{
			public Object component(final Component component)
			{
				// Call validation error handler
				((IFeedback)component).addFeedbackMessages(Form.this, true);

				// Traverse all children
				return CONTINUE_TRAVERSAL;
			}
		});

		// Add feedback messages to the feedback display that is registered with
		// this form, if any
		if (feedback != null)
		{
			feedback.addFeedbackMessages(this, true);
		}
	}

