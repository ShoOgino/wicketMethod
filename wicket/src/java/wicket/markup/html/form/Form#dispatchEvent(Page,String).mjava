	/**
	 * Method for dispatching/calling a interface on a page from the given url.
	 * Used by {@link wicket.markup.html.form.Form#onFormSubmitted()} for
	 * dispatching events
	 * 
	 * @param page
	 *            The page where the event should be called on.
	 * @param url
	 *            The url which describes the component path and the interface
	 *            to be called.
	 * @deprecated refactor this to use the
	 *             {@link wicket.request.IRequestCodingStrategy}
	 */
	// TODO Post 1.2: Remove this method?
	private void dispatchEvent(final Page page, final String url)
	{
		final RequestParameters requestParameters = getRequest().getRequestParameters();
		final Component component = page.get(requestParameters.getComponentPath());
		if (!component.isVisible())
		{
			throw new WicketRuntimeException(
					"Calling listener methods on components that are not visible is not allowed");
		}
		final RequestListenerInterface listener = requestParameters.getInterface();
		if (listener != null)
		{
			new FormSubmitInterfaceRequestTarget(page, component, listener)
					.processEvents(getRequestCycle());
		}
	}

