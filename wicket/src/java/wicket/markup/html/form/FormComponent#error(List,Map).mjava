	/**
	 * Builds and reports an error message. Typically called from a validator.
	 * 
	 * TODO Form: Javadoc this more
	 * 
	 * @param resourceKeys
	 *            list of resource keys to try
	 * @param args
	 *            argument substituion map
	 */
	public final void error(List/* <String> */resourceKeys, Map/* <String,String> */args)
	{
		String prefix = getValidatorKeyPrefix();
		if (Strings.isEmpty(prefix))
		{
			prefix = "";
		}

		// prepare the arguments map by adding default arguments such as input,
		// name, and label
		final Map fullArgs;
		if (args == null)
		{
			fullArgs = new HashMap(4);
		}
		else
		{
			fullArgs = new HashMap(args.size() + 4);
			fullArgs.putAll(args);
		}

		if (!fullArgs.containsKey("input"))
		{
			fullArgs.put("input", getInput());
		}
		if (!fullArgs.containsKey("name"))
		{
			fullArgs.put("name", getId());
		}
		if (!fullArgs.containsKey("label"))
		{
			Object label = null;
			if (getLabel() != null)
			{
				label = getLabel().getObject(this);
			}
			if (label != null)
			{
				fullArgs.put("label", label);
			}
			else
			{
				// apply default value (component id) if key/value can not be
				// found
				fullArgs.put("label", getLocalizer().getString(getId(), getParent(), getId()));
			}
		}

		final IModel argsModel = new Model((Serializable)fullArgs);

		// iterate through keys in order they were provided

		final Localizer localizer = getLocalizer();
		final Iterator keys = resourceKeys.iterator();

		String message = null;

		while (keys.hasNext())
		{
			final String key = (String)keys.next();

			String resource = prefix + getId() + "." + key;

			// Note: It is important that the default value of "" is provided
			// to getString() not to throw a MissingResourceException or to
			// return a default string like "[Warning: String ..."
			message = localizer.getString(resource, getParent(), argsModel, "");

			// If not found, than ..
			if (Strings.isEmpty(message))
			{
				// Have a 2nd try with the class name as the key. This makes for
				// keys like "RequiredValidator" in any of the properties files
				// along the path.

				resource = prefix + key;

				if (keys.hasNext())
				{
					message = localizer.getString(resource, this, argsModel, "");
				}
				else
				{
					/*
					 * Note: This is the last key we are going to try. It is
					 * important that the default value of "" is NOT provided to
					 * getString() throw either MissingResourceException or to
					 * to return a default string like "[Warning: String ..." in
					 * case the property could not be found.
					 */
					message = localizer.getString(resource, this, argsModel);
				}
			}

			if (!Strings.isEmpty(message))
			{
				break;
			}

		}

		error(message);
	}

