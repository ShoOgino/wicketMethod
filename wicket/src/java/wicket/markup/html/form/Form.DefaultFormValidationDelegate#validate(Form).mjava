		/**
		 * Validates all children of this form, recording all messages that are
		 * returned by the validators.
		 * 
		 * @param form the form that the validation is applied to
		 */
		public void validate(final Form form)
		{
            // Remove any old feedback messages
            final FeedbackMessages messages = form.getPage().getFeedbackMessages();
            
            // Visit all the form components and validate each
			form.visitChildren(FormComponent.class, new IVisitor()
			{
				public Object component(final Component component)
				{
                    // Get form component
                    FormComponent formComponent = (FormComponent)component;
                    
                    // Validate form component
                    formComponent.validate();
                    
                    // If component is not valid (has an error)
                    if (!formComponent.isValid())
                    {
                        // tell component to deal with invalidity
						formComponent.invalid();
					}

					// Continue until the end
					return IVisitor.CONTINUE_TRAVERSAL;
				}
			});
		}

