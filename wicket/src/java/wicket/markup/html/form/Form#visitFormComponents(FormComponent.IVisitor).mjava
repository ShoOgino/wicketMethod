	/**
	 * Convenient and typesafe way to visit all the form components on a form
	 * 
	 * @param visitor
	 *            The visitor interface to call
	 */
	public final void visitFormComponents(final FormComponent.IVisitor visitor)
	{
		visitChildren(IFormProcessingListener.class, new IVisitor()
		{
			public Object component(final Component component)
			{
				return visitor.formComponent((IFormProcessingListener)component);
			}
		});

		/**
		 * TODO Post 1.2 General: Maybe we should re-think how Borders are
		 * implemented, because there are just too many exceptions in the code
		 * base because of borders. This time it is to solve the problem tested
		 * in BoxBorderTestPage_3 where the Form is defined in the box border
		 * and the FormComponents are in the "body". Thus, the formComponents
		 * are not childs of the form. They are rather childs of the border, as
		 * the Form itself.
		 */
		if (getParent() instanceof Border)
		{
			MarkupContainer border = getParent();
			Iterator iter = border.iterator();
			while (iter.hasNext())
			{
				Component child = (Component)iter.next();
				if (child instanceof FormComponent)
				{
					visitor.formComponent((IFormProcessingListener)child);
				}
			}
		}
	}

