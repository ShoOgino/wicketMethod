	/**
	 * Constructor that uses the provided object as a dynamic model. This object
	 * will be wrapped in an instance of {@link Model}that will be wrapped in an
	 * instance of {@link PropertyModel}using the provided expression. Thus,
	 * using this constructor is a short-hand for:
	 * 
	 * <pre>
	 * new MyComponent(name, new PropertyModel(new Model(object), expression));
	 * </pre>
	 * 
	 * All components have names. A component's name cannot be null.
	 * 
	 * @param name The non-null name of this component
	 * @param object the object that will be used as the subject for the given
	 *           expression
	 * @param expression the OGNL expression that works on the given object
	 * @param validationFeedback Interface to a component that can
	 *           handle/display validation errors
	 * @throws WicketRuntimeException Thrown if the component has been given a
	 *            null name.
	 */
	public Form(String name, Serializable object, String expression,
			final IValidationFeedback validationFeedback)
	{
		super(name, object, expression);
		this.validationFeedback = validationFeedback;
	}

