	/**
	 * Updates feedback on each feedback component on or attached to the form.
	 */
	private void updateValidationFeedback()
	{
		// Traverse children of this form, calling validationError() on any
		// components implementing IValidationFeedback.
		visitChildren(IValidationFeedback.class, new IVisitor()
		{
			public Object component(final Component component)
			{
				// Call validation error handler
				((IValidationFeedback)component).updateValidationFeedback(Form.this);

				// Traverse all children
				return CONTINUE_TRAVERSAL;
			}
		});

		// Call the validation handler that is registered with this form, if any
		if (validationFeedback != null)
		{
			validationFeedback.updateValidationFeedback(this);
		}
	}

