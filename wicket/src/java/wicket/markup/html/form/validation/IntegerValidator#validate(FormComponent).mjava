	/**
	 * Validates the given form component. Ensures that the form component has a
	 * numeric value. If min and max arguments are given, this validator also
	 * ensures the value is in bounds.
	 * 
	 * @param component
	 *            The component to validate
	 */
	public final void validate(final FormComponent component)
	{
		// Get component value
		final String value = component.getRequestString();

		// Don't test emtpy/null values that should required validator do.
		if (value != null && !"".equals(value))
		{
            boolean error = false;
			try
			{
				// Get long value
				final long longValue = Long.parseLong(value);

				// Check range
				if (longValue < min || longValue > max)
				{
                    error = true;
				}
			}
			catch (NumberFormatException e)
			{
                error = true;
			}
            if (error)
            {
                final Map map = messageModel(component, value);
                map.put("min", new Long(min));
                map.put("max", new Long(max));
                error(component, resourceKey(component), map, value); 
            }
		}
	}

