		/**
		 * Handles validation by visiting the children of the given component.
		 * @param component the component with the validating children
		 * @param messages the messages to add any results to
		 */
		private final void validate(HtmlContainer component, final FeedbackMessages messages)
		{
			component.visitChildren(FormComponent.class, new IVisitor()
            {
                public Object component(final Component component)
                {
                    ValidationErrorMessage message = ((FormComponent) component).validate();
                    if(message != ValidationErrorMessage.NO_MESSAGE)
                    {
                        if(log.isDebugEnabled())
                        {
                            log.debug("validation error: " + message);
                        }
                        messages.add(message);
                        // replace the model
                        ValidationErrorModelDecorator deco =
                            new ValidationErrorModelDecorator(component, message.getInput());
                        component.setModel(deco);
                    }
                    return IVisitor.CONTINUE_TRAVERSAL; // continue until the end
                }
            });
		}

