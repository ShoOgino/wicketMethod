	/**
	 * Returns the rows that the <code>TreePath</code> instances in <code>path</code>
	 * are being displayed at. This method should return an array of the same length as
	 * that passed in, and if one of the <code>TreePaths</code> in <code>path</code>
	 * is not valid its entry in the array should be set to -1.
	 * @param paths the array of <code>TreePath</code> s being queried
	 * @return an array of the same length that is passed in containing the rows that each
	 *         corresponding where each <code>TreePath</code> is displayed; if
	 *         <code>paths</code> is <code>null</code>,<code>null</code> is
	 *         returned
	 */
	public int[] getRowsForPaths(TreePath[] paths)
	{
		if (paths == null)
			return null;

		int numPaths = paths.length;
		int[] rows = new int[numPaths];

		for (int counter = 0; counter < numPaths; counter++)
			rows[counter] = getRowForPath(paths[counter]);
		return rows;
	}

