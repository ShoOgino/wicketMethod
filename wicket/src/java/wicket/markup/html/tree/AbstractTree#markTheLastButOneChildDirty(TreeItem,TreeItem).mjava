	/**
	 * Marks the last but one visible child node of the given item as dirty,
	 * if give child is the last item of parent.
	 * 
	 * We need this to refresh the previous visible item in case the 
	 * inserted / deleteditem was last. The reason is that  the line 
	 * shape of previous item chages from L to |- .
	 * 
	 * @param parent
	 * @param child
	 */
	private void markTheLastButOneChildDirty(TreeItem parent, TreeItem child)
	{
		if (parent.getChildren().indexOf(child) == parent.getChildren().size() - 1)
		{
			for (int i = parent.getChildren().size() - 2; i >= 0; --i)
			{
				TreeItem item = (TreeItem) parent.getChildren().get(i);
				
				// is the item visible?
				if (dirtyItems.contains(item) == false &&
						dirtyItemsCreateDOM.contains(item) == false)
				{
					// yes, refresh it and quit the loop
					dirtyItems.add(item);
					break;
				}
			}
		}
	}

