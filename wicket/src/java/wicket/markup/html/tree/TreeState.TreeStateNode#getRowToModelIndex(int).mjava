		/**
		 * Returns the row of the child with a model index of <code>index</code>.
		 * 
		 * @param index
		 *            the model index
		 * @return the row of the child with a model index of <code>index</code>
		 */
		public int getRowToModelIndex(int index)
		{
			TreeStateNode child;
			int lastRow = getRow() + 1;
			int retValue = lastRow;

			// This too could be a binary search!
			for (int counter = 0, maxCounter = getChildCount(); counter < maxCounter; counter++)
			{
				child = (TreeStateNode) getChildAt(counter);
				if (child.childIndex >= index)
				{
					if (child.childIndex == index)
						return child.row;
					if (counter == 0)
						return getRow() + 1 + index;
					return child.row - (child.childIndex - index);
				}
			}
			// YECK!
			return getRow() + 1 + getTotalChildCount() - (childCount - index);
		}

