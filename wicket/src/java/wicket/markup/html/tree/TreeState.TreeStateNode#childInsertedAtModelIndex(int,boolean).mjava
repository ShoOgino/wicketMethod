		/**
		 * Messaged when a child has been inserted at index. For all the
		 * children that have a childIndex >= index their index is incremented
		 * by one.
		 * 
		 * @param index
		 *            the insertion index
		 * @param isExpandedAndVisible
		 */
		private void childInsertedAtModelIndex(int index, boolean isExpandedAndVisible)
		{
			TreeStateNode aChild;
			int maxCounter = getChildCount();

			for (int counter = 0; counter < maxCounter; counter++)
			{
				aChild = (TreeStateNode) getChildAt(counter);
				if (aChild.childIndex >= index)
				{
					if (isExpandedAndVisible)
					{
						adjustRowBy(1, counter);
						adjustRowCountBy(1);
					}
					/*
					 * Since matched and children are always sorted by index, no
					 * need to continue testing with the above.
					 */
					for (; counter < maxCounter; counter++)
						((TreeStateNode) getChildAt(counter)).childIndex++;
					childCount++;
					return;
				}
			}
			// No children to adjust, but it was a child, so we still need
			// to adjust nodes after this one.
			if (isExpandedAndVisible)
			{
				adjustRowBy(1, maxCounter);
				adjustRowCountBy(1);
			}
			childCount++;
		}

