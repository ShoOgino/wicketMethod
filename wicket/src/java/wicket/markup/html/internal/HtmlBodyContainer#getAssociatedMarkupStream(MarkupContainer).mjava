	/**
	 * Gets a fresh markup stream that contains the (immutable) markup resource
	 * for this class.
	 * 
	 * @param parent
	 *            The container hosting the body component
	 * @return A stream of MarkupElement elements
	 */
	public final MarkupStream getAssociatedMarkupStream(final MarkupContainer parent)
	{
		// Gracefully getAssociateMarkupStream. Throws no exception in case
		// markup is not found
		MarkupStream markupStream = getApplication().getMarkupCache()
				.getMarkupStream(parent, false);

		if (markupStream != null)
		{
			// find the body tag
			while (markupStream.hasMore())
			{
				final MarkupElement element = (MarkupElement)markupStream.next();
				if (element instanceof ComponentTag)
				{
					final ComponentTag tag = (ComponentTag)element;
					if (tag.isOpen() && "body".equals(tag.getName())
							&& (tag.getNamespace() == null))
					{
						return markupStream;
					}
				}
			}
		}

		return null;
	}

