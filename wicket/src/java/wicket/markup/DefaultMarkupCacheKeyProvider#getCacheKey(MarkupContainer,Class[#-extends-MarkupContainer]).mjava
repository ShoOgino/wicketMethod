	/**
	 * Construct a proper key value for the cache
	 * 
	 * @param container
	 *            The container requesting the markup
	 * @param clazz
	 *            The clazz to get the key for
	 * @return Key that uniquely identifies any markup that might be associated
	 *         with this markup container.
	 */
	public CharSequence getCacheKey(final MarkupContainer container,
			final Class<? extends MarkupContainer> clazz)
	{
		final String classname = clazz.getName();
		final Locale locale = container.getLocale();
		final String style = container.getStyle();
		final String markupType = container.getMarkupType();

		final AppendingStringBuffer buffer = new AppendingStringBuffer(classname.length() + 32);
		buffer.append(classname);

		if (locale != null)
		{
			// TODO What is wrong with locale.toString()?!?
			final boolean l = locale.getLanguage().length() != 0;
			final boolean c = locale.getCountry().length() != 0;
			final boolean v = locale.getVariant().length() != 0;
			buffer.append(locale.getLanguage());
			if (c || (l && v))
			{
				buffer.append('_').append(locale.getCountry()); // This may just
				// append '_'
			}
			if (v && (l || c))
			{
				buffer.append('_').append(locale.getVariant());
			}
		}
		if (style != null)
		{
			buffer.append(style);
		}

		buffer.append(markupType);
		return buffer;
	}

