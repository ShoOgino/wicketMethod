	/**
	 * 
	 * @see wicket.markup.outputTransformer.AbstractOutputTransformerContainer#transform(java.lang.String)
	 */
	protected CharSequence transform(final String output) throws Exception
	{
		String filepath = getParent().getClass().getPackage().getName().replace('.', '/') + "/" + getId();
		
		IResourceStream resourceStream = getApplication().getResourceStreamLocator().locate(
				getClass().getClassLoader(), 
				filepath, 
				getStyle(), 
				getLocale(), 
				getMarkupType());

		if (resourceStream == null)
		{
			throw new FileNotFoundException(
					"Unable to find XSLT resource for " + this.toString());
		}
		
		StringBuffer input = new StringBuffer(4000);
		input.append("<wicket xmlns:wicket=\"http://wicket.sourceforge.net\">");
		int startPos = input.length();
		input.append(output);
		input.append("</wicket>");
		
		try
		{
			// 1. Instantiate a TransformerFactory.
			TransformerFactory tFactory = TransformerFactory.newInstance();
	
			// 2. Use the TransformerFactory to process the stylesheet Source and
			// generate a Transformer.
			Transformer transformer = tFactory.newTransformer(
					new StreamSource(resourceStream.getInputStream()));
	
			// 3. Use the Transformer to transform an XML Source and send the
			// output to a Result object.
			StringWriter writer = new StringWriter();
			transformer.transform(
					new StreamSource(new StringReader(input.toString())), 
					new StreamResult(writer));

			input = writer.getBuffer();
			CharSequence xslOutput = input.subSequence(startPos, input.length() - 9);
			return xslOutput;
		}
		finally
		{
			resourceStream.close();
		}
	}

