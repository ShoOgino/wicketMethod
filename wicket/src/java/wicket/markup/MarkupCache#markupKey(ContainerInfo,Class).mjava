	/**
	 * Construct a proper key value for the cache
	 * 
	 * @param containerInfo
	 *            The container requesting the markup
	 * @param clazz
	 *            The clazz to get the key for
	 * @return Key that uniquely identifies any markup that might be associated
	 *         with this markup container.
	 */
	private final wicket.util.string.AppendingStringBuffer markupKey(final ContainerInfo containerInfo, final Class clazz)
	{
		final String classname = clazz.getName();
		final Locale locale = containerInfo.getLocale();
		final String style = containerInfo.getStyle();
		final String markupType = containerInfo.getFileExtension();

		final wicket.util.string.AppendingStringBuffer buffer = new wicket.util.string.AppendingStringBuffer(classname.length() + 32);
		buffer.append(classname);

		if (locale != null)
		{
			boolean l = locale.getLanguage().length() != 0;
			boolean c = locale.getCountry().length() != 0;
			boolean v = locale.getVariant().length() != 0;
			buffer.append(locale.getLanguage());
			if (c||(l&&v)) {
				buffer.append('_').append(locale.getCountry()); // This may just append '_'
			}
			if (v&&(l||c)) {
				buffer.append('_').append(locale.getVariant());
			}			
		}
		if (style != null)
		{
			buffer.append(style);
		}

		buffer.append(markupType);
		return buffer;
	}

