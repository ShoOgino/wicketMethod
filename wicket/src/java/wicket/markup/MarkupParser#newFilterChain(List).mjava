	/**
	 * Create a new markup filter chain and initialize with all default
	 * filters required.
	 * 
	 * @param tagList
	 * @return a preconfigured markup filter chain
	 */
	private final IMarkupFilter newFilterChain(final List tagList)
	{
        // Chain together all the different markup filters and configure them
        this.detectWicketComponents = new WicketTagIdentifier(this.wicketNamespace, xmlParser);
        IMarkupFilter filter = this.detectWicketComponents;

        filter = new TagTypeHandler(filter);
        filter = new HtmlHandler(filter);
        filter = new WicketParamTagHandler(this.stripWicketTag, filter);
        filter = new WicketRemoveTagHandler(filter);
        filter = new WicketLinkTagHandler(this.automaticLinking, filter); 
        
        // Provided the wicket component requesting the markup is known ...
        if (this.container != null)
        {
        	if (WicketMessageTagHandler.enable)
        	{
        		filter = new WicketMessageTagHandler(this.container, filter);
        	}
        	
	        filter = new BodyOnLoadHandler(filter);
	
	        // Pages require additional handlers
	        if (container instanceof Page)
	        {
	            filter = new HtmlHeaderSectionHandler(tagList, filter);
	        }
        }
        
        return filter;
	}

