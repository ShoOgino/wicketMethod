    /**
     * Read-ahead the input stream (markup file). If it starts with 
     * &lt;?xml encoding=".." ?&gt;, than set this.encoding and return null. 
     * If not, return all characters read so far. determineEncoding 
     * will read-ahead at max. the very first line of the markup.
     * 
     * @param in The markup file
     * @return null, if &lt;?xml ..?&gt; has been found; else all characters read ahead
     * @throws IOException
     */
    final private String determineEncoding(final InputStream in) throws IOException
    {
        // max one line
        StringBuffer pushBack = new StringBuffer(80);
        
        int value;
        while ((value = in.read()) != -1)
        {
            pushBack.append((char) value);
            
            // stop at end of the first tag or end of line. If it is html without
            // newlines, stop after X bytes (= characters)
            if ((value == '>') 
                    || (value == '\n') 
                    || (value == '\r') 
                    || (pushBack.length() > 75))
            {
                break;
            }
        }
        
        // Does the string match the <?xml .. ?> pattern
        final Matcher matcher = encodingPattern.matcher(pushBack);
        if (!matcher.find())
        {
            // No; return the whole string
            return pushBack.toString();
        }
        
        // Extract the encoding
        encoding = matcher.group(3);
        if ((encoding == null) || (encoding.length() == 0))
        {
            encoding = matcher.group(4);
        }
        
        // Because we are removing <?xml ..?> from markup and because
        // there are no additional characters in pushBack, ...
        return null;
    }

