    /**
     * @see wicket.markup.IComponentResolver#resolve(Container, MarkupStream,
     *      ComponentTag)
     * @param container
     *            The container parsing its markup
     * @param markupStream
     *            The current markupStream
     * @param tag
     *            The current component tag while parsing the markup
     * @return true, if componentName was handle by the resolver. False,
     *         otherwise
     */
    public boolean resolve(final Container container, final MarkupStream markupStream,
            final ComponentTag tag)
    {
        // It must be <wicket:...>
        if (tag instanceof ComponentWicketTag)
        {
            // It must be <wicket:component...>
            final ComponentWicketTag wicketTag = (ComponentWicketTag)tag;
            if (wicketTag.isComponentTag())
            {
                // Create and initialize the component
                final Component component = createComponent(container, wicketTag);
                if (component != null)
                {
                    // Add it to the hierarchy and render it
                    container.add(component);
                    component.render();
                    return true;
                }
            }
        }

        // We were not able to handle the componentName
        return false;
    }

