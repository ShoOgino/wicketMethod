	/**
	 * Write the tag to the response
	 * 
	 * @param response The response to write to
	 * @param stripWicketAttributes if true, wicket:id are removed from output
	 * @param namespace Wicket's namespace to use
	 */
	public final void writeOutput(final Response response, final boolean stripWicketAttributes, final String namespace)
	{
		String attributeToBeIgnored = null;
		if (stripWicketAttributes == true)
		{
			attributeToBeIgnored = namespace + ":id";
		}

		response.write("<");

		if (getType() == XmlTag.CLOSE)
		{
			response.write("/");
		}

		if (getNamespace() != null)
		{
			response.write(getNamespace());
			response.write(":");
		}

		response.write(getName());

		if (getAttributes().size() > 0)
		{
			final Iterator iterator = getAttributes().keySet().iterator();
			for (; iterator.hasNext();)
			{
				final String key = (String)iterator.next();
				if ((key != null) && ((attributeToBeIgnored == null) || 
						!key.equalsIgnoreCase(attributeToBeIgnored)))
				{
					response.write(" ");
					response.write(key);
					String value = getString(key);
					
					// attributes without values are possible, e.g. 'disabled'
					if (value != null) 
					{
						response.write("=\"");
						value = Strings.replaceAll(value,"\"", "\\\"");
						response.write(value);
						response.write("\"");
					}
				}
			}
		}

		if (getType() == XmlTag.OPEN_CLOSE)
		{
			response.write("/");
		}

		response.write(">");
	}

