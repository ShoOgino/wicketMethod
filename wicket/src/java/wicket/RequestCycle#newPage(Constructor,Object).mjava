    /**
     * Creates a new instance of a page using the given class name.  If the page is
     * successfully created, it is added to the session and used to render a wicket.response.
     * @param constructor The constructor to invoke
     * @param parameter The parameter to pass to the constructor
     * @return The new page
     * @throws RenderException
     */
    private Page newPage(final Constructor constructor, final Object parameter)
    {
        // Get page parameters
        try
        {
            // Construct page and set as wicket.response page
        		if(constructor.getParameterTypes().length == 0)
        		{
        			return (Page)constructor.newInstance(new Object[0]);
        		}
        		else
        		{
        			return (Page)constructor.newInstance(new Object[] { parameter });
        		}
        }
        catch (InstantiationException e)
        {
            throw new RenderException("Cannot instantiate page object with "
                    + constructor, e);
        }
        catch (IllegalAccessException e)
        {
            throw new RenderException("Cannot access " + constructor, e);
        }
        catch (InvocationTargetException e)
        {
        	// In order to avoid classloader issues within Wicket, wicket.jar
        	// has to be in /WEB-INF/lib
        	ApplicationSettings settings = getApplication().getSettings();
            Class homePageClass = settings.getHomePage();
            if (homePageClass.getClassLoader() != constructor.getClass().getClassLoader())
        	{
        		log.error("Most probably Wicket-xxx.jar is not in /WEB-INF/lib");
	    	}

            throw new RenderException("Exception thown by " + constructor, e);
        }
    }

