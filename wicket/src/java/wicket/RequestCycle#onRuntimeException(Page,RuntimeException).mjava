	/**
	 * Sets up to handle a runtime exception thrown during rendering
	 * 
	 * @param page
	 *            Any page context where the exception was thrown
	 * @param e
	 *            The exception
	 * @throws ServletException
	 *             The exception rethrown for the servlet container
	 */
	private final void onRuntimeException(final Page page, final RuntimeException e)
			throws ServletException
	{
		try
		{
			// If application doesn't want debug info showing up for users
			ApplicationSettings settings = application.getSettings();
			if (settings.getUnexpectedExceptionDisplay() != ApplicationSettings.SHOW_NO_EXCEPTION_PAGE)
			{
				if (settings.getUnexpectedExceptionDisplay() == ApplicationSettings.SHOW_INTERNAL_ERROR_PAGE)
				{
					// use internal error page
					setResponsePage(session.getPageFactory(page).newPage(
							application.getPages().getInternalErrorPage()));
				}
				else
				{
					// otherwise show full details
					setResponsePage(new ExceptionErrorPage(e, getResponsePage()));
				}

				// We generally want to redirect the response because we were
				// in the middle of rendering and the page may end up looking
				// like spaghetti otherwise
				redirectTo(getResponsePage());
			}
		}
		catch (RuntimeException ignored)
		{
			// We ignore any problems trying to render the exception display
			// page because we are just going to rethrow the exception anyway
			// and the original problem will be displayed on the console by
			// the container. It's better this way because users of the
			// framework will not want to be distracted by any internal problems
			// rendering a runtime exception error display page.
		}

		// Reset page for re-rendering after exception
		final Page currentPage = getResponsePage();

		// Could be null when it expired
		if (currentPage != null)
		{
			currentPage.resetMarkupStreams();
		}

		// DON'T Rethrow error for console / container because then we see the standard error page and we should see the wicket error page
		//throw new ServletException("Wicket could not render page: " + Strings.toString(e), e);
		log.error("Rendering exception", e);
	}

