	/**
	 * Sets the given model.
	 * <p>
	 * WARNING: DO NOT OVERRIDE THIS METHOD UNLESS YOU HAVE A VERY GOOD REASON
	 * FOR IT. OVERRIDING THIS MIGHT OPEN UP SECURITY LEAKS AND BREAK
	 * BACK-BUTTON SUPPORT.
	 * </p>
	 * 
	 * @param model
	 *            The model
	 * @return This
	 */
	@SuppressWarnings("unchecked")
	public Component setModel(final IModel<T> model)
	{
		// Detach current model
		if (this.model != null)
		{
			this.model.detach();
		}

		IModel prevModel = this.model;
		// TODO really need such a check? Can we just store the wrapper in the
		// state change?
		if (prevModel instanceof IWrapModel)
		{
			prevModel = prevModel.getNestedModel();
		}

		// Change model
		if (prevModel != model)
		{
			if (prevModel != null)
			{
				addStateChange(new ComponentModelChange(prevModel));
			}

			if (model instanceof IAssignmentAware)
			{
				this.model = ((IAssignmentAware<T>)model).wrapOnAssignment(this);
			}
			else
			{
				this.model = model;
			}
		}

		modelChanged();
		return this;
	}

