	/**
	 * Gets the current session object. Although this method is not final
	 * (because Page overrides it), it is not intended to be overridden by
	 * clients and clients of the framework should not do so!
	 * 
	 * @return The session that this component is in
	 */
	public final Session getSession()
	{
		// Fetch page, if possible
		final Page page = findPage();

		// If this component is attached to a page
		if (page != null)
		{
			// Get Session from Page (which should generally be
			// faster than a thread local lookup via Session.get())
			return page.getSessionInternal();
		}
		else
		{
			// Use ThreadLocal storage to get Session since this
			// component is apparently not yet attached to a Page.
			return Session.get();
		}
	}

