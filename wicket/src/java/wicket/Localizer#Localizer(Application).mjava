	/**
	 * Create the utils instance class backed by the configuration information
	 * contained within the supplied settings object.
	 * 
	 * @param application
	 *            The application to localize for
	 */
	public Localizer(final Application application)
	{
		this.application = application;

		// Register a listener to the properties factory which is invoked after
		// a properties file has been reloaded.
		application.getPropertiesFactory().addListener(new IPropertiesReloadListener()
		{
			public void propertiesLoaded(final String key)
			{
				// Remove all cached values. Unfortunately I did not yet
				// find a proper way (which is easy and clean to implement)
				// which selectively removes just the cache entries
				// affected. Hence they all get removed. Actually that
				// is less worse as it may sound, because type
				// Properties does cache them as well. We only have
				// to walk the properties resolution path once again.
				// And, the feature of reloading the properties file
				// is usually activated during development only and 
				// for production. Hence, it affect development only.
				cachedValues.clear();
			}
		});
	}

