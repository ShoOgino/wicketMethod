	/**
	 * If yet unknown, set the markup stream position with the current position
	 * of markupStream. Else set the markupStream.setCurrentPosition based the
	 * position already known to the component.
	 * <p>
	 * Note: Parameter markupStream.getCurrentPosition() will be updated, if
	 * re-render is allowed.
	 * 
	 * @param markupStream
	 */
	protected final void validateMarkupStream(final MarkupStream markupStream)
	{
		// Allow the component to be re-rendered without a page. Partial
		// re-rendering is a requirement of AJAX.
		final Page page = getPage();
		if (this.isAuto() || (page != null) && (page.isAllowReRender() == false))
		{
			// Remember the position while rendering the component the first
			// time
			this.markupStreamPosition = markupStream.getCurrentIndex();
		}
		else if (this.markupStreamPosition < 0)
		{
			// ListItems are created on the fly, which is why we can not throw an exception.
			// Because they are created on the fly (similar to autoAdd), they can 
			// not be re-rendered  
			this.markupStreamPosition = markupStream.getCurrentIndex();
//			throw new WicketRuntimeException(
//					"The markup stream of the component should be known by now, but isn't: " 
//					+ this.toString());
		}
		else
		{
			// Re-set the markups index to the beginning of the component tag
			markupStream.setCurrentIndex(this.markupStreamPosition);
		}
	}

