	/**
	 * @see wicket.request.target.coding.IRequestTargetUrlCodingStrategy#decode(wicket.request.RequestParameters)
	 */
	public IRequestTarget decode(RequestParameters requestParameters)
	{

		final String parametersFragment = requestParameters.getPath().substring(
				getMountPath().length());
		final PageParameters parameters = new PageParameters(decodeParameters(parametersFragment,
				requestParameters.getParameters()));
		final String pageMapName = (String)parameters.remove(WebRequestCodingStrategy.PAGEMAP);
		requestParameters.setPageMapName(pageMapName);
		
		final BookmarkablePageRequestTarget target;
		
		final String bookmarkableInterfaceListener = (String) parameters.remove(
				WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME);
		
		final String bookmarkableFormName = (String)parameters.remove(
				WebRequestCodingStrategy.BOOKMARKABLE_FORM_PARAMETER_NAME);
		
		// Do the parameters contain component path and listener interface?
		if (bookmarkableInterfaceListener != null) {
			// try to parse component path and listener interface 
			final String[] pathComponents = Strings.split(bookmarkableInterfaceListener, Component.PATH_SEPARATOR);
			// There must be at least 4 path components
			if (pathComponents.length < 4)
			{
				throw new WicketRuntimeException("Internal error parsing "
						+ WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME + " = " + bookmarkableInterfaceListener);
			}
			final String interfaceName = pathComponents[pathComponents.length - 1];
			final String componentPath = bookmarkableInterfaceListener.substring(1, 
					bookmarkableInterfaceListener.length() - interfaceName.length() - 2);
			
			target = new BookmarkableListenerInterfaceRequestTarget(pageMapName, bookmarkablePageClass, parameters,
					componentPath, interfaceName);
		}										
		else if (bookmarkableFormName != null) 
		{		
			requestParameters.setBookmarkableFormName(bookmarkableFormName);
			target = new BookmarkableFormPageRequestTarget(pageMapName, 
					bookmarkablePageClass, parameters, bookmarkableFormName);
		} 
		else 
		{
			target = new BookmarkablePageRequestTarget(pageMapName,
					bookmarkablePageClass, parameters);	
		}
		 
		return target;
	}

