	/**
	 * @see wicket.request.compound.IRequestTargetResolverStrategy#resolve(wicket.RequestCycle,
	 *      wicket.request.RequestParameters)
	 */
	public final IRequestTarget resolve(final RequestCycle requestCycle,
			final RequestParameters requestParameters)
	{
		// first, see whether we can find any mount
		IRequestTarget mounted = requestCycle.getProcessor().getRequestCodingStrategy()
				.targetForRequest(requestParameters);
		if (mounted != null)
		{
			// the path was mounted, so return that directly
			return mounted;
		}

		// See whether this request points to a rendered page
		final String path = requestParameters.getPath();
		if (requestParameters.getComponentPath() != null)
		{
			// we need to check if this request has been flagged as
			// process-only-if-path-is-active and if so make sure this condition
			// is met

			// marks whether or not we will be processing this request
			boolean processRequest = true;

			if (requestParameters.isOnlyProcessIfPathActive())
			{
				// this request has indeed been flagged as
				// process-only-if-path-is-active

				Session session = Session.get();
				PageMap pageMap = session.pageMapForName(requestParameters.getPageMapName(), false);
				if (pageMap == null)
				{
					// requested pagemap no longer exists - ignore this request
					processRequest = false;
				}
				else
				{
					if (pageMap.getAccessStack().size() > 0)
					{
						final Access access = (Access)pageMap.getAccessStack().peek();

						final int pageId = Integer.parseInt(Strings.firstPathComponent(
								requestParameters.getComponentPath(), Component.PATH_SEPARATOR));

						if (pageId != access.getId())
						{
							// the page is no longer the active page
							// - ignore this request
							processRequest = false;
						}
						else
						{
							final int version = requestParameters.getVersionNumber();
							if (version != Page.LATEST_VERSION && version != access.getVersion())
							{
								// version is no longer the active version -
								// ignore this request
								processRequest = false;
							}
						}
					}
				}
			}

			if (processRequest)
			{
				return resolveRenderedPage(requestCycle, requestParameters);
			}
			else
			{
				return EmptyRequestTarget.getInstance();
			}
		}
		// see whether this request points to a bookmarkable page
		else if (requestParameters.getBookmarkablePageClass() != null)
		{
			return resolveBookmarkablePage(requestCycle, requestParameters);
		}
		// see whether this request points to a shared resource
		else if (requestParameters.getResourceKey() != null)
		{
			return resolveSharedResource(requestCycle, requestParameters);
		}
		// see whether this request points to the home page
		else if (Strings.isEmpty(path) || ("/".equals(path)))
		{
			return resolveHomePageTarget(requestCycle, requestParameters);
		}

		// if we get here, we have no regconized Wicket target, and thus
		// regard this as a external (non-wicket) resource request on
		// this server
		return resolveExternalResource(requestCycle);
	}

