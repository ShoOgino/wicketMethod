	/**
	 * Resolves to a bookmarkable page target.
	 * 
	 * @param requestCycle
	 *            the current request cycle
	 * @param requestParameters
	 *            the request parameters object
	 * @return the bookmarkable page as a request target
	 */
	protected IRequestTarget resolveBookmarkablePage(final RequestCycle requestCycle,
			final RequestParameters requestParameters)
	{
		String bookmarkablePageClass = requestParameters.getBookmarkablePageClass();
		Session session = requestCycle.getSession();
		Application application = session.getApplication();
		Class pageClass;
		try
		{
			pageClass = session.getClassResolver().resolveClass(bookmarkablePageClass);
		}
		catch (RuntimeException e)
		{
			return new WebErrorCodeResponseTarget(HttpServletResponse.SC_NOT_FOUND,
					"Unable to load Bookmarkable Page");
		}

		try
		{
			Page newPage = null;

			IPageFactory pageFactory = session.getPageFactory();
			PageParameters params = new PageParameters(requestParameters.getParameters());
			// FIXME Robustness: Need to take a second look on synchronizing in
			// the resolve/render phase at this time, the session isn't accessed
			// in a atomic, isolated manner during the request.
			synchronized (session)
			{
				if (params.size() == 0)
				{
					newPage = pageFactory.newPage(pageClass);
				}
				else
				{
					newPage = pageFactory.newPage(pageClass, params);
				}

			}
			// the response might have been set in the constructor of
			// the bookmarkable page
			IRequestTarget requestTarget = requestCycle.getRequestTarget();

			// is it possible that there is already another request target at
			// this point then the 2 below?
			if (!(requestTarget instanceof IPageRequestTarget || requestTarget instanceof IBookmarkablePageRequestTarget))
			{
				requestTarget = new PageRequestTarget(newPage);
			}

			return requestTarget;
		}
		catch (RuntimeException e)
		{
			throw new WicketRuntimeException("Unable to instantiate Page class: "
					+ bookmarkablePageClass + ". See below for details.", e);
		}
	}

