	/**
	 * <p>
	 * Whether access is allowed to this page. If the page is not allowed you
	 * must redirect to a another page, else you will get a blank page.
	 * Redirecting to another page can be done in a few ways:
	 * <li>Use redirectToInterceptPage(Page page), You will be redirected to
	 * that page when it is done you will be returned to this one</li>
	 * <li>Use redirectTo(Page page), You will be redirected to that page when
	 * it is done you will have to specify where you will go next</li>
	 * <li>RequestCycle.setResponsePage(Page page), That page is rendered
	 * directly, no redirect will happen</li>
	 * </p>
	 * <p>
	 * NOTE: this method is not meant to be called by framework clients.
	 * </p>
	 * 
	 * @return true if access is allowed, false otherwise
	 * 
	 * @deprecated this method is to be removed in future version in favor of
	 * instances of {@link wicket.authorization.IAuthorizationStrategy} such
	 * as {@link wicket.authorization.AbstractPageAuthorizationStrategy}.
	 */
	public boolean checkAccess()
	{
		return ACCESS_ALLOWED;
	}

