	/**
	 * Gets whether the given component may be rendered. If this method returns
	 * false, the component is not rendered, and neither are it's children.
	 * <p>
	 * There are two uses for this method:
	 * <ul>
	 * <li>The 'normal' use is for controlling whether a component is rendered
	 * without having any effect on the rest of the processing. If a strategy
	 * lets this method return 'false', then the target component and its
	 * children will not be rendered, in the same fashion as if that component
	 * had visibility property 'false'.</li>
	 * <li>The other use is when a component should block the rendering of the
	 * whole page. So instead of 'hiding' a component, what we generally want to
	 * achieve here is that we force the user to logon/give-credentials for a
	 * higher level of authorization. For this functionality, the strategy
	 * implementation should throw a {@link AuthorizationException}, which will
	 * then be handled further by the framework.</li>
	 * </ul>
	 * </p>
	 * 
	 * @param c
	 *            Whe component to check for
	 * @return Whether the given component may be rendered
	 * @throws AuthorizationException
	 *             In case the rendering is not allowed, and when it should
	 *             block the whole page from being rendered
	 */
	boolean allowRender(Component c);

