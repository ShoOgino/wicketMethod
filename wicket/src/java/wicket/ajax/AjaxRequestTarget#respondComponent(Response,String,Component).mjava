	/**
	 * 
	 * @param response
	 * @param markupId
	 *            id of client-side dom element
	 * @param component
	 *            component to render
	 */
	private void respondComponent(final Response response, final String markupId,
			final Component component)
	{
		if (component.getRenderBodyOnly() == true)
		{
			throw new IllegalStateException(
					"Ajax render cannot be called on component that has setRenderBodyOnly enabled. Component: "
							+ component.toString());
		}

		
		// substitute our encoding response for the real one so we can capture
		// component's markup in a manner safe for transport inside CDATA block
		final Response originalResponse = response;
		encodingResponse.reset();
		RequestCycle.get().setResponse(encodingResponse);

		// Initialize temporary variables
		Page page = component.getPage();
		if (page != null)
		{
			page.startComponentRender(component);
		}

		// Render the component
		component.doRender();

		if (page != null)
		{
			page.endComponentRender(component);
		}

		// restore original response
		RequestCycle.get().setResponse(originalResponse);


		response.write("<component id=\"" + markupId + "\" ");
		if (encodingResponse.isContentsEncoded())
		{
			response.write(" encoding=\"");
			response.write(getEncodingName());
			response.write("\" ");
		}
		response.write("><![CDATA[");


		response.write(encodingResponse.getContents());

		response.write("]]></component>");

		encodingResponse.reset();
	}

