	/**
	 * The ajax event handler. This will execute the event, and update the
	 * following components, when present: the navigator the owner link is part
	 * of, or when the link is a stand alone component, the link itself. Also
	 * the pageable's parent markup container is updated, so its contents can be
	 * replaced with the newly generated pageable.
	 * 
	 * @see wicket.ajax.AjaxEventBehavior#onEvent(wicket.ajax.AjaxRequestTarget)
	 */
	protected void onEvent(AjaxRequestTarget target)
	{
		// handle the event
		owner.onClick(target);

		// find the PagingNavigator parent of this link
		AjaxPagingNavigator navigator = (AjaxPagingNavigator)((Component)owner)
				.findParent(AjaxPagingNavigator.class);
		if (navigator != null)
		{
			target.addComponent(navigator);
		}
		else
		{
			// if the link is not part of a navigator, then just update the
			// link
			target.addComponent((Component)owner);
		}

		// update the container (parent) of the pageable, this assumes that
		// the pageable is a component, and that it is a child of a web
		// markup container. If no parent is found, the whole page will be
		// updated.

		Component container = ((Component)pageable).findParent(WebMarkupContainer.class);
		target.addComponent(container);
	}

