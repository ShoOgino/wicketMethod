	/**
	 * 
	 * @param response
	 * @param component
	 */
	private void respondComponent(final Response response, final Component component)
	{
		String id = component.getMarkupId();

		// substitute our encoding response for the real one so we can capture
		// component's markup in a manner safe for transport inside CDATA block
		final Response originalResponse = response;
		tempResponse.reset();
		RequestCycle.get().setResponse(tempResponse);

		// Initialize temporary variables
		Page page = component.getPage();
		if (page != null)
		{
			page.startComponentRender(component);
		}

		boolean old = component.getRenderBodyOnly();
		component.setRenderBodyOnly(true);

		// Render the component
		component.doRender();

		component.setRenderBodyOnly(old);

		if (page != null)
		{
			page.endComponentRender(component);
		}

		// restore original response
		RequestCycle.get().setResponse(originalResponse);


		response.write("<component id=\"" + id + "\" ");
		if (tempResponse.isContentsEncoded())
		{
			response.write(" encoding=\"");
			response.write(tempResponse.getEncodingName());
			response.write("\" ");
		}
		response.write("><![CDATA[");


		response.write(tempResponse.getContents());

		response.write("]]></component>");
		
		tempResponse.reset();
	}

