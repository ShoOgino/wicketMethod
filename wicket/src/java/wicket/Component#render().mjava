	/**
	 * Performs a render of this component.
	 */
	public final void render()
	{
		// Rendering is beginning
		internalOnBeginRender();
		onBeginRender();
		if (log.isDebugEnabled())
		{
			log.debug("Begin render " + this);
		}

		// Any runtime exception that was thrown during rendering
		RuntimeException renderException = null;

		try
		{
			// Get request cycle to render to
			final RequestCycle cycle = getRequestCycle();

			// Save original Response
			final Response originalResponse = cycle.getResponse();

			// If component is not visible, set response to NullResponse
			if (!isVisible())
			{
				cycle.setResponse(NullResponse.getInstance());
			}

			// Synchronize on model lock while rendering to help ensure
			// that the model doesn't change while its being read
			synchronized (getModelLock())
			{
				// Call implementation to render component
				onRender();

				// Component has been rendered
				rendered();
			}

			// Restore original response
			cycle.setResponse(originalResponse);
		}
		catch (RuntimeException e)
		{
			// Remember exception in finally block
			renderException = e;
			throw e;
		}
		finally
		{
			if (log.isDebugEnabled())
			{
				log.debug("End render " + this);
			}

			try
			{
				// Rendering has completed
				onEndRender();
				internalOnEndRender();

				// Detach models now that rendering is fully completed
				detachModels();
			}
			catch (RuntimeException e)
			{
				if (renderException != null)
				{
					throw new WicketRuntimeException(
							"Exception thrown while cleaning up from the following exception which was thrown during rendering: "
									+ Strings.toString(renderException), e);
				}
				else
				{
					throw e;
				}
			}
		}
	}

