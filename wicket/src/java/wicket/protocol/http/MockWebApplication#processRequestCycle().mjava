	/**
	 * Create and process the request cycle using the current request and
	 * response information.
	 */
	public void processRequestCycle()
	{
		WebRequestCycle cycle = new WebRequestCycle(wicketSession, wicketRequest, wicketResponse);
		cycle.request();

		previousRenderedPage = lastRenderedPage;

		// handle redirects which are usually managed by the browser
		// transparently
		final MockHttpServletResponse httpResponse = (MockHttpServletResponse)cycle
				.getWebResponse().getHttpServletResponse();

		if (httpResponse.isRedirect())
		{
			generateLastRenderedPage(cycle);

			final MockHttpServletRequest httpRequest = (MockHttpServletRequest)((WebRequest)cycle
					.getWebRequest()).getHttpServletRequest();

			httpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());
			wicketSession = getSession(wicketRequest);
			new WebRequestCycle(wicketSession, wicketRequest, wicketResponse).request();
		}
		generateLastRenderedPage(cycle);

		Session.set(getWicketSession());

		if (getLastRenderedPage() instanceof ExceptionErrorPage)
		{
			throw new WicketRuntimeException(((ExceptionErrorPage)getLastRenderedPage())
					.getThrowable());
		}
	}

