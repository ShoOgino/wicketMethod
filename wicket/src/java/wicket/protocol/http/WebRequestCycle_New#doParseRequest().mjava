	/**
	 * Subclasses may implement there own strategies to return static content.
	 * The default implementation only returns css and js files matching the url 
	 * path and found by the class loader.
	 * 
	 * @return 1 - returning a page; 2 - static content (no Page); else - not found
	 */
	protected int doParseRequest()
	{
		final String path = Strings.beforeLast(request.getPath(), '.').substring(1);
		final String extension = '.' + Strings.afterLast(request.getPath(), '.');
		if (".css".equalsIgnoreCase(extension) || ".js".equalsIgnoreCase(extension))
		{
		    final IResourceStream stream = new ClassLoaderResourceStreamLocator().locate(
		            getClass().getClassLoader(), path, session.getStyle(), session.getLocale(), 
		            extension);
		    
			if (stream != null)
			{
				final Resource resource = new Resource()
				{
					private static final long serialVersionUID = 1L;

					public IResourceStream getResourceStream()
					{
						return stream;
					}
				};
				resource.onResourceRequested();
				
				// Found static resource
				return 2;
			}
		}
		
		// Did not found the resource
		return 0;
	}

