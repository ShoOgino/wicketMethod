	public void init(FilterConfig filterConfig) throws ServletException
	{
		this.filterConfig = filterConfig;

		IWebApplicationFactory factory = getApplicationFactory();

		// Construct WebApplication subclass
		this.webApplication = factory.createApplication(this);

		// Set this WicketServlet as the servlet for the web application
		this.webApplication.setWicketFilter(this);

		// Store instance of this application object in servlet context to make
		// integration with outside world easier
		String contextKey = "wicket:" + filterConfig.getFilterName();
		filterConfig.getServletContext().setAttribute(contextKey, this.webApplication);

		filterPath = filterConfig.getInitParameter(FILTER_PATH_PARAM);

		try
		{
			Application.set(webApplication);

			// Call internal init method of web application for default
			// initialisation
			this.webApplication.internalInit();

			// Call init method of web application
			this.webApplication.init();

			// We initialize components here rather than in the constructor or
			// in the internal init, because in the init method class aliases
			// can be added, that would be used in installing resources in the
			// component.
			this.webApplication.initializeComponents();

			// Finished
			log.info("Wicket application " + this.webApplication.getName() + " started [factory="
					+ factory.getClass().getName() + "]");
		}
		finally
		{
			Application.unset();
		}
	}

