	/**
	 * Handles servlet page requests.
	 * 
	 * @param servletRequest
	 *            Servlet request object
	 * @param servletResponse
	 *            Servlet response object
	 * @throws ServletException
	 *             Thrown if something goes wrong during request handling
	 * @throws IOException
	 */
	public final void doGet(final HttpServletRequest servletRequest,
			final HttpServletResponse servletResponse) throws ServletException, IOException
	{
		// First, set the webapplication for this thread
		Application.set(webApplication);

		// Create a new webrequest
		final WebRequest request = webApplication.newWebRequest(servletRequest);

		if (webApplication.getRequestCycleSettings().getRenderStrategy() == RenderStrategy.REDIRECT_TO_BUFFER)
		{
			String queryString = servletRequest.getQueryString();
			if (!Strings.isEmpty(queryString))
			{
				// Try to see if there is a redirect stored
				ISessionStore sessionStore = webApplication.getSessionStore();
				String sessionId = sessionStore.getSessionId(request, false);
				if (sessionId != null)
				{
					BufferedHttpServletResponse bufferedResponse = webApplication
							.popBufferedResponse(sessionId, queryString);

					if (bufferedResponse != null)
					{
						bufferedResponse.writeTo(servletResponse);
						// redirect responses are ignored for the request
						// logger...
						return;
					}
				}
			}
		}

		// If the request does not provide information about the encoding of its
		// body (which includes POST parameters), than assume the default
		// encoding as defined by the wicket application. Bear in mind that the
		// encoding of the request usually is equal to the previous response.
		// However it is a known bug of IE that it does not provide this
		// information. Please see the wiki for more details and why all other
		// browser deliberately copied that bug.
		if (servletRequest.getCharacterEncoding() == null)
		{
			try
			{
				// The encoding defined by the wicket settings is used to encode
				// the responses. Thus, it is reasonable to assume the request
				// has the same encoding. This is especially important for
				// forms and form parameters.
				servletRequest.setCharacterEncoding(webApplication.getRequestCycleSettings()
						.getResponseRequestEncoding());
			}
			catch (UnsupportedEncodingException ex)
			{
				throw new WicketRuntimeException(ex.getMessage());
			}
		}

		// Get session for request
		final WebSession session = webApplication.getSession(request);

		// Create a response object and set the output encoding according to
		// wicket's application setttings.
		final WebResponse response = webApplication.newWebResponse(servletResponse);
		response.setWebRequest(request);
		response.setCharacterEncoding(webApplication.getRequestCycleSettings()
				.getResponseRequestEncoding());

		try
		{
			RequestCycle cycle = session.newRequestCycle(request, response);
			try
			{
				// Process request
				cycle.request();
			}
			catch (AbortException e)
			{
				// noop
			}
		}
		finally
		{
			// Close response
			response.close();

			// Clean up thread local session
			Session.unset();

			// Clean up thread local application
			Application.unset();
		}
	}

