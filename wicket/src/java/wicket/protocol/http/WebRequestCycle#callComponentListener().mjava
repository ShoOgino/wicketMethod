	/**
	 * Calls a component listener interface on a page that already exists in the
	 * session. The session component is found using the path in the 'component'
	 * parameter of the request. The interface method to be called is determined
	 * by the 'interface' parameter of the request. The interface can only be
	 * one of the interfaces listed in the secureInterfaceMethods map in the
	 * RequestDispatcher implementation.
	 * 
	 * @return True if the component listener was successfully called
	 * @throws WicketRuntimeException
	 */
	private boolean callComponentListener()
	{
		// Get any component parameter
		final String path = request.getParameter("component");
		final String pageMapName = request.getParameter("pagemap");
		if (path != null)
		{
			// Get version number
			final String versionNumberString = request.getParameter("version");
			final int versionNumber = Strings.isEmpty(versionNumberString) ? 0 : Integer
					.parseInt(versionNumberString);

			// Get page from path
			final Page page = session.getPage(pageMapName, path, versionNumber);
			
			// Does page exist?
			if (page != null)
			{
				// Assume cluster needs to be updated now, unless listener invocation
				// change this (for example, with a simple page redirect)
				setUpdateCluster(true);

				// Execute the user's code
				String interfaceName = request.getParameter("interface");
				invokeInterface(page, path, interfaceName);
				return true;
			}
			else
			{
				onExpiredPage();
				return true;
			}
		}
		return false;
	}

