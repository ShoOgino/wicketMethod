	/**
	 * Calls a component listener interface on a page that already exists in the
	 * session. The session component is found using the path in the 'component'
	 * parameter of the request. The interface method to be called is determined
	 * by the 'interface' parameter of the request. The interface can only be
	 * one of the interfaces listed in the secureInterfaceMethods map in the
	 * RequestDispatcher implementation.
	 * 
	 * @return True if the component listener was successfully called
	 * @throws WicketRuntimeException
	 */
	private boolean callComponentListener()
	{
		// Get any component parameter
		final String path = request.getParameter("component");
		if (path != null)
		{
			// Get page from path
			log.debug("Getting page for path " + path);
			final Page page = session.getPage(path);
			
			// Does page exist?
			if (page != null)
			{
				// Is page stale?
				if (page.isStale())
				{
					onStalePage();
					return true;
				}
				else
				{
					// Execute the user's code
					invokeInterface(page, path, request.getParameter("interface"));
					return true;
				}
			}
			else
			{
				onExpiredPage();
				return true;
			}
		}
		else
		{
			// Get path info
			final String pathInfo = ((WebRequest)request).getHttpServletRequest().getPathInfo();
			if (pathInfo != null)
			{
				// Get resource for path
				final Resource resource = Resource.forPath(pathInfo.substring(1));
				if (resource != null)
				{
					// Request resource
					resource.onResourceRequested();
					return true;
				}
			}
		}
		return false;
	}

