	/**
	 * Gets the default request cycle processor (with lazy initialization). This
	 * is the {@link IRequestCycleProcessor} that will be used by
	 * {@link RequestCycle}s when custom implementations of the request cycle
	 * do not provide their own customized versions.
	 * 
	 * @return the default request cycle processor
	 */
	protected IRequestCycleProcessor getDefaultRequestCycleProcessor()
	{
		if (requestCycleProcessor == null)
		{
			requestCycleProcessor = new CompoundRequestCycleProcessor(new WebRequestEncoder(),
					new DefaultEventProcessorStrategy(), new DefaultExceptionResponseProcessor()
					{
						protected Page onRuntimeException(Page page, RuntimeException e)
						{
							return WebApplication.this.onRuntimeException(page, e);
						}
					});
		}
		return requestCycleProcessor;
	}

