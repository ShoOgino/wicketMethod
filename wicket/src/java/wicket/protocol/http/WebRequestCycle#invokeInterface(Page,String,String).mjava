	/**
	 * Invokes a given interface on a component on a given page
	 * 
	 * @param page
	 *            The page where the component is
	 * @param path
	 *            The path to the component
	 * @param interfaceName
	 *            The name of the interface to call
	 */
	private void invokeInterface(final Page page, final String path, final String interfaceName)
	{
		setInvokePage(page);
		// Invoke interface on the component at the given path on the page
		final Component component = page.get(Strings.afterFirstPathComponent(path, '.'));
		if (component != null)
		{
			Method method = getRequestInterfaceMethod(interfaceName);
			if(method != null)
			{
				// Set the page for the component as the response page
				setResponsePage(page);
				if(!interfaceName.equals("IRedirectListener"))
				{
					// Clear all feedback messages if it isn't a redirect
					page.getFeedbackMessages().clear();
	
					// and see if we have to redirect the render part by default
					ApplicationSettings.RenderStrategy strategy = getSession().getApplication()
							.getSettings().getRenderStrategy();
					boolean issueRedirect = (strategy == ApplicationSettings.REDIRECT_TO_RENDER
							|| strategy == ApplicationSettings.REDIRECT_TO_BUFFER);
	
					setRedirect(issueRedirect);
				}
	
				// Invoke interface on component
				invokeInterface(component, method);
	
				// Set form component values from cookies
				setFormComponentValuesFromCookies(page);
			}
			else if( (method = getAjaxInterfaceMethod(interfaceName)) != null)
			{
				// Clear all feedback messages if it isn't a redirect
				page.getFeedbackMessages().clear();
				IResourceStream stream = (IResourceStream)invokeInterface(component, method);
				setResponseStream(stream);
			}
			else
			{
				throw new WicketRuntimeException("Attempt to access unknown interface " + interfaceName);
			}
		}
		else
		{
			// Must be an internal error of some kind or someone is hacking
			// around with URLs in their browser.
			log.error("No component found for " + path);
			setResponsePage(newPage(application.getPages().getInternalErrorPage()));
		}
	}

