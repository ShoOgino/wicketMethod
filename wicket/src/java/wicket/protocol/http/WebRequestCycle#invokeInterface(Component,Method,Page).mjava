	/**
	 * Invokes a given interface on a component.
	 * 
	 * @param component
	 *            The component
	 * @param method
	 *            The name of the method to call
	 * @param page
	 *            The page on which the component resides
	 */
	private void invokeInterface(final Component component, final Method method, final Page page)
	{
		if (page instanceof WebPage)
		{
			((WebPage)page).beforeCallComponent(component, method);
		}

		try
		{
			// Invoke the interface method on the component
			method.invoke(component, new Object[] {});
		}
		catch (IllegalAccessException e)
		{
			throw new WicketRuntimeException("Cannot access method " + method + " of interface "
					+ method.getClass().getName(), e);
		}
		catch (InvocationTargetException e)
		{
			throw new WicketRuntimeException("Method " + method + " of interface "
					+ method.getClass().getName() + " threw an exception", e);
		}
		finally
		{
			if (page instanceof WebPage)
			{
				((WebPage)page).afterCallComponent(component, method);
			}
		}
	}

