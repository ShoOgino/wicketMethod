	/**
	 * Renders resource to user if URL matches resource pattern
	 *
	 * @return True if the resource was found
	 */
	private boolean resourceReference()
	{
		final String path = request.getPath();
		if (path.startsWith(resourceReferencePrefix))
		{
			final String rawResourceKey = path.substring(resourceReferencePrefix.length());
			Session session = Session.get();
			Locale locale = session.getLocale();
			String localizedResourceKey = SharedResources.path(rawResourceKey, locale, null); // no style because that is already in the key
			String resourceKeyCandidate;

			SharedResources sharedResources = getApplication().getSharedResources();
			resourceKeyCandidate = localizedResourceKey;
			Resource resource = sharedResources.get(resourceKeyCandidate);
			if (resource == null)
			{
				if(locale != null && locale.getCountry() != null)
				{
					// try only the language
					locale = new Locale(locale.getLanguage());
					localizedResourceKey = SharedResources.path(rawResourceKey, locale, null);
					resourceKeyCandidate = localizedResourceKey;
					resource = sharedResources.get(resourceKeyCandidate);
				}
				// try it without any locale (plain url, could be different locale then the default)
				if(resource == null)
				{
					resourceKeyCandidate = rawResourceKey;
					resource = sharedResources.get(resourceKeyCandidate);
				}
				// if still null throw an exception
				if(resource == null)
				{
					log.debug("Could not find resource referenced by key " + resourceKeyCandidate);
					try
					{
						getWebResponse().getHttpServletResponse().sendError(HttpServletResponse.SC_NOT_FOUND);
					}
					catch (IOException ex)
					{
						log.error("error sending 404", ex);
						throw new WicketRuntimeException("Could not find resource referenced by key " + resourceKeyCandidate +
								" and send a 404", ex);
					}
					// do return true, the response is handled.
					return true;
				}
			}
			sharedResources.onResourceRequested(resourceKeyCandidate);
			resource.onResourceRequested();
			return true;
		}
		return false;
	}

