	/**
	 * Redirects browser to the given page
	 * 
	 * @param page
	 *            The page to redirect to
	 * @throws ServletException 
	 */
	protected void redirectTo(final Page page) throws ServletException
	{
		String redirectUrl = page.urlFor(page, IRedirectListener.class);
		// Check if use serverside response for client side redirects
		ApplicationSettings settings = application.getSettings();
		if(settings.getRenderStrategy() == ApplicationSettings.REDIRECT_TO_BUFFER)
		{
			// create the redirect response.
			try
			{
				Response currentResponse = getResponse();
				BufferedResponse redirectResponse = new BufferedResponse(redirectUrl);
				setResponse(redirectResponse);
				// test if the invoker page was the same as the page that is going to be renderd
				if(getInvokePage() == getResponsePage())
				{
					// set it to null because it is already ended in the page.doRender()
					setInvokePage(null);
				}
				page.doRender();
				setResponse(currentResponse);
				Map map = (Map)getWebRequest().getHttpServletRequest().getSession(true).getAttribute("wicket-redirect");
				if(map == null)
				{
					map = new HashMap(3);
					getWebRequest().getHttpServletRequest().getSession(true).setAttribute("wicket-redirect",map);	
				}
				map.put(redirectUrl,redirectResponse);
			}
			catch (RuntimeException ex)
			{
				onRuntimeException(page, ex);
			}
		}
		else
		{
			// redirect page can touch its models already (via for example the constructors) 
			page.internalEndRequest();
		}
		// Redirect to the url for the page
		response.redirect(redirectUrl);
	}

