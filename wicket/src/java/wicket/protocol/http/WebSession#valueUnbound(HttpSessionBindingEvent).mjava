	/**
	 * @see javax.servlet.http.HttpSessionBindingListener#valueUnbound(javax.servlet.http.HttpSessionBindingEvent)
	 */
	public void valueUnbound(HttpSessionBindingEvent event)
	{
		// if application == null then it was serialized/deserialized and then
		// invalidated without being touched anymore.
		// Don't know an easy way to get the application object back so can't
		// call destroy on it except maybe:
		// TODO we could try to get it through the servletcontext, but how to
		// get the context key?  If the session was invalidated, couldn't the
		// application be notified then?
		Application application = getApplication();
		if (application != null)
		{
			// will happen when the session gets invalidated or a timeout.
			String id = getSessionStore().getId();
			if (application instanceof WebApplication)
			{
				((WebApplication)application).sessionDestroyed(id);
			}
		}
	}

