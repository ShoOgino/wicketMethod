	/**
	 * Handles servlet page requests.
	 * 
	 * @param servletRequest
	 *            Servlet request object
	 * @param servletResponse
	 *            Servlet response object
	 * @throws ServletException
	 *             Thrown if something goes wrong during request handling
	 * @throws IOException
	 */
	public final void doGet(final HttpServletRequest servletRequest,
			final HttpServletResponse servletResponse) throws ServletException, IOException
	{
		// try to see if this is a redirect that is already stored in the wicket-redirect 
	    // map of its session.
		// First, are any redirects stored?
		Map redirectMap = (Map)servletRequest.getSession(true).getAttribute("wicket-redirect");
		if(redirectMap != null)
		{
			// there are requests stored, so try to get the one based on this URL
			// (when you work with frames/ popups, there might actually be more temporary
			// buffered requests)
			String requestUri = servletRequest.getRequestURI() + "?" + servletRequest.getQueryString();
			BufferedResponse bufferedResponse = (BufferedResponse)redirectMap.remove(requestUri);
			if(bufferedResponse != null)
			{
				// got a buffered response; now write it
				PrintWriter writer = servletResponse.getWriter();
				servletResponse.setContentLength(bufferedResponse.getContentLength());
				servletResponse.setContentType(bufferedResponse.getContentType());
				writer.write(bufferedResponse.toString());
				writer.close();
				return;
			}
		}

		// Get session for request
		final WebSession session = webApplication.getSession(servletRequest);

		// create a new webrequest
		final WebRequest request = webApplication.newWebRequest(servletRequest);

		// create a response object
		final WebResponse response = webApplication.newWebResponse(servletResponse);

		try
		{
			// create a new request cycle
			RequestCycle cycle = session.newRequestCycle(request, response);
			
			// Process request
			cycle.request();
		}
		finally
		{
			// Close response
			response.close();
		}
	}

