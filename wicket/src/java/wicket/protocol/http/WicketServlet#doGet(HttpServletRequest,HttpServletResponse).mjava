	/**
	 * Handles servlet page requests.
	 * 
	 * @param servletRequest
	 *            Servlet request object
	 * @param servletResponse
	 *            Servlet response object
	 * @throws ServletException
	 *             Thrown if something goes wrong during request handling
	 * @throws IOException
	 */
	public final void doGet(final HttpServletRequest servletRequest,
			final HttpServletResponse servletResponse) throws ServletException, IOException
	{
		// try to see if there is a redirect stored 
		if (webApplication.getSettings().getRenderStrategy() == ApplicationSettings.REDIRECT_TO_BUFFER)
		{
			// TODO should we test here for queryString.indexOf("IRedirectListener") ?
			// only such urls should have a bufferedresponse. 
			String requestUri = servletRequest.getRequestURI() + "?" + servletRequest.getQueryString();
			BufferedResponse bufferedResponse = (BufferedResponse)webApplication.getBufferedResponse(servletRequest, requestUri);
			if (bufferedResponse != null)
			{
				// got a buffered response; now write it
				servletResponse.setContentLength(bufferedResponse.getContentLength());
				servletResponse.setContentType(bufferedResponse.getContentType());
//				PrintWriter pw = servletResponse.getWriter();
//				pw.write(bufferedResponse.getString());
//				pw.close();
				
				OutputStream os = servletResponse.getOutputStream();
				os.write(bufferedResponse.getBytes());
				os.close();
				return;
			}
		}
//		try
//		{
//			servletRequest.setCharacterEncoding("UTF-8");
//		}
//		catch (UnsupportedEncodingException ex)
//		{
//			// TODO Auto-generated catch block
//			
//			ex.printStackTrace();
//		}

		// Get session for request
		final WebSession session = webApplication.getSession(servletRequest);

		// create a new webrequest
		final WebRequest request = webApplication.newWebRequest(servletRequest);

		// create a response object
		final WebResponse response = webApplication.newWebResponse(servletResponse);

		try
		{
			// create a new request cycle
			RequestCycle cycle = session.newRequestCycle(request, response);
			
			// Process request
			cycle.request();
		}
		finally
		{
			// Close response
			response.close();
		}
	}

