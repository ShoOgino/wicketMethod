	/**
	 * Handles servlet page requests.
	 * 
	 * @param servletRequest
	 *            Servlet request object
	 * @param servletResponse
	 *            Servlet response object
	 * @throws ServletException
	 *             Thrown if something goes wrong during request handling
	 * @throws IOException
	 */
	public final void doGet(final HttpServletRequest servletRequest,
			final HttpServletResponse servletResponse) throws ServletException, IOException
	{
		// try to see if this is a redirect that is already stored in the wicket-redirect map of its session.
		Map redirectMap = (Map)servletRequest.getSession(true).getAttribute("wicket-redirect");
		if(redirectMap != null)
		{
			RedirectResponse rr = (RedirectResponse)redirectMap.remove(servletRequest.getRequestURI() + "?" + servletRequest.getQueryString());
			if(rr != null)
			{
				PrintWriter pw = servletResponse.getWriter();
				servletResponse.setContentLength(rr.getContentLength());
				servletResponse.setContentType(rr.getContentType());
				pw.write(rr.toString());
				pw.close();
				return;
			}
		}
		// Get session for request
		final WebSession session = webApplication.getSession(servletRequest);
		final WebRequest request = new WebRequest(servletRequest);
		final WebResponse response = webApplication.getSettings().getBufferResponse()
				? new BufferedWebResponse(servletResponse)
				: new WebResponse(servletResponse);

		try
		{
			// create a new request cycle
			RequestCycle cycle = session.newRequestCycle(request, response);
			// Process request
			cycle.request();
		}
		finally
		{
			// Close response
			response.close();
		}
	}

