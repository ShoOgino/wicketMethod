	/**
	 * Handles servlet page requests.
	 * 
	 * @param servletRequest
	 *            Servlet request object
	 * @param servletResponse
	 *            Servlet response object
	 * @throws ServletException
	 *             Thrown if something goes wrong during request handling
	 * @throws IOException
	 */
	public final void doGet(final HttpServletRequest servletRequest,
			final HttpServletResponse servletResponse) throws ServletException, IOException
	{
		// try to see if there is a redirect stored
		if (webApplication.getSettings().getRenderStrategy() == ApplicationSettings.REDIRECT_TO_BUFFER)
		{
			// TODO should we test here for
			// queryString.indexOf("IRedirectListener") ?
			// only such urls should have a bufferedresponse.
			String requestUri = servletRequest.getRequestURI();
			if (servletRequest.getQueryString() != null)
			{
			    requestUri += "?" + servletRequest.getQueryString();
			}

			BufferedResponse bufferedResponse = (BufferedResponse)webApplication
					.getBufferedResponse(servletRequest, requestUri);

			if (bufferedResponse != null)
			{
				// got a buffered response; now write it
				servletResponse.setContentLength(bufferedResponse.getContentLength());
				servletResponse.setContentType(bufferedResponse.getContentType());

				// PrintWriter pw = servletResponse.getWriter();
				// pw.write(bufferedResponse.getString());
				// pw.close();
				final OutputStream out = servletResponse.getOutputStream();
				out.write(bufferedResponse.getBytes());
				out.close();

				return;
			}
		}

		// If the request does not provide information about the encoding of its
		// body (which includes POST parameters), than assume the default
		// encoding as defined by the wicket application. Bear in mind that the
		// encoding of the request usually is equal to the previous response.
		// However it is a known bug of IE that it does not provide this
		// information. Please see the wiki for more details and why all other
		// browser deliberately copied that bug.
		if (servletRequest.getCharacterEncoding() == null)
		{
			try
			{
				// The encoding defined by the wicket settings is used to encode
				// the responses. Thus, it is reasonable to assume the request
				// has the same encoding. This is especially important for
				// forms and form parameters.
				servletRequest.setCharacterEncoding(webApplication.getSettings()
						.getResponseRequestEncoding());
			}
			catch (UnsupportedEncodingException ex)
			{
				throw new WicketRuntimeException(ex.getMessage());
			}
		}

		// Get session for request
		final WebSession session = webApplication.getSession(servletRequest);

		// create a new webrequest
		final WebRequest request = webApplication.newWebRequest(servletRequest);

		// Create a response object and set the output encoding according to
		// wicket's application setttings.
		final WebResponse response = webApplication.newWebResponse(servletResponse);
		response.setCharacterEncoding(webApplication.getSettings().getResponseRequestEncoding());

		try
		{
			Application.set(webApplication);
			// create a new request cycle
			RequestCycle cycle = session.newRequestCycle(request, response);

			// Process request
			cycle.request();
		}
		finally
		{
			// Close response
			response.close();
			Application.set(null);
		}
	}

