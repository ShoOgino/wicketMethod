	/**
	 * Invokes a given interface on a component.
	 * 
	 * @param component
	 *            The component
	 * @param method
	 *            The name of the method to call
	 */
	private Object invokeInterface(final Component component, final Method method)
	{
		try
		{
			// Invoke the interface method on the component
			return method.invoke(component, new Object[] { });
		}
		catch (IllegalAccessException e)
		{
			throw new WicketRuntimeException("Cannot access method " + method + " of interface "
					+ method.getClass().getName(), e);
		}
		catch (InvocationTargetException e)
		{
			throw new WicketRuntimeException("Method " + method + " of interface " + method.getClass().getName()
					+ " threw an exception", e);
		}
	}

