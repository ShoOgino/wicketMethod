	/**
	 * Constructor.
	 * 
	 * @param request
	 *            The oiginal request information
	 */
	public WebRequestWithCryptedUrl(final HttpServletRequest request)
	{
		super(request);

		// Encoded query string have only a single parameter named "x"
		final String secureParam = request.getParameter("x");
		if ((secureParam != null) && (secureParam.length() > 0))
		{
			// Get the crypt implementation from the application
			ICrypt urlCrypt = Application.get().getSecuritySettings().getCryptFactory().newCrypt();

			// Decrypt the query string
			final String queryString = urlCrypt.decrypt(secureParam);

			// The querystring might have been shortened (length reduced).
			// In that case, lengthen the query string again.
			this.queryString = rebuildUrl(queryString);

			// extract parameter key/value pairs from the query string
			this.parameters = analyzeQueryString(this.queryString);
		}
		else
		{
			// If "x" parameter does not exist, we assume the query string
			// is not encoded.
			// Note: You might want to throw an exception, if you don't want
			// the automatic fallback.
			this.queryString = null;
			this.parameters = new ValueMap();
		}

		// If available, add POST parameters as well. They are not encrypted.
		// The parameters from HttpRequest
		final Enumeration paramNames = request.getParameterNames();

		// For all parameters (POST + URL query string)
		while (paramNames.hasMoreElements())
		{
			String paramName = (String)paramNames.nextElement();

			// Ignore the "x" parameter
			if (!"x".equalsIgnoreCase(paramName))
			{
				String[] values = request.getParameterValues(paramName);
				// add key/value to our parameter map
				this.parameters.put(paramName, values);
			}
		}
	}

