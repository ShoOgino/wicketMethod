	/**
	 * Encode a shared resource target.
	 *
	 * If you override this method to behave different then also
	 * {@link #addResourceParameters(Request, RequestParameters)} should be overridden
	 * to by in sync with that behaviour.
	 *
	 * @param requestCycle
	 *            the current request cycle
	 * @param requestTarget
	 *            the target to encode
	 * @return the encoded url
	 */
	protected CharSequence encode(RequestCycle requestCycle, ISharedResourceRequestTarget requestTarget)
	{
		final CharSequence prefix = urlPrefix(requestCycle);
		final String sharedResourceKey = requestTarget.getResourceKey();
		if ((sharedResourceKey == null) || (sharedResourceKey.trim().length() == 0))
		{
			return prefix;
		}
		else
		{
			final AppendingStringBuffer buffer = new AppendingStringBuffer(sharedResourceKey
					.length()
					+ prefix.length() + 11);
			buffer.append(prefix);
			if (buffer.charAt(buffer.length()-1) == '/')
			{
				buffer.append("resources/");
			}
			else
			{
				buffer.append("/resources/");
			}
			buffer.append(sharedResourceKey);
			// TODO do we need to urlEncode this yes or no?
			// For static resources it is a bit stupid, but if the shared resource
			// is a dynamic resource that gets session info?
			return buffer;
		}
	}

