	/**
	 * Resolves to a page target that was previously rendered.
	 * 
	 * @param webRequestCycle
	 *            the current request cycle
	 * @param componentPath
	 *            the component path
	 * @return the previously rendered page as a request target
	 */
	private IRequestTarget resolveRenderedPage(WebRequestCycle webRequestCycle,
			final String componentPath)
	{
		final WebRequest webRequest = webRequestCycle.getWebRequest();
		final String pageMapName = webRequest.getParameter("pagemap");
		// Get version number
		final String versionNumberString = webRequest.getParameter("version");
		final int versionNumber = Strings.isEmpty(versionNumberString) ? 0 : Integer
				.parseInt(versionNumberString);

		final Session session = webRequestCycle.getSession();
		final Page page = session.getPage(pageMapName, componentPath, versionNumber);

		// Does page exist?
		if (page != null)
		{
			// Assume cluster needs to be updated now, unless listener
			// invocation change this (for example, with a simple page
			// redirect)
			webRequestCycle.setUpdateCluster(true);
			return new PageRequestTarget(page);
		}
		else
		{
			// Page was expired from session, probably because backtracking
			// limit was reached
			return new ExpiredPageClassRequestTarget();
		}
	}

