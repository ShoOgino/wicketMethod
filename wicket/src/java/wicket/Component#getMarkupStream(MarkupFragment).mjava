	/**
	 * Get the markup stream for the fragment. This is a temporary solution 
	 * only until MarkupStream can be created with MarkupFragment _and_ the 
	 * render process properly handles the markup fragments.
	 * 
	 * @param markupFragment The markup fragment
	 * @return markup stream The associated markup stream
	 */
	private MarkupStream getMarkupStream(final MarkupFragment markupFragment)
	{
		// @TODO This is a temporary solution only until MarkupStream can be 
		// created with MarkupFragment _and_ the render process properly handles
		// the markup fragments.
		MarkupStream markupStream = new MarkupStream(markupFragment.getMarkup());
		markupStream.setCurrentIndex(0);
		MarkupElement element = markupStream.get();
		if (!(element instanceof ComponentTag) || (element != markupFragment.get(0)))
		{
			boolean hit = false;
			while (markupStream.hasMore())
			{
				element = markupStream.next();
				if ((element instanceof ComponentTag) && (element == markupFragment.get(0)))
				{
					hit = true;
					break;
				}
			}
			if (hit == false)
			{
				throw new MarkupException("Something has gone wrong here. We should found the MarkupElement: " + this.toString());
			}
		}			

		return markupStream;
	}

