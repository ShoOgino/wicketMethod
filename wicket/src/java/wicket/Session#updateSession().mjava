	/**
	 * Updates this session using changed state information that may have been
	 * replicated to this node on a cluster.
	 */
	public final void updateSession()
	{
		// Get any replicated state from the session
		final State state = (State)getAttribute("state");
		if (state != null)
		{
			// Copy state into Session
			this.state = state;
		}

		// PageStates to add
		final List pageStates = new ArrayList();

		// Copy any changed pages into our (transient) Session
		for (final Iterator iterator = getAttributeNames().iterator(); iterator.hasNext();)
		{
			// Get attribute value
			final Object value = getAttribute((String)iterator.next());
			if (value instanceof PageState)
			{
				pageStates.add(value);
			}
		}

		// Sort in ascending order by access number so that pages which have
		// a higher access number (which means they were accessed more recently)
		// are added /last/.
		Collections.sort(pageStates, new Comparator()
		{
			public int compare(Object object1, Object object2)
			{
				int accessNumber1 = ((PageState)object1).accessNumber;
				int accessNumber2 = ((PageState)object2).accessNumber;
				if (accessNumber1 < accessNumber2)
				{
					return -1;
				}
				if (accessNumber1 > accessNumber2)
				{
					return 1;
				}
				return 0;
			}
		});

		// Add page states as need be
		for (final Iterator iterator = pageStates.iterator(); iterator.hasNext();)
		{
			// Get next attribute name
			final PageState pageState = (PageState)iterator.next();

			// If PageState has not been added to the session
			if (!pageState.addedToSession)
			{
				// Get page from page state
				final Page page = pageState.getPage();

				// Add to page map
				getPageMap().put(new Integer(page.getId()), page);

				// Page has been added to session now
				pageState.addedToSession = true;
			}
		}
	}

