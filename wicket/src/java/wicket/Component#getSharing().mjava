	/**
	 * Gets the type of sharing this component desires, which must be one of:
	 * UNSHARED, SESSION_SHARED or APPLICATION_SHARED. If a component is
	 * unshared, it will have a normal unique URL with a session id and
	 * component path. If it instead specifies SESSION_SHARED, the component
	 * will be given a URL that is constant across the session regardless of
	 * where the component is used. This means that a SESSION_SHARED Image or
	 * DynamicImage component, for example, can be stored in a Session property
	 * and used on multiple application Pages. The URL to the component will be
	 * constant and thus the output of the component can be cached by browsers.
	 * The APPLICATION_SHARED value specifies the same kind of sharing, but
	 * without session scoping. A component which is APPLICATION_SHARED will
	 * have a stable URL to enable browser caching and will be available to ANY
	 * CLIENT requesting it, regardless of who they are. This has obvious
	 * security implications if the component's data is sensitive.
	 * 
	 * @return The kind of sharing this component desires
	 */
	public int getSharing()
	{
		return UNSHARED;
	}

