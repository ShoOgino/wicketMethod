	/**
	 * Sets whether this component is enabled. Specific components may decide to
	 * implement special behaviour that uses this property, like web form
	 * components that add a disabled='disabled' attribute when enabled is
	 * false. If it is not enabled, it will not be allowed to call any listener
	 * method on it (e.g. Link.onClick) and the model object will be protected
	 * (for the common use cases, not for programmer's misuse)
	 * 
	 * @param enabled
	 *            whether this component is enabled
	 * @return This
	 */
	public final Component setEnabled(final boolean enabled)
	{
		// Is new enabled state a change?
		if (enabled != getFlag(FLAG_ENABLED))
		{
			// TODO we can't record any state change as Link.onComponentTag
			// potentially sets this property we probably don't need to support 
			// this, but I'll keep this commented so that we can think about it
			// I (johan) changed the way Link.onComponentTag works. It will
			// disable versioning for a the setEnabled call. 
			// Tell the page that this component's enabled was changed
			if (isVersioned())
			{
				final Page page = findPage();
				if (page != null)
				{
					addStateChange(new EnabledChange(this));
				}
			}
			// Change visibility
			setFlag(FLAG_ENABLED, enabled);
		}
		return this;
	}

