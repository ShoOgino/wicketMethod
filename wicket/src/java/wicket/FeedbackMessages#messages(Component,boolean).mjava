	/**
	 * Gets the list of messages relevant to a given component. If the component
	 * is a container, the list returned will be a list of all messages reported
	 * by children of the container.
	 * 
	 * @param component
	 *            The component to get messages for
	 * @param recurse
	 *            True if children of the component should be considered
	 * @return The messages
	 */
	public final List messages(final Component component, boolean recurse)
	{
		if (messages != null)
		{
			// List of messages reported by children of the form
			final List list = new ArrayList();

			// Loop through messages
			for (Iterator iterator = messages.iterator(); iterator.hasNext();)
			{
				// Get next message
				final FeedbackMessage message = (FeedbackMessage)iterator.next();

				// If the component itself reported the message or if it
				// is an ancestor of whatever component reported the message
				final Component reporter = message.getReporter();
				if (component == reporter || (recurse && component.isAncestorOf(reporter)))
				{
					// add the message to the list
					list.add(message);
				}
			}

			// Return list of messages reported by children of the form.
			return Collections.unmodifiableList(list);
		}
		return Collections.EMPTY_LIST;
	}

