	/**
	 * Gets the markup fragment associated with the component. Except for Pages
	 * it is assumed that the first markup element of the fragment is a tag.
	 * 
	 * @return markup fragment.
	 */
	public MarkupFragment getMarkupFragment()
	{
		// Create the markup path for the component to find the associated
		// markup fragment within the markup file.
		String path = getId();

		// The markup path must be relativ to the markup file, hence we need to
		// find the first parent with associated markup file and update the
		// markup path accordingly.
		MarkupContainer parent = getParent();
		while ((parent != null) && !(parent instanceof IMarkupProvider))
		{
			path = parent.getMarkupFragmentPath(path);
			parent = parent.getParent();
		}

		if (parent == null)
		{
			throw new MarkupNotFoundException("Component has no parent with external markup file: "
					+ getId());
		}

		// We found the markup file and created the markup path. Now go and get
		// the fragment.
		MarkupFragment fragment = ((IMarkupProvider)parent).getMarkupFragment(path);
		if (fragment == null)
		{
			throw new MarkupNotFoundException(
					"Unable to find the markup fragment with markup path '" + path
							+ "'. Component: " + getId());
		}

		return fragment;
	}

