	/**
	 * Gets the markup fragment associated with the component. Except for Pages
	 * it is assumed that the first markup element of the fragment is a tag.
	 * 
	 * @return markup fragment.
	 */
	public MarkupFragment getMarkupFragment()
	{
		if (this.markupFragment != null)
		{
			return this.markupFragment;
		}

		MarkupContainer parent = getParent();
		if (parent == null)
		{
			throw new MarkupNotFoundException("The component is expected to have a parent: "
					+ getId());
		}

		MarkupFragment markupFragment = parent.getMarkupFragment(getId());
		if (markupFragment == null)
		{
			throw new MarkupNotFoundException("Unable to find markup for Component: "
					+ getId());
		}

		return markupFragment;
	}

