	/**
	 * Renders associated markup for a Border or Panel component.
	 * 
	 * @param cycle
	 *           The request cycle
	 * @param openTagName
	 *           the tag to render the associated markup for
	 * @param exceptionMessage
	 *           message that will be used for exceptions
	 */
	protected final void renderAssociatedMarkup(final RequestCycle cycle, final String name,
			final String exceptionMessage)
	{
		// Get markup associated with Border or Panel component
		final MarkupStream originalMarkupStream = getMarkupStream();
		final MarkupStream associatedMarkupStream = getAssociatedMarkupStream();

		associatedMarkupStream.skipRawMarkup();
		setMarkupStream(associatedMarkupStream);

		// Get open tag in associated markup of border component
		final ComponentTag associatedMarkupOpenTag = associatedMarkupStream.getTag();

		// Check for required open tag name
		if (!associatedMarkupStream.atOpenTag("[" + name + "]") &&
		        !(associatedMarkupStream.atOpenTag("region") 
		                && name.equalsIgnoreCase(((ComponentWicketTag) associatedMarkupOpenTag).getNameAttribute())))
		{
		    associatedMarkupStream.throwMarkupException(exceptionMessage);
		}

		renderTag(cycle, associatedMarkupStream, associatedMarkupOpenTag);
		renderBody(cycle, associatedMarkupStream, associatedMarkupOpenTag);
		renderCloseTag(cycle, associatedMarkupStream, associatedMarkupOpenTag);
		setMarkupStream(originalMarkupStream);
	}

