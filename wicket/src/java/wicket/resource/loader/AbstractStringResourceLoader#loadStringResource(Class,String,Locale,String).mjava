	/**
	 * Get the string resource for the given combination of class, key, locale
	 * and style. The information is obtained from a resource bundle associated
	 * with the provided Class (or one of its super classes).
	 * 
	 * @param clazz
	 *            The Class to find resources to be loaded
	 * @param key
	 *            The key to obtain the string for
	 * @param locale
	 *            The locale identifying the resource set to select the strings
	 *            from
	 * @param style
	 *            The (optional) style identifying the resource set to select
	 *            the strings from (see {@link wicket.Session})
	 * @return The string resource value or null if resource not found
	 */
	public String loadStringResource(Class clazz, final String key,
			final Locale locale, final String style)
	{
		if (clazz == null)
		{
			return null;
		}
		
		String value = null;
		while (true)
		{
			// Get (or load) the properties associated with clazz, locale and
			// style
			final Properties props = getProperties(clazz, locale, style);
			if (props != null)
			{
				ValueMap strings = props.getAll();
	
				// Lookup value
				if (log.isDebugEnabled())
				{
					log.debug("Try to load resource from: " + props + "; key: " + key);
				}
				value = strings.getString(key);
				if (value != null)
				{
					if (log.isDebugEnabled())
					{
						log.debug("Found resource from: " + props + "; key: " + key);
					}
	
					break;
				}
			}
			
			// Move to the next superclass
			clazz = clazz.getSuperclass();
			if (isStopResourceSearch(clazz))
			{
				break;
			}
		}

		// Return the resource value (may be null if resource was not found)
		return value;
	}

