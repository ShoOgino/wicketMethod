	/**
	 * Helper method to do the actual loading of resources if required.
	 *
	 * @param style The style to load resources for
	 * @param locale The locale to load reosurces for
	 * @param id The cache id to use
	 * @return The map of loaded resources
	 */
	private synchronized ValueMap loadResources(final String style, final Locale locale,
			final String id)
	{
		// Make sure someone else didn't load our resources while we were waiting
		// for the synchronized lock on the method
		ValueMap strings = (ValueMap) resourceCache.get(id);
		if (strings != null)
		{
			return strings;
		}

		// Do the resource load
		final Properties properties = new Properties();
		final Resource resource = Resource.locate(application.getSettings().getSourcePath(),
				application.getClass(), style, locale, "properties");
		if (resource != null)
		{
			try
			{
				try
				{
					properties.load(new BufferedInputStream(resource.getInputStream()));
					strings = new ValueMap(properties);
				}
				finally
				{
					resource.close();
				}
			}
			catch (ResourceNotFoundException e)
			{
				log.warn("Unable to find resource " + resource, e);
				strings = ValueMap.EMPTY_MAP;
			}
			catch (IOException e)
			{
				log.warn("Unable to access resource " + resource, e);
				strings = ValueMap.EMPTY_MAP;
			}
		}
		else
		{
			// Unable to load resources
			strings = ValueMap.EMPTY_MAP;
		}

		resourceCache.put(id, strings);
		return strings;
	}

