	/**
	 * Get the string resource for the given combination of key, locale and
	 * style. The information is obtained from a single application-wide
	 * resource bundle.
	 * 
	 * @param component
	 *            Not used - can be null
	 * @param key
	 *            The key to obtain the string for
	 * @param locale
	 *            The locale identifying the resource set to select the strings
	 *            from
	 * @param style
	 *            The (optional) style identifying the resource set to select
	 *            the strings from (see {@link wicket.Session})
	 * @return The string resource value or null if resource not loaded
	 */
	public final String loadStringResource(final Component component, String key,
			final Locale locale, final String style)
	{
		// Locate previously loaded resources from the cache
		final String id = createCacheId(clazz, style, locale);
		ValueMap strings = getResourceCache(id);
		if (strings == null)
		{
			// No resources previously loaded, attempt to load them
			strings = loadResources(clazz, style, locale, id);
		}

		if (log.isDebugEnabled())
		{
			log.debug("Try to load resource from: " + id + "; key: " + key);
		}
		
		// Check the key.  If not found and if the key contains a ".", than
		// remove the first component from the path and try again.
        String value = null;
        while ((value == null) &&  (key != null) && (key.length() != 0))
        {
        	value = strings.getString(key);
            if (value != null)
            {
                if (log.isDebugEnabled())
                {
                	log.debug("Found resource from: " + id + "; key: " + key);
                }
                break;
            }
            key = Strings.afterFirst(key, '.');
        }
		
		return value;
	}

