	/**
	 * Configures application settings for a given configuration type.
	 * @param servletContext 
	 * 			  The servlet context what is the start of all the relative paths inside the webapp itself.
	 * @param configurationType
	 *            The configuration type. Must currently be either "development"
	 *            or "deployment".
	 * @param sourceFolder
	 *            If configurationType is "development", then this folder will
	 *            be polled for resource changes, use the system path separator to separate folders
	 * @see File#pathSeparator
	 */
	public final void configure(final ServletContext servletContext, final String configurationType, final String sourceFolder)
	{
		if ("development".equalsIgnoreCase(configurationType))
		{
			if (sourceFolder != null)
			{
				String[] paths = sourceFolder.split(File.pathSeparator);
				WebApplicationPath path = new WebApplicationPath(servletContext);
				for (int i = 0; i < paths.length; i++)
				{
					Folder folder = new Folder(paths[i]);
					if (!folder.exists())
					{
						log.info("Source folder " + folder.getAbsolutePath() + " does not exist adding this as an web app resource");
						path.add(paths[i]);
					}
					else
						path.add(folder);
				}
				setResourcePath(path);
				setResourcePollFrequency(Duration.ONE_SECOND);
			}
			setComponentUseCheck(true);
			setStripWicketTags(false);
		}
		else if ("deployment".equalsIgnoreCase(configurationType))
		{
			setComponentUseCheck(false);
			setStripWicketTags(true);
		}
		else
		{
			throw new IllegalArgumentException(
					"Invalid configuration type.  Must be \"development\" or \"deployment\".");
		}
	}

