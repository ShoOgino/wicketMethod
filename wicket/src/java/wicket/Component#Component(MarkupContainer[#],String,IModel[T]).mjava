	/**
	 * Constructor. All components have names. A component's id cannot be null.
	 * This constructor includes a model.
	 * 
	 * @param parent
	 *            The parent of this component The parent of this component.
	 * @param id
	 *            The non-null id of this component
	 * @param model
	 *            The component's model
	 * 
	 * @throws WicketRuntimeException
	 *             Thrown if the component has been given a null id.
	 */
	public Component(MarkupContainer<?> parent, final String id, final IModel<T> model)
	{
		if (parent == null)
		{
			if (!(this instanceof Page))
			{
				throw new WicketRuntimeException("component without a parent is not allowed.");
			}
		}
		this.parent = parent;
		setId(id);

		getApplication().notifyComponentInstantiationListeners(this);
		if (id.startsWith(AUTO_COMPONENT_PREFIX))
		{
			parent.autoAdd(this);
		}
		else
		{
			try
			{
				MarkupStream markupStream = MarkupFragmentFinder.find(this);
				ComponentTag tag = markupStream.getTag();
				if (tag.hasAttributes())
				{
					markupAttributes = new CopyOnWriteValueMap(tag.getAttributes());
				}
			}
			catch (MarkupException ex)
			{
				throw ex;
			}
			catch (RuntimeException re)
			{
				throw new WicketRuntimeException("Couldn't find the markup of the component '" + id
						+ "' in parent " + parent.getPageRelativePath(), re);
			}
			parent.add(this);
		}

		if (model instanceof IAssignmentAware)
		{
			this.model = ((IAssignmentAware)model).wrapOnAssignment(this);
		}
		else
		{
			this.model = model;
		}
	}

