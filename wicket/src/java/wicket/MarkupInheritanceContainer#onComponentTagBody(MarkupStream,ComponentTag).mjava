	/**
	 * Render the body of &lt;wicket:extend&gt; First get both markups involved
	 * and switch between both if &lt;wicket:child&gt; is found in the 
	 * base class' markup.
	 * 
	 * @see wicket.Component#onComponentTagBody(wicket.markup.MarkupStream,
	 *      wicket.markup.ComponentTag)
	 */
	protected final void onComponentTagBody(final MarkupStream markupStream, final ComponentTag openTag)
	{
	    this.openTag = openTag;

		// Get the inherited markup stream
	    MarkupStream parentMarkupStream = this.getParent().getInheritedMarkupStream();
		if (parentMarkupStream == null)
		{
		    throw new MarkupException("Did not find parent markup (inheritance) for Class: " + super.getClass().getName());
		}

		// Create the "merged" markup stream. And because the parent stream is first, the base
		// class' markup will be rendered first.
		this.dual = new DualMarkupStream(parentMarkupStream, markupStream);
		this.setMarkupStream(this.dual);
		
		// Important: set the parent component's markup as well
		this.getParent().setMarkupStream(this.dual);
		
		// go one rendering the component
		super.onComponentTagBody(this.dual, openTag);
	}

