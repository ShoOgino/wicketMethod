	/**
	 * Render the body of &lt;wicket:extend&gt; First get both markups involved
	 * and switch between both if &lt;wicket:child&gt; is found in the base
	 * class' markup.
	 * 
	 * @see wicket.Component#onComponentTagBody(wicket.markup.MarkupStream,
	 *      wicket.markup.ComponentTag)
	 */
	protected final void onComponentTagBody(final MarkupStream markupStream,
			final ComponentTag openTag)
	{
		this.openTag = openTag;
		this.resolved = false;

		// Get the real component
		final MarkupContainer parent = this.getParent();

		// Get the inherited markup stream
		final MarkupStream parentMarkupStream = getInheritedMarkupStream(parent);
		if (parentMarkupStream == null)
		{
			throw new MarkupException("Did not find parent markup (inheritance) for Class: "
					+ super.getClass().getName());
		}

		if (!(parent instanceof MarkupInheritanceContainer))
		{
			this.dual = new DualMarkupStream(markupStream);

			// Important: set the parent component's markup as well
			parent.setMarkupStream(this.dual);
		}
		else
		{
			this.dual = (DualMarkupStream)parent.getMarkupStream();
		}

		this.dual.push(parentMarkupStream);
		this.setMarkupStream(this.dual);

		// go on rendering the component
		log.debug("inherit: onComponentTagBody: " + dual.getCurrentMarkupStream().toString());
		super.onComponentTagBody(this.dual, openTag);
		this.dual.pop();
		log.debug("inherit: back from onComponentTagBody: "
				+ dual.getCurrentMarkupStream().toString());
	}

