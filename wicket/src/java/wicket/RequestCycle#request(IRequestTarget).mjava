	/**
	 * THIS METHOD IS NOT PART OF THE WICKET PUBLIC API. DO NOT CALL IT.
	 * <p>
	 * Responds to a request with the request target.
	 * 
	 * @param target
	 *            request target
	 * 
	 * @throws ServletException
	 */
	public final void request(IRequestTarget target) throws ServletException
	{
		// prepare the request
		prepare();

		// get the processor we delegate the handling of the request
		// cycle behaviour to
		IRequestCycleProcessor processor = getRequestCycleProcessor();
		if (processor == null)
		{
			throw new WicketRuntimeException("request cycle processor must be not-null");
		}

		try
		{
			// set it as the current target, on the top of the stack
			setRequestTarget(target);

			// see whether we need to do synchronization
			Object synchronizeLock = target.getSynchronizationLock();

			// if the lock is not-null, synchronize the rest of the request
			// cycle processing
			if (synchronizeLock != null)
			{
				synchronized (synchronizeLock)
				{
					processEventsAndRespond(processor);
				}
			}
			else
			{
				// no lock means no synchronization (e.g. when handling static
				// resources or external resources)
				processEventsAndRespond(processor);
			}
		}
		finally
		{
			cleanUp();
		}
	}

