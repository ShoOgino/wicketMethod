	/**
	 * Traverse the component hierachy up to the Page and add each
	 * component class to the list (stack) returned
	 * 
	 * @param component The component to evaluate
	 * @return The stack of classes 
	 */
	private List getComponentStack(final Component component)
	{
		if (component == null)
		{
			return null;
		}

		if (component.getPage() == null)
		{
			throw new IllegalArgumentException("Component without associated Page: "
					+ component.toString(true));
		}

		// Build search stack
		List searchStack = new ArrayList();
		searchStack.add(component.getClass());

		if (!(component instanceof Page))
		{
			MarkupContainer container = component.getParent();
			while (true)
			{
				searchStack.add(container.getClass());
				if (container instanceof Page)
				{
					break;
				}

				container = container.getParent();
			}
		}
		return searchStack;
	}

