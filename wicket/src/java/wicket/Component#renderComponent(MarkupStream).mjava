	/**
	 * Renders the component at the current position in the given markup stream.
	 * The method onComponentTag() is called to allow the component to mutate
	 * the start tag. The method onComponentTagBody() is then called to permit
	 * the component to render its body.
	 * 
	 * @param markupStream
	 *            The markup stream
	 */
	protected final void renderComponent(final MarkupStream markupStream)
	{
		// Get mutable copy of next tag
		final ComponentTag tag = markupStream.getTag().mutable();

		// Call any tag handler
		onComponentTag(tag);

		// If we're an openclose tag
		final XmlTag.Type type = tag.getType();
		if (!tag.isOpenClose() && !tag.isOpen())
		{
			// We were something other than <tag> or <tag/>
			markupStream
					.throwMarkupException("Method renderComponent called on bad markup element "
							+ tag);
		}

		// Render open tag
		renderComponentTag(tag);
		markupStream.next();

		// Render the body only if open-body-close. Do not render if open-close.
		if (tag.isOpen())
		{
			// Render the body
			onComponentTagBody(markupStream, tag);
		}

		// Render close tag
		if (tag.isOpen())
		{
			renderClosingComponentTag(markupStream, tag);
		}
	}

