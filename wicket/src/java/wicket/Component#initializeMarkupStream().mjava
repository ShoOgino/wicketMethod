	/**
	 * Get the ComponentTag from the Markup which is associated with the
	 * component.
	 * 
	 * @return An unmutable map with the attributes of the components tag
	 */
	private final MarkupStream initializeMarkupStream()
	{
		// Save the parent's markup stream to re-assign it at the end
		MarkupContainer parent = getParent();

		// Get the parent's associated markup stream.
		MarkupContainer parentWithAssociatedMarkup = findParentWithAssociatedMarkup();
		MarkupStream markupStream = null;
		while (markupStream == null)
		{
			markupStream = parentWithAssociatedMarkup.getAssociatedMarkupStream(true);

			// Make sure the markup stream is positioned at the correct element
			String componentPath = parent.getPageRelativePath();
			String parentWithAssociatedMarkupPath = parentWithAssociatedMarkup
					.getPageRelativePath();
			String relativePath = componentPath.substring(parentWithAssociatedMarkupPath.length());
			if (relativePath.startsWith(":"))
			{
				relativePath = relativePath.substring(1);
			}

			// If the component is defined in the markup
			int index = markupStream.findComponentIndex(relativePath, getId());
			if (index != -1)
			{
				// than position the stream at the beginning of the component
				markupStream.setCurrentIndex(index);
			}
			else
			{
				// Not found, reset the stream
				markupStream = null;

				// Yet another exception for Border in the code base.
				// However if the container with the markup is a Border, than
				// ...
				if (parentWithAssociatedMarkup instanceof Border)
				{
					parentWithAssociatedMarkup = parentWithAssociatedMarkup
							.findParentWithAssociatedMarkup();
				}
			}
		}

		return markupStream;
	}

