	/**
	 * Get the ComponentTag from the Markup which is associated with the
	 * component.
	 * 
	 * @return An unmutable map with the attributes of the components tag
	 */
	private final MarkupStream initializeMarkupStream()
	{
		// Save the parent's markup stream to re-assign it at the end
		MarkupContainer parent = getParent();

		// Get the parent's associated markup stream.
		MarkupContainer parentWithAssociatedMarkup = findParentWithAssociatedMarkup();
		MarkupStream markupStream = parentWithAssociatedMarkup.getAssociatedMarkupStream();

		// Make sure the markup stream is positioned at the correct element
		String componentPath = parent.getPageRelativePath();
		String parentWithAssociatedMarkupPath = parentWithAssociatedMarkup.getPageRelativePath();
		String relativePath = componentPath.substring(parentWithAssociatedMarkupPath.length());
		if (relativePath.startsWith(":"))
		{
			relativePath = relativePath.substring(1);
		}

		int index = markupStream.findComponentIndex(relativePath, getId());
		if (index == -1)
		{
			throw new WicketRuntimeException("Unable to determine markup for component: "
					+ this.toString());
		}
		markupStream.setCurrentIndex(index);
		return markupStream;
	}

