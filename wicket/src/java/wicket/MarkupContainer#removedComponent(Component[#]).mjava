	/**
	 * @param component
	 *            Component being removed
	 */
	private final void removedComponent(final Component<?> component)
	{
		// Notify Page that component is being removed
		final Page page = component.findPage();
		if (page != null)
		{
			page.componentRemoved(component);
		}

		// detach children models
		if (component instanceof MarkupContainer)
		{
			((MarkupContainer<?>)component).visitChildren(new IVisitor<Component>()
			{
				public Object component(Component component)
				{
					try
					{
						// detach any models of the component
						component.detachModels();
					}
					catch (Exception e) // catch anything; we MUST detach all
					// models
					{
						log.error("detaching models of component " + component + " failed:", e);
					}
					return IVisitor.CONTINUE_TRAVERSAL;
				}
			});
		}

		// Detach model
		component.detachModels();
		// Component is removed
		//component.setParent(null);
	}

