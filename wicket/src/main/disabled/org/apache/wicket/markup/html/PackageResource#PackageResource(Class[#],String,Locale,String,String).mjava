	/**
	 * Hidden constructor.
	 * 
	 * @param scope
	 *            This argument will be used to get the class loader for loading the package
	 *            resource, and to determine what package it is in
	 * @param path
	 *            The path to the resource
	 * @param locale
	 *            The locale of the resource
	 * @param style
	 *            The style of the resource
	 * @param variation
	 *            The component's variation (of the style)
	 */
	protected PackageResource(final Class<?> scope, final String path, final Locale locale,
		final String style, final String variation)
	{
		// Convert resource path to absolute path relative to base package
		absolutePath = Packages.absolutePath(scope, path);

		if (!accept(scope, path))
		{
			throw new PackageResourceBlockedException(
				"Access denied to (static) package resource " + absolutePath +
					". See IPackageResourceGuard");
		}

		scopeName = scope.getName();
		this.path = path;
		this.locale = locale;
		this.style = style;
		this.variation = variation;

		if (locale != null)
		{
			/*
			 * Get the resource stream so that the real locale that could be resolved is set.
			 * Silently ignore not resolvable resources as we are not serving the resource for now
			 */
			getResourceStream(false);

			// Invalidate it again so that it won't hold up resources
			invalidate();
		}
	}

