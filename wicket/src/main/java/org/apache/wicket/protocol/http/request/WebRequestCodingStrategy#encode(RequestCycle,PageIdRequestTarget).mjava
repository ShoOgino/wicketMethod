	/**
	 * Encode a pageid request target.
	 * 
	 * @param requestCycle
	 *            the current request cycle
	 * @param requestTarget
	 *            the target to encode
	 * @return the encoded url
	 */
	protected CharSequence encode(RequestCycle requestCycle, PageIdRequestTarget requestTarget)
	{
		final PageId id = requestTarget.getPageId();

		// Start string buffer for url
		final AppendingStringBuffer url = new AppendingStringBuffer(64);
		url.append('?');
		url.append(INTERFACE_PARAMETER_NAME);
		url.append('=');

		// add pagemap
		if (!Objects.equal(PageMap.DEFAULT_NAME, id.getPageMapName()))
		{
			url.append(id.getPageMapName());
		}
		url.append(Component.PATH_SEPARATOR);

		// add page id
		url.append(id.getPageNumber());
		url.append(Component.PATH_SEPARATOR);

		// add version
		url.append(id.getPageVersion());
		url.append(Component.PATH_SEPARATOR);

		// add listener interface (noop because we default to redirect listener which is default)
		url.append(Component.PATH_SEPARATOR);

		// behavior id (noop because we dont care aboute behaviors
		url.append(Component.PATH_SEPARATOR);

		return url;
	}

