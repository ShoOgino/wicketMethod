	/**
	 * Encode a shared resource target.
	 * 
	 * If you override this method to behave different then also
	 * {@link #addResourceParameters(Request, ObsoleteRequestParameters)} should be overridden to be in sync
	 * with that behavior.
	 * 
	 * @param requestCycle
	 *            the current request cycle
	 * @param requestTarget
	 *            the target to encode
	 * @return the encoded url
	 */
	protected CharSequence encode(RequestCycle requestCycle,
		ISharedResourceRequestTarget requestTarget)
	{
		final String sharedResourceKey = requestTarget.getResourceKey();
		if ((sharedResourceKey == null) || (sharedResourceKey.trim().length() == 0))
		{
			return "";
		}
		else
		{
			final AppendingStringBuffer buffer = new AppendingStringBuffer(
				sharedResourceKey.length());
			buffer.append(RESOURCES_PATH_PREFIX);
			buffer.append(sharedResourceKey);
			Map map = requestTarget.getRequestParameters().getParameters();
			if (map != null && map.size() > 0)
			{
				buffer.append('?');
				Iterator<Entry<String, String[]>> it = map.entrySet().iterator();
				while (it.hasNext())
				{
					Map.Entry<String, String[]> entry = it.next();
					buffer.append(entry.getKey());
					buffer.append('=');
					buffer.append(entry.getValue());
					if (it.hasNext())
					{
						buffer.append('&');
					}
				}
			}
			return buffer;
		}
	}

