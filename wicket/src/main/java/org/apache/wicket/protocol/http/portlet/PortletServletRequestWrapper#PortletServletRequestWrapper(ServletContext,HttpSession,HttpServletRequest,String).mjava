	/**
	 * Package private constructor which is called from either of the two public constructors - sets
	 * up the various portlet specific versions of the context path, servlet path, request URI
	 * etc...
	 * 
	 * @param context
	 * @param proxiedSession
	 * @param request
	 * @param filterPath
	 */
	protected PortletServletRequestWrapper(ServletContext context, HttpSession proxiedSession,
		HttpServletRequest request, String filterPath)
	{
		super(request);
		session = proxiedSession;
		if (proxiedSession == null)
		{
			session = request.getSession(false);
		}
		servletPath = makeServletPath(filterPath);
		// retrieve the correct contextPath, requestURI and queryString
		// if request is an include
		if ((contextPath = (String)request.getAttribute("javax.servlet.include.context_path")) != null)
		{
			requestURI = (String)request.getAttribute("javax.servlet.include.request_uri");
			queryString = (String)request.getAttribute("javax.servlet.include.query_string");
		}
		// else if request is a forward
		else if ((contextPath = (String)request.getAttribute("javax.servlet.forward.context_path")) != null)
		{
			requestURI = (String)request.getAttribute("javax.servlet.forward.request_uri");
			queryString = (String)request.getAttribute("javax.servlet.forward.query_string");
		}
		// else it is a normal request
		else
		{
			contextPath = request.getContextPath();
			requestURI = request.getRequestURI();
			queryString = request.getQueryString();
		}
	}

