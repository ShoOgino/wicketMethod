	/**
	 * Initialize a new WebRequestCycle and all its dependent objects
	 * 
	 * @param <C>
	 * 
	 * @param pageClass
	 * @param params
	 */
	public <C extends Page> void processRequestCycle(final Class<C> pageClass, PageParameters params)
	{
		final WebRequestCycle cycle = setupRequestAndResponse();
		try
		{
			BookmarkablePageRequestTarget requestTarget = new BookmarkablePageRequestTarget(
				pageClass, params);
			if (pageClass == application.getHomePage())
			{
				// special handling

				// code is copy pasted from
				// org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.encode(
				// RequestCycle
				// , IBookmarkablePageRequestTarget)
				// since only the test is suffering from this problem

				// this is a bit ugly and i am open to suggestions on how to fix this better. MM
				String pageMapName;
				IRequestTarget currentTarget = cycle.getRequestTarget();
				if (currentTarget instanceof IPageRequestTarget)
				{
					Page currentPage = ((IPageRequestTarget)currentTarget).getPage();
					final IPageMap pageMap = currentPage.getPageMap();
					if (pageMap.isDefault())
					{
						pageMapName = "";
					}
					else
					{
						pageMapName = pageMap.getName();
					}
				}
				else
				{
					pageMapName = "";
				}
				AppendingStringBuffer buffer = new AppendingStringBuffer(64);
				WebRequestEncoder encoder = new WebRequestEncoder(buffer);
				encoder.addValue(WebRequestCodingStrategy.BOOKMARKABLE_PAGE_PARAMETER_NAME,
					pageMapName + Component.PATH_SEPARATOR + pageClass.getName());
				if (params != null)
				{
					final Iterator<String> iterator = params.keySet().iterator();
					while (iterator.hasNext())
					{
						final String key = iterator.next();
						final String values[] = params.getStringArray(key);
						if (values != null)
						{
							for (int i = 0; i < values.length; i++)
							{
								encoder.addValue(key, values[i]);
							}
						}
					}
				}
				String url = buffer.toString();
				String path = application.getClass().getName();
				path = path.substring(path.lastIndexOf('.') + 1);
				path = "/" + path + "/" + path + "/";
				getServletRequest().setURL(path + url);
			}
			else if (application.getHomePage() != null)
			{
				String url = cycle.urlFor(requestTarget).toString();
				String path = application.getClass().getName();
				path = path.substring(path.lastIndexOf('.') + 1);
				path = "/" + path + "/" + path + "/";
				getServletRequest().setURL(path + url);
			}
			else
			{
				log.warn("The application does not have a HomePage, this might cause problems or unexpected behavior");
			}
			cycle.request(requestTarget);
		}
		finally
		{
			cycle.getResponse().close();
		}
		postProcessRequestCycle(cycle);
	}

