		/**
		 * Returns a {@link PageMapEntry} for specified pagemap. If the create attribute is set and
		 * the pagemap does not exist, new {@link PageMapEntry} will be created.
		 * 
		 * @param pageMapName
		 * @param create
		 * @return
		 */
		public PageMapEntry getPageMapEntry(String pageMapName, boolean create)
		{
			PageMapEntry result = null;
			for (Iterator<PageMapEntry> i = pageMapEntryList.iterator(); i.hasNext();)
			{
				PageMapEntry entry = i.next();
				if (entry.pageMapName == pageMapName ||
					(entry.pageMapName != null && entry.pageMapName.equals(pageMapName)))
				{
					result = entry;
				}

			}
			if (result == null && create)
			{
				result = new PageMapEntry();
				result.pageMapName = pageMapName;
				result.fileName = diskPageStore.getPageMapFileName(sessionId, pageMapName, true);
				result.manager = new PageWindowManager(diskPageStore.getMaxSizePerPageMap());
				pageMapEntryList.add(result);
			}
			return result;
		}

