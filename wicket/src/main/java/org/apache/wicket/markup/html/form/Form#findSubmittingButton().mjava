	/**
	 * Gets the IFormSubmittingComponent which submitted this form.
	 * 
	 * @return The component which submitted this form, or null if the processing was not triggered
	 *         by a registered IFormSubmittingComponent
	 */
	public final IFormSubmittingComponent findSubmittingButton()
	{
		IFormSubmittingComponent submittingComponent = (IFormSubmittingComponent)getPage().visitChildren(
			IFormSubmittingComponent.class, new IVisitor<Component< ? >>()
			{
				public Object component(final Component< ? > component)
				{
					// Get submitting component
					final IFormSubmittingComponent submittingComponent = (IFormSubmittingComponent)component;

					// Check for component-name or component-name.x request string
					if (submittingComponent.getForm() != null &&
						submittingComponent.getForm().getRootForm() == Form.this &&
						(getRequest().getParameter(submittingComponent.getInputName()) != null || getRequest().getParameter(
							submittingComponent.getInputName() + ".x") != null))
					{
						if (!component.isVisible())
						{
							throw new WicketRuntimeException("Submit Button " +
								submittingComponent.getInputName() + " (path=" +
								component.getPageRelativePath() + ") is not visible");
						}
						return submittingComponent;
					}
					return CONTINUE_TRAVERSAL;
				}
			});

		return submittingComponent;
	}

