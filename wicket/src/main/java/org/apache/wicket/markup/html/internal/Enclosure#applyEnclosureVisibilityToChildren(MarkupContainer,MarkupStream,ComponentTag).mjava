	/**
	 * 
	 * @param container
	 * @param markupStream
	 * @param enclosureOpenTag
	 */
	private void applyEnclosureVisibilityToChildren(final MarkupContainer container,
		final MarkupStream markupStream, final ComponentTag enclosureOpenTag)
	{
		DirectChildTagIterator it = new DirectChildTagIterator(markupStream, enclosureOpenTag);
		while (it.hasNext())
		{
			final ComponentTag tag = it.next();
			if (tag.isAutoComponentTag() == false)
			{
				final Component child = container.get(tag.getId());
				final boolean childVisibility = child.isVisibilityAllowed();

				// we only apply visibility changes to hide a component, otherwise it would be
				// possible to unhide a component which should be hidden
				if (!isVisible() && childVisibility)
				{
					// record original visiblity allowed value, will restore later
					changes.put(child, childVisibility);
					child.setVisibilityAllowed(false);
				}
			}
		}
		it.rewind();
	}

