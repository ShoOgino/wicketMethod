	/**
	 * @see org.apache.wicket.markup.repeater.IItemReuseStrategy#getItems(org.apache.wicket.markup.repeater.IItemFactory,
	 *      java.util.Iterator, java.util.Iterator)
	 */
	public <T> Iterator<Item<T>> getItems(final IItemFactory<T> factory,
		final Iterator<IModel<T>> newModels, Iterator<Item<T>> existingItems)
	{
		final Map<IModel<T>, Item<T>> modelToItem = Generics.newHashMap();
		while (existingItems.hasNext())
		{
			final Item<T> item = existingItems.next();
			modelToItem.put(item.getModel(), item);
		}

		return new Iterator<Item<T>>()
		{
			private int index = 0;

			public boolean hasNext()
			{
				return newModels.hasNext();
			}

			public Item<T> next()
			{
				final IModel<T> model = newModels.next();
				final Item<T> oldItem = modelToItem.get(model);

				final Item<T> item;
				if (oldItem == null)
				{
					item = factory.newItem(index, model);
				}
				else
				{
					oldItem.setIndex(index);
					item = oldItem;
				}
				index++;

				return item;
			}

			public void remove()
			{
				throw new UnsupportedOperationException();
			}

		};
	}

