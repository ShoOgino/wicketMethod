	/**
	 * 
	 * @see org.apache.wicket.markup.resolver.IComponentResolver#resolve(org.apache.wicket.MarkupContainer,
	 *      org.apache.wicket.markup.MarkupStream, org.apache.wicket.markup.ComponentTag)
	 */
	public boolean resolve(final MarkupContainer container, final MarkupStream markupStream,
		final ComponentTag tag)
	{
		if ((tag != null) && (tag.getId().startsWith(WICKET_RELATIVE_PATH_PREFIX_CONTAINER_ID)))
		{
			String id = WICKET_RELATIVE_PATH_PREFIX_CONTAINER_ID +
				container.getPage().getAutoIndex();

			final IMarkupFragment markup = markupStream.getMarkupFragment();

			// we do not want to mess with the hierarchy, so the container has to be
			// transparent as it may have wicket components inside. for example a raw anchor tag
			// that contains a label.
			final Component wc = new WebMarkupContainer(id)
			{
				private static final long serialVersionUID = 1L;

				/**
				 * @see org.apache.wicket.Component#getMarkup()
				 */
				@Override
				public IMarkupFragment getMarkup()
				{
					return markup;
				}

				@Override
				public boolean isTransparentResolver()
				{
					return tag.isOpenClose() == false;
				}
			};

			container.autoAdd(wc, markupStream);
			return true;
		}
		return false;
	}

