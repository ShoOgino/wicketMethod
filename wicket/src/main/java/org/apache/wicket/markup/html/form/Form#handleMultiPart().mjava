	/**
	 * Handles multi-part processing of the submitted data.
	 * 
	 * WARNING
	 * 
	 * If this method is overridden it can break {@link FileUploadField}s on this form
	 * 
	 * @return false if form is multipart and upload failed
	 */
	protected boolean handleMultiPart()
	{
		if (isMultiPart())
		{
			// Change the request to a multipart web request so parameters are
			// parsed out correctly
			try
			{
				ServletWebRequest request = (ServletWebRequest)getRequest();
				final WebRequest multipartWebRequest = request.newMultipartWebRequest(getMaxSize());
				// TODO: Can't this be detected from header?
				getRequestCycle().setRequest(multipartWebRequest);
			}
			catch (FileUploadException e)
			{
				// Create model with exception and maximum size values
				final Map<String, Object> model = new HashMap<String, Object>();
				model.put("exception", e);
				model.put("maxSize", getMaxSize());

				onFileUploadException(e, model);

				// don't process the form if there is a FileUploadException
				return false;
			}
		}
		return true;
	}

