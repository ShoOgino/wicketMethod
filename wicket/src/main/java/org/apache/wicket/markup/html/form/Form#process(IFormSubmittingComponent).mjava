	/**
	 * Process the form. Though you can override this method to provide your own algorithm, it is
	 * not recommended to do so.
	 * 
	 * <p>
	 * See the class documentation for further details on the form processing
	 * </p>
	 * 
	 * @param submittingComponent
	 *            component responsible for submitting the form, or <code>null</code> if none (eg
	 *            the form has been submitted via the enter key or javascript calling
	 *            form.onsubmit())
	 * 
	 * @see #delegateSubmit(IFormSubmittingComponent) for an easy way to process submitting
	 *      component in the default manner
	 */
	public void process(IFormSubmittingComponent submittingComponent)
	{
		// process the form for this request
		if (process())
		{
			// let clients handle further processing
			delegateSubmit(submittingComponent);
		}

		// WICKET-1912
		// If the form is stateless page parameters contain all form component
		// values. We need to remove those otherwise they get appended to action URL
		final PageParameters parameters = getPage().getPageParameters();
		if (parameters != null)
		{
			visitFormComponents(new FormComponent.IVisitor()
			{
				public Object formComponent(IFormVisitorParticipant formComponent)
				{
					if (formComponent instanceof FormComponent)
					{
						parameters.remove(((FormComponent<?>)formComponent).getInputName());
					}

					return Component.IVisitor.CONTINUE_TRAVERSAL;
				}
			});
			parameters.remove(getHiddenFieldId());
		}
	}

