	/**
	 * @see org.apache.wicket.markup.resolver.IComponentResolver#resolve(org.apache.wicket.MarkupContainer,
	 *      org.apache.wicket.markup.MarkupStream, org.apache.wicket.markup.ComponentTag)
	 */
	public boolean resolve(final MarkupContainer container, final MarkupStream markupStream,
		final ComponentTag tag)
	{
		if (tag instanceof WicketTag)
		{
			WicketTag wtag = (WicketTag)tag;
			if (wtag.isLinkTag() && (wtag.getNamespace() != null))
			{
				final String id = tag.getId() + container.getPage().getAutoIndex();
				tag.setId(id);

				final IMarkupFragment markup = markupStream.getMarkupFragment();

				final Component component = new WebMarkupContainer(id)
				{
					private static final long serialVersionUID = 1L;

					/**
					 * @see org.apache.wicket.MarkupContainer#isTransparentResolver()
					 */
					@Override
					public boolean isTransparentResolver()
					{
						return true;
					}

					/**
					 * @see org.apache.wicket.Component#getMarkup()
					 */
					@Override
					public IMarkupFragment getMarkup()
					{
						return markup;
					}
				};

				container.autoAdd(component, markupStream);

				// Yes, we handled the tag
				return true;
			}
		}

		// We were not able to handle the tag
		return false;
	}

