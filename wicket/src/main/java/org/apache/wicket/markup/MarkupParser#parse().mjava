	/**
	 * Reads and parses markup from a file.
	 * 
	 * @return The markup
	 * @throws IOException
	 * @throws ResourceStreamNotFoundException
	 */
	public final Markup parse() throws IOException, ResourceStreamNotFoundException
	{
		MarkupResourceStream markupResourceStream = markup.getMarkupResourceStream();

		// Initialize the xml parser
		xmlParser.parse(markupResourceStream.getResource().getInputStream(),
			markupSettings.getDefaultMarkupEncoding());

		// parse the xml markup and tokenize it into wicket relevant markup
		// elements
		parseMarkup();

		markupResourceStream.setEncoding(xmlParser.getEncoding());
		markupResourceStream.setXmlDeclaration(xmlParser.getXmlDeclaration());

		if (xmlParser.getXmlDeclaration() == null)
		{
			if (markupSettings.getThrowExceptionOnMissingXmlDeclaration())
			{
				throw new MarkupException(markupResourceStream.getResource(),
					"The markup file does not have a XML declaration prolog. "
						+ ". E.g. <?xml version=\"1.0\" encoding=\"UTF-8\" ?>");
			}
			else
			{
				log.debug("The markup file does not have a XML declaration prolog: " +
					markupResourceStream.getResource() +
					". It is more save to use it. E.g. <?xml version=\"1.0\" encoding=\"UTF-8\" ?>");
			}
		}

		return markup;
	}

