	/**
	 * Processes the component tag.
	 * 
	 * @param tag
	 *            Tag to modify
	 * @see org.apache.wicket.Component#onComponentTag(org.apache.wicket.markup.ComponentTag)
	 */
	@Override
	protected void onComponentTag(final ComponentTag tag)
	{
		checkComponentTag(tag, "select");

		// Should a roundtrip be made (have onSelectionChanged called) when the
		// selection changed?
		if (wantOnSelectionChangedNotifications())
		{
			// we do not want relative URL here, because it will be used by
			// Form#dispatchEvent
			Url url = getRequestCycle().urlFor(
				new ListenerInterfaceRequestHandler(new PageAndComponentProvider(getPage(), this),
					IOnChangeListener.INTERFACE));

			Form<?> form = findParent(Form.class);
			if (form != null)
			{
				RequestContext rc = RequestContext.get();
				if (rc.isPortletRequest())
				{
					// restore url back to real wicket path as its going to be interpreted by the
					// form itself
					// TODO NG
					// url = ((PortletRequestContext)rc).getLastEncodedPath();
				}
				tag.put("onchange", form.getJsForInterfaceUrl(url.toString()));
			}
			else
			{

				// TODO: following doesn't work with portlets, should be posted to a dynamic hidden
				// form
				// with an ActionURL or something
				tag.put("onchange", "window.location.href='" +
					getRequestCycle().getUrlRenderer().renderUrl(url) +
					(url.toString().indexOf('?') > -1 ? "&amp;" : "?") + getInputName() +
					"=' + this.options[this.selectedIndex].value;");
			}
		}

		super.onComponentTag(tag);
	}

