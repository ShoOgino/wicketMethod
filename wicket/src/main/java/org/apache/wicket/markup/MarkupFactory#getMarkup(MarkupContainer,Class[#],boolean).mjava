	/**
	 * Gets a fresh markup stream that contains the (immutable) markup resource for this class.
	 * 
	 * @param container
	 *            The container the markup should be associated with
	 * @param clazz
	 *            Must be the container class or any of its super classes.
	 * @param enforceReload
	 *            The cache will be ignored and all, including inherited markup files, will be
	 *            reloaded. Whatever is in the cache, it will be ignored
	 * @return A stream of MarkupElement elements
	 */
	public final Markup getMarkup(final MarkupContainer container, final Class<?> clazz,
		final boolean enforceReload)
	{
		Checks.argumentNotNull(container, "container");
		Checks.argumentNotNull(clazz, "clazz");
		IMarkupCache cache = getMarkupCache();
		if (cache != null)
		{
			return cache.getMarkup(container, clazz, enforceReload);
		}

		return loadMarkup(container, null, enforceReload);
	}

