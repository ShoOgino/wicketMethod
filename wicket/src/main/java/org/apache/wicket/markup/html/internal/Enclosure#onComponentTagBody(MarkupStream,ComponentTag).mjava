	/**
	 * @see org.apache.wicket.MarkupContainer#onComponentTagBody(org.apache.wicket.markup.MarkupStream,
	 *      org.apache.wicket.markup.ComponentTag)
	 */
	@Override
	protected void onComponentTagBody(final MarkupStream markupStream, final ComponentTag openTag)
	{
		// TODO this is where I wish we had something like "enum(TAG, BODY, NONE, ALL) isVisible()"
		// set the enclosure visibility
		boolean visible = childComponent.determineVisibility();

		// We want to know which components are rendered inside the enclosure
		final IComponentOnAfterRenderListener listener = new EnclosureListener(this);

		try
		{
			// register the listener
			getApplication().addComponentOnAfterRenderListener(listener);

			if (visible)
			{
				super.onComponentTagBody(markupStream, openTag);
			}
			else
			{
				RequestCycle cycle = getRequestCycle();
				Response response = cycle.getResponse();
				try
				{
					cycle.setResponse(NullResponse.getInstance());

					super.onComponentTagBody(markupStream, openTag);
				}
				finally
				{
					cycle.setResponse(response);
				}
			}
		}
		finally
		{
			// make sure we remove the listener
			getApplication().removeComponentOnAfterRenderListener(listener);
		}
	}

