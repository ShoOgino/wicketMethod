	/**
	 * 
	 * @see org.apache.wicket.MarkupContainer#onComponentTagBody(org.apache.wicket.markup.MarkupStream,
	 *      org.apache.wicket.markup.ComponentTag)
	 */
	@Override
	protected void onComponentTagBody(final MarkupStream markupStream, ComponentTag enclosureOpenTag)
	{
		// init changes map
		changes = new HashMap<Component, Boolean>();

		// enclosure's parent container
		final MarkupContainer container = getEnclosureParent();

		// iterate over all child tags and make sure all components are present, resolving them if
		// necessary
		ensureAllChildrenPresent(container, markupStream, enclosureOpenTag);

		Component controller = container.get(childId.toString());
		checkChildComponent(controller);

		// set the enclosure visibility
		setVisible(controller.determineVisibility());

		// transfer visibility to direct children
		applyEnclosureVisibilityToChildren(container, markupStream, enclosureOpenTag);

		// render components inside the enclosure if its visible or skip it if it is not
		if (isVisible() == true)
		{
			super.onComponentTagBody(markupStream, enclosureOpenTag);
		}
		else
		{
			markupStream.skipToMatchingCloseTag(enclosureOpenTag);
		}
	}

