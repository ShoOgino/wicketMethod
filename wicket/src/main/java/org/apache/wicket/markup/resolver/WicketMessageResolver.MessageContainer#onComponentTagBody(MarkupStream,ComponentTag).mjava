		/**
		 * 
		 * @see org.apache.wicket.MarkupContainer#onComponentTagBody(org.apache.wicket.markup.MarkupStream,
		 *      org.apache.wicket.markup.ComponentTag)
		 */
		@Override
		protected void onComponentTagBody(final MarkupStream markupStream,
			final ComponentTag openTag)
		{
			// Get the value from the properties file
			final String key = getDefaultModelObjectAsString();
			final String value = getLocalizer().getString(key, getParent(), DEFAULT_VALUE);

			// if found, than render it after replacing the variables
			if ((value != null) && !DEFAULT_VALUE.equals(value))
			{
				renderMessage(markupStream, openTag, key, value);
			}
			else
			{
				if (isThrowExceptionIfPropertyNotFound() == true)
				{
					throw new WicketRuntimeException("Property '" + key +
						"' not found in property files. Markup: " + markupStream.toString());
				}

				log.warn("No value found for wicket:message tag with key: {}", key);

				String formatedNotFound = String.format(NOT_FOUND, key);
				// If open tag was open-close
				if (markupStream.hasMore() == false)
				{
					getResponse().write(formatedNotFound);
				}
// else if (markupStream.get() instanceof RawMarkup)
// {
// String text = markupStream.get().toString().trim();
// if (Strings.isEmpty(text))
// {
// getResponse().write(formatedNotFound);
// }
// }
				super.onComponentTagBody(markupStream, openTag);
			}
		}

