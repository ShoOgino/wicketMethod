	/**
	 * @see org.apache.wicket.application.IClassResolver#resolveClass(java.lang.String)
	 */
	public final Class<?> resolveClass(final String classname) throws ClassNotFoundException
	{
		Class<?> clazz = null;
		WeakReference<Class<?>> ref = classes.get(classname);

		// Might be garbage-collected between getting the WeakRef and retrieving
		// the Class from it.
		if (ref != null)
		{
			clazz = ref.get();
		}
		if (clazz == null)
		{
			if (classname.equals("byte"))
			{
				clazz = byte.class;
			}
			else if (classname.equals("short"))
			{
				clazz = short.class;
			}
			else if (classname.equals("int"))
			{
				clazz = int.class;
			}
			else if (classname.equals("long"))
			{
				clazz = long.class;
			}
			else if (classname.equals("float"))
			{
				clazz = float.class;
			}
			else if (classname.equals("double"))
			{
				clazz = double.class;
			}
			else if (classname.equals("boolean"))
			{
				clazz = boolean.class;
			}
			else if (classname.equals("char"))
			{
				clazz = char.class;
			}
			else
			{
				synchronized (classes)
				{
					ClassLoader loader = Thread.currentThread().getContextClassLoader();
					if (loader == null)
					{
						loader = DefaultClassResolver.class.getClassLoader();
					}
					// see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6500212
					// clazz = loader.loadClass(classname);
					clazz = Class.forName(classname, false, loader);
					if (clazz == null)
					{
						throw new ClassNotFoundException(classname);
					}
				}
				classes.put(classname, new WeakReference<Class<?>>(clazz));
			}
		}
		return clazz;
	}

