	/**
	 * Returns a URL that references a shared resource through the provided resource reference.
	 * 
	 * @param resourceReference
	 *            The resource reference where a url must be generated for.
	 * @param parameters
	 *            The parameters to pass to the resource.
	 * @return The url for the shared resource
	 */
	public final CharSequence urlFor(final ResourceReference resourceReference, ValueMap parameters)
	{
		RequestParameters requestParameters = new RequestParameters();
		requestParameters.setResourceKey(resourceReference.getSharedResourceKey());
		if (getApplication().getResourceSettings().getAddLastModifiedTimeToResourceReferenceUrl() &&
			!Strings.isEmpty(resourceReference.getName()))
		{
			Time time = resourceReference.lastModifiedTime();
			if (time != null)
			{
				if (parameters == null)
				{
					parameters = new ValueMap();
					parameters.put("wicket:lm", new Long(time.getMilliseconds()));
				}
			}
		}

		requestParameters.setParameters(parameters);
		return encodeUrlFor(new SharedResourceRequestTarget(requestParameters));
	}

