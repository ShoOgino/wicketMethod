	/**
	 * 
	 * @see org.apache.wicket.resource.loader.ComponentStringResourceLoader#loadStringResource(java.lang.Class,
	 *      java.lang.String, java.util.Locale, java.lang.String, java.lang.String)
	 */
	@Override
	public String loadStringResource(Class<?> clazz, final String key, final Locale locale,
		final String style, final String variation)
	{
		if (clazz == null)
		{
			return null;
		}

		// Load the properties associated with the path
		IPropertiesFactory propertiesFactory = Application.get()
			.getResourceSettings()
			.getPropertiesFactory();

		while (true)
		{
			String packageName = clazz.getPackage().getName();
			packageName = packageName.replace('.', '/');

			while (packageName.length() > 0)
			{
				// Create the base path
				String path = packageName + "/" + filename;

				// Iterator over all the combinations
				ResourceNameIterator iter = new ResourceNameIterator(path, style, variation,
					locale, null);
				while (iter.hasNext())
				{
					String newPath = iter.next();

					final Properties props = propertiesFactory.load(clazz, newPath);
					if (props != null)
					{
						// Lookup the value
						String value = props.getString(key);
						if (value != null)
						{
							if (log.isDebugEnabled())
							{
								log.debug("Found resource from: " + props + "; key: " + key);
							}

							return value;
						}
					}
				}

				// Didn't find the key yet, continue searching if possible
				packageName = Strings.beforeLast(packageName, '/');
			}

			clazz = clazz.getSuperclass();
			if (clazz == null)
			{
				break;
			}
		}
		// not found
		return null;
	}

