	/**
	 * Pre-calculates the amount of space needed to base64-encode the supplied array.
	 * 
	 * @param pArray
	 *            byte[] array which will later be encoded
	 * @param chunkSize
	 *            line-length of the output (<= 0 means no chunking) between each chunkSeparator
	 *            (e.g. CRLF).
	 * @param chunkSeparator
	 *            the sequence of bytes used to separate chunks of output (e.g. CRLF).
	 * 
	 * @return amount of space needed to encoded the supplied array. Returns a long since a max-len
	 *         array will require Integer.MAX_VALUE + 33%.
	 */
	private static long getEncodeLength(byte[] pArray, int chunkSize, byte[] chunkSeparator)
	{
		// base64 always encodes to multiples of 4.
		chunkSize = (chunkSize / 4) * 4;

		long len = (pArray.length * 4) / 3;
		long mod = len % 4;
		if (mod != 0)
		{
			len += 4 - mod;
		}
		if (chunkSize > 0)
		{
			boolean lenChunksPerfectly = len % chunkSize == 0;
			len += (len / chunkSize) * chunkSeparator.length;
			if (!lenChunksPerfectly)
			{
				len += chunkSeparator.length;
			}
		}
		return len;
	}

