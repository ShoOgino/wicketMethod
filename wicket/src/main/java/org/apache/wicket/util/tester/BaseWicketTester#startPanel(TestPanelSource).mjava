	/**
	 * Renders a <code>Panel</code> defined in <code>TestPanelSource</code>. The usage is similar to
	 * {@link #startPage(ITestPageSource)}. Please note that testing <code>Panel</code> must use the
	 * supplied <code>panelId<code> as a <code>Component</code> id.
	 * 
	 * <pre>
	 * tester.startPanel(new TestPanelSource()
	 * {
	 * 	public Panel getTestPanel(String panelId)
	 * 	{
	 * 		MyData mockMyData = new MyData();
	 * 		return new MyPanel(panelId, mockMyData);
	 * 	}
	 * });
	 * </pre>
	 * 
	 * Note that when try to access a component, e.g. via accessLabel(), the 'path' parameter must
	 * be relative to the panel. Not relative to the Page which will automatically be added for you.
	 * 
	 * @param testPanelSource
	 *            a <code>Panel</code> factory that creates test <code>Panel</code> instances
	 * @return a rendered <code>Panel</code>
	 */
	public final Panel startPanel(final TestPanelSource testPanelSource)
	{
		Panel panel = (Panel)startPage(new ITestPageSource()
		{
			private static final long serialVersionUID = 1L;

			public Page getTestPage()
			{
				return new DummyPanelPage(testPanelSource);
			}
		}).get(DummyPanelPage.TEST_PANEL_ID);
		startComponent = panel;
		return panel;
	}

