	/**
	 * 
	 * @param forcedRequest
	 * @param forcedRequestHandler
	 * @param redirect
	 * @return
	 */
	private boolean processRequest(MockHttpServletRequest forcedRequest,
		IRequestHandler forcedRequestHandler, boolean redirect)
	{
		if (forcedRequest != null)
		{
			request = forcedRequest;
		}

		forcedHandler = forcedRequestHandler;

		if (!redirect && getRequest().getHeader("Wicket-Ajax") == null)
		{
			lastRenderedPage = null;
		}

		try
		{
			if (!redirect)
			{
				/*
				 * we do not reset the session during redirect processing because we want to
				 * preserve the state before the redirect, eg any error messages reported
				 */
				session.cleanupFeedbackMessages();
			}

			if (getLastResponse() != null)
			{
				// transfer cookies from previous response to this request, quirky but how old stuff
				// worked...
				for (Cookie cookie : getLastResponse().getCookies())
				{
					request.addCookie(cookie);
				}
			}

			applyRequest();
			requestCycle.scheduleRequestHandlerAfterCurrent(null);

			// In production you want RequestCycle to manage any exceptions and react depending on
			// your needs. In WicketTester you usually want the exception to fall through for the
			// junit test to fail.
			boolean requestProcessed;
			if (exposeExceptions == true)
			{
				requestProcessed = requestCycle.processRequestAndDetachWithoutExceptionHandling();
			}
			else
			{
				requestProcessed = requestCycle.processRequestAndDetach();
			}

			// In case the request could not be processed, ...
			if (requestProcessed == false)
			{
				return false;
			}

			recordRequestResponse();
			setupNextRequestCycle();

			if (followRedirects && lastResponse.isRedirect())
			{
				if (redirectCount++ >= 100)
				{
					throw new IllegalStateException(
						"Possible infinite redirect detected. Bailing out.");
				}

				Url newUrl = Url.parse(lastResponse.getRedirectLocation(),
					Charset.forName(request.getCharacterEncoding()));

				if (newUrl.isAbsolute())
				{
					throw new WicketRuntimeException("Can not follow absolute redirect URL.");
				}

				// append redirect URL to current URL (what browser would do)
				Url mergedURL = new Url(lastRequest.getUrl().getSegments(),
					newUrl.getQueryParameters());
				mergedURL.concatSegments(newUrl.getSegments());

				request.setUrl(mergedURL);
				processRequest(null, null, true);

				--redirectCount;
			}

			return true;
		}
		finally
		{
			redirectCount = 0;
		}
	}

