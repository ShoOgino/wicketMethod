	/**
	 * Inserts the string representation of a subarray of the <code>str</code> array argument into
	 * this string buffer. The subarray begins at the specified <code>offset</code> and extends
	 * <code>len</code> characters. The characters of the subarray are inserted into this string
	 * buffer at the position indicated by <code>index</code>. The length of this
	 * <code>AppendingStringBuffer</code> increases by <code>len</code> characters.
	 * 
	 * @param index
	 *            position at which to insert subarray.
	 * @param str
	 *            A character array.
	 * @param offset
	 *            the index of the first character in subarray to to be inserted.
	 * @param len
	 *            the number of characters in the subarray to to be inserted.
	 * @return This string buffer.
	 * @exception StringIndexOutOfBoundsException
	 *                if <code>index</code> is negative or greater than <code>length()</code>, or
	 *                <code>offset</code> or <code>len</code> are negative, or
	 *                <code>(offset+len)</code> is greater than <code>str.length</code>.
	 * @since 1.2
	 */
	public AppendingStringBuffer insert(int index, char str[], int offset, int len)
	{
		if ((index < 0) || (index > count))
		{
			throw new StringIndexOutOfBoundsException();
		}
		if ((offset < 0) || (offset + len < 0) || (offset + len > str.length))
		{
			throw new StringIndexOutOfBoundsException(offset);
		}
		if (len < 0)
		{
			throw new StringIndexOutOfBoundsException(len);
		}
		int newCount = count + len;
		if (newCount > value.length)
		{
			expandCapacity(newCount);
		}
		System.arraycopy(value, index, value, index + len, count - index);
		System.arraycopy(str, offset, value, index, len);
		count = newCount;
		return this;
	}

