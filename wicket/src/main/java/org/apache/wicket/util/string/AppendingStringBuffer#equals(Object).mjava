	/**
	 * Compares this AppendingStringBuffer to the specified object. The result is <code>true</code>
	 * if and only if the argument is not <code>null</code> and is a
	 * <code>AppendingStringBuffer</code> object or another charsequence object! that represents the
	 * same sequence of characters as this object.
	 * 
	 * @param anObject
	 *            the object to compare this <code>AppendingStringBuffer</code> against.
	 * @return <code>true</code> if the <code>AppendingStringBuffer</code>are equal;
	 *         <code>false</code> otherwise.
	 */
	@Override
	public boolean equals(Object anObject)
	{
		if (this == anObject)
		{
			return true;
		}
		if (anObject instanceof AppendingStringBuffer)
		{
			AppendingStringBuffer anotherString = (AppendingStringBuffer)anObject;
			int n = count;
			if (n == anotherString.count)
			{
				char v1[] = value;
				char v2[] = anotherString.value;
				int i = 0;
				while (n-- != 0)
				{
					if (v1[i] != v2[i++])
					{
						return false;
					}
				}
				return true;
			}
		}
		else if (anObject instanceof CharSequence)
		{
			CharSequence sequence = (CharSequence)anObject;
			int n = count;
			if (sequence.length() == count)
			{
				char v1[] = value;
				int i = 0;
				while (n-- != 0)
				{
					if (v1[i] != sequence.charAt(i++))
					{
						return false;
					}
				}
				return true;
			}
		}
		return false;
	}

