	/**
	 * Extract the locale from the filename in case where the user
	 * 
	 * @param path
	 *            The file path
	 * @return The updated path, without the locale
	 * @TODO That should really be external to RNI in a helper kind of class
	 */
	protected String getLocaleFromFilename(String path)
	{
		final String filename = Strings.lastPathComponent(path, '/');
		Matcher matcher = LOCALE_PATTERN.matcher(filename);
		if (matcher.find())
		{
			String language = matcher.group(1);
			String country = matcher.group(3);
			String variant = matcher.group(5);

			// did we find a language?
			if (language != null)
			{
				if (isoLanguages.contains(language) == false)
				{
					language = null;
					country = null;
					variant = null;
				}
			}

			// did we find a country?
			if ((language != null) && (country != null))
			{
				if (isoCountries.contains(country) == false)
				{
					country = null;
					variant = null;
				}
			}

			if (language != null)
			{
				path = path.substring(0, path.length() - filename.length() + matcher.start());
				localeIterator = new LocaleResourceNameIterator(path, new Locale(language,
					country != null ? country : "", variant != null ? variant : ""), strict);
			}
		} // else skip the whole thing... probably user specific underscores used

		return path;
	}

