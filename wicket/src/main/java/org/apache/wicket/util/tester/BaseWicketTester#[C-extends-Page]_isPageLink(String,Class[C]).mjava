	/**
	 * assert <code>PageLink</code> link to page class.
	 * 
	 * @param <C>
	 * 
	 * @param path
	 *            path to <code>PageLink</code> component
	 * @param expectedPageClass
	 *            expected page class to link
	 * @return a <code>Result</code>
	 */
	public <C extends Page> Result isPageLink(String path, Class<C> expectedPageClass)
	{
		PageLink<?> pageLink = (PageLink<?>)getComponentFromLastRenderedPage(path);
		try
		{
			for (Class<?> type = pageLink.getClass(); type != PageLink.class.getSuperclass(); type = type.getSuperclass())
			{
				try
				{
					Field iPageLinkField = type.getDeclaredField("pageLink");
					iPageLinkField.setAccessible(true);
					IPageLink iPageLink = (IPageLink)iPageLinkField.get(pageLink);
					return isEqual(expectedPageClass, iPageLink.getPageIdentity());
				}

				catch (NoSuchFieldException e)
				{
					continue;
				}
			}
			throw new WicketRuntimeException(
				"Is this realy a PageLink? Cannot find 'pageLink' field");
		}
		catch (SecurityException e)
		{
			throw convertoUnexpect(e);
		}
		catch (IllegalAccessException e)
		{
			throw convertoUnexpect(e);
		}
	}

