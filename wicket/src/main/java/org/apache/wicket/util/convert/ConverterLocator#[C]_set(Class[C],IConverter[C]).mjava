	/**
	 * Registers a converter for use with class c.
	 * 
	 * @param <C>
	 *            The type of the converter
	 * 
	 * @param converter
	 *            The converter to add
	 * @param c
	 *            The class for which the converter should be used
	 * @return The previous registered converter for class c or null if none was registered yet for
	 *         class c
	 */
	@SuppressWarnings("unchecked")
	public final <C> IConverter<C> set(final Class<C> c, final IConverter<C> converter)
	{
		if (converter == null)
		{
			throw new IllegalArgumentException("CoverterLocator cannot be null");
		}
		if (c == null)
		{
			throw new IllegalArgumentException("Class cannot be null");
		}
		return (IConverter<C>)classToConverter.put(c.getName(), converter);
	}

