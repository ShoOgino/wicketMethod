	/**
	 * 
	 * @return WebRequestCycle
	 */
// protected WebRequestCycle resolveRequestCycle()
// {
// // initialize the request only if needed to allow the user to pass
// // request parameters, see WICKET-254
// WebRequestCycle requestCycle;
// if (RequestCycle.get() == null)
// {
// requestCycle = setupRequestAndResponse();
// }
// else
// {
// requestCycle = (WebRequestCycle)RequestCycle.get();
//
// // If a ajax request is requested but the existing is not, than we still need to create
// // a new one
// if ((requestCycle.getWebRequest().isAjax() == false) && (isCreateAjaxRequest() == true))
// {
// setParametersForNextRequest(requestCycle.getWebRequest().getParameterMap());
// requestCycle = setupRequestAndResponse();
// }
// }
// return requestCycle;
// }
	/**
	 * Retrieves a <code>TagTester</code> based on a <code>wicket:id</code>. If more
	 * <code>Component</code>s exist with the same <code>wicket:id</code> in the markup, only the
	 * first one is returned.
	 * 
	 * @param wicketId
	 *            the <code>wicket:id</code> to search for
	 * @return the <code>TagTester</code> for the tag which has the given <code>wicket:id</code>
	 */
	public TagTester getTagByWicketId(String wicketId)
	{
		return TagTester.createTagByAttribute(getLastResponse().getTextResponse().toString(),
			"wicket:id", wicketId);
	}

