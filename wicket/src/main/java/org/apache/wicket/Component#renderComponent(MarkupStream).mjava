	/**
	 * THIS METHOD IS NOT PART OF THE WICKET PUBLIC API. DO NOT USE IT.
	 * <p>
	 * Renders the component at the current position in the given markup stream. The method
	 * onComponentTag() is called to allow the component to mutate the start tag. The method
	 * onComponentTagBody() is then called to permit the component to render its body.
	 * 
	 * @param markupStream
	 *            The markup stream
	 */
	public final void renderComponent(final MarkupStream markupStream)
	{
		if (markupStream == null)
		{
			throw new NullPointerException(
				"Parameter 'markupStream' must not be null. Component: " + toString());
		}

		markupIndex = markupStream.getCurrentIndex();

		// Get mutable copy of next tag
		final ComponentTag openTag = markupStream.getTag();
		final ComponentTag tag = openTag.mutable();

		// Call any tag handler
		onComponentTag(tag);

		// If we're an openclose tag
		if (!tag.isOpenClose() && !tag.isOpen())
		{
			// We were something other than <tag> or <tag/>
			markupStream.throwMarkupException("Method renderComponent called on bad markup element: " +
				tag);
		}

		if (tag.isOpenClose() && openTag.isOpen())
		{
			markupStream.throwMarkupException("You can not modify a open tag to open-close: " + tag);
		}

		try
		{
			// Render open tag
			if (getRenderBodyOnly() == false)
			{
				renderComponentTag(tag);
			}
			markupStream.next();

			// Render the body only if open-body-close. Do not render if
			// open-close.
			if (tag.isOpen())
			{
				// Render the body
				onComponentTagBody(markupStream, tag);
			}

			// Render close tag
			if (tag.isOpen())
			{
				if (openTag.isOpen())
				{
					renderClosingComponentTag(markupStream, tag, getRenderBodyOnly());
				}
				else
				{
					// If a open-close tag has been modified to be
					// open-body-close than a synthetic close tag must be
					// rendered.
					if (getRenderBodyOnly() == false)
					{
						final boolean ajaxRequest = getRequest() instanceof WebRequest &&
							((WebRequest)getRequest()).isAjax();

						final boolean stripWicketTags = ajaxRequest ||
							Application.get().getMarkupSettings().getStripWicketTags();

						if (!(openTag instanceof WicketTag) || !stripWicketTags)
						{
							// Close the manually opened tag. And since the
							// user might have changed the tag name ...
							getResponse().write(tag.syntheticCloseTagString());
						}
					}
				}
			}
		}
		catch (RuntimeException re)
		{
			if (re instanceof WicketRuntimeException || re instanceof AbortException)
			{
				throw re;
			}
			throw new WicketRuntimeException("Exception in rendering component: " + this, re);
		}
	}

