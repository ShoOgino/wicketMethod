	/**
	 * Responds by sending the contents of the resource stream.
	 * 
	 * @see org.apache.wicket.IRequestHandler#respond(org.apache.wicket.RequestCycle)
	 */
	public void respond(RequestCycle requestCycle)
	{
		// Get servlet response to use when responding with resource
		final WebResponse response = (WebResponse)requestCycle.getResponse();

		configure(requestCycle, response, resourceStream);

		try
		{
			if (resourceStream instanceof IResourceStreamWriter)
			{
				((IResourceStreamWriter)resourceStream).write(response);
			}
			else
			{
				OutputStream s = new OutputStream()
				{
					@Override
					public void write(int b) throws IOException
					{
						response.write(new byte[] { (byte)b });
					}

					@Override
					public void write(byte[] b) throws IOException
					{
						response.write(b);
					}

				};
				try
				{
					Streams.copy(resourceStream.getInputStream(), s);
				}
				catch (IOException e)
				{
					throw new WicketRuntimeException(e);
				}
			}
		}
		catch (ResourceStreamNotFoundException e)
		{
			requestCycle.scheduleRequestHandlerAfterCurrent(new WebErrorCodeResponseHandler(
				HttpServletResponse.SC_NOT_FOUND));
		}
	}

