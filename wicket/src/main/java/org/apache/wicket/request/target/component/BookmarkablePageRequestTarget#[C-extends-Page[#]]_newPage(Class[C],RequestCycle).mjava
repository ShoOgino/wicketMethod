	/**
	 * Constructs a new instance of a page given its class name
	 * 
	 * @param <C>
	 *            type of page
	 * 
	 * @param pageClass
	 *            class name of the page to be created
	 * @param requestCycle
	 *            request cycle
	 * @return new instance of page
	 */
	protected <C extends Page<?>> Page<?> newPage(final Class<C> pageClass,
		final RequestCycle requestCycle)
	{
		// Construct a new instance using the default page factory
		IPageFactory pageFactory = requestCycle.getApplication()
			.getSessionSettings()
			.getPageFactory();

		if (pageParameters == null || pageParameters.size() == 0)
		{
			return pageFactory.newPage(pageClass);
		}
		else
		{
			// Add bookmarkable params in for WICKET-400.
			final Map<String, String[]> requestMap = requestCycle.getRequest().getParameterMap();
			for (Entry<String, Object> entry : pageParameters.entrySet())
			{
				final Object value = entry.getValue();
				if (value.getClass().isArray())
				{
					final Object[] objects = (Object[])value;
					final String[] strings = new String[objects.length];
					for (int i = 0; i < objects.length; i++)
					{
						strings[i] = objects[i].toString();
					}
					requestMap.put(entry.getKey(), strings);
				}
				else
				{
					requestMap.put(entry.getKey(), new String[] { value.toString() });
				}
			}
			return pageFactory.newPage(pageClass, pageParameters);
		}
	}

