	/**
	 * Configures the response, default by setting the content type and length and content
	 * disposition (in case the fileName property was set).
	 * 
	 * @param requestCycle
	 * @param response
	 *            the response
	 * @param resourceStream
	 *            the resource stream that will be rendered
	 */
	protected void configure(final RequestCycle requestCycle, final WebResponse response,
		final IResourceStream resourceStream)
	{
		// TODO (NG) mime type

// // Configure response with content type of resource, if available
// String responseType = resourceStream.getContentType();
// if (responseType != null)
// {
// if (responseType.toLowerCase().indexOf("text") != -1)
// {
// response.setContentType(responseType + "; charset=" +
// response.getCharacterEncoding());
// }
// else
// {
// response.setContentType(responseType);
// }
//
// }
// else
// {
// // otherwise detect content-type automatically
// if (getFileName() != null)
// {
// response.detectContentType(requestCycle, getFileName());
// }
// else
// {
// response.detectContentType(requestCycle, requestCycle.getRequest()
// .getUrl()
// .toString());
// }
// }

		// WICKET-473 Allow IResourceStream.length() to return -1
		long len = resourceStream.length();
		if (len >= 0)
		{
			// and the content length
			response.setContentLength(len);
		}

		// and content disposition if any
		String file = getFileName();
		if (file != null && (response instanceof WebResponse))
		{
			(response).setAttachmentHeader(file);
		}
	}

