	/**
	 * @see org.apache.org.apache.wicket.request.IRequestHandler#respond(org.apache.wicket.request.cycle.RequestCycle)
	 */
	public void respond(final IRequestCycle requestCycle)
	{
		final IRequestablePage page = getPage();
		if (getComponent().getPage() == page)
		{
			boolean isAjax = ((WebRequest)requestCycle.getRequest()).isAjax();
			if (isAjax == false && listenerInterface.isRenderPageAfterInvocation())
			{
				// schedule page render after current request handler is done. this can be
				// overridden
				// during invocation of listener
				// method (i.e. by calling RequestCycle#setResponsePage)
				RedirectPolicy policy = getPage().isPageStateless() ? RedirectPolicy.NEVER_REDIRECT
					: RedirectPolicy.AUTO_REDIRECT;
				requestCycle.scheduleRequestHandlerAfterCurrent(new RenderPageRequestHandler(
					new PageProvider(getPage()), policy));
			}

			/*
			 * FIXME WICKET-NG the handling of page id freezing should be generalized to
			 * RequestListenerInterface, but we may have to refactor it to pass in the request cycle
			 * into the invoke method so we can access the request and figure out if it is ajax or
			 * not.
			 */
			if (isAjax & page instanceof IManageablePage)
			{
				((IManageablePage)page).setFreezePageId(true);
			}

			try
			{
				invokeListener();
			}
			finally
			{
				if (isAjax && page instanceof IManageablePage)
				{
					((IManageablePage)page).setFreezePageId(false);
				}

			}
		}
		else
		{
			throw new WicketRuntimeException("Component " + getComponent() +
				" has been removed from page.");
		}
	}

