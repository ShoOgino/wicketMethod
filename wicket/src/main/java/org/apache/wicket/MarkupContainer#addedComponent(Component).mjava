	/**
	 * @param child
	 *            Component being added
	 */
	private final void addedComponent(final Component child)
	{
		// Check for degenerate case
		if (child == this)
		{
			throw new IllegalArgumentException("Component can't be added to itself");
		}

		MarkupContainer parent = child.getParent();
		if (parent != null)
		{
			parent.remove(child);
		}

		// Set child's parent
		child.setParent(this);

		final Page page = findPage();

		final IDebugSettings debugSettings = Application.get().getDebugSettings();
		if (debugSettings.isLinePreciseReportingOnAddComponentEnabled())
		{
			child.setMetaData(ADDED_AT_KEY, ComponentStrings.toString(child, new MarkupException(
				"added")));
		}

		if (page != null)
		{
			child.onConnectedToPage();

			// Tell all children of "component" as well
			if (child instanceof MarkupContainer)
			{
				MarkupContainer container = (MarkupContainer)child;
				container.visitChildren(new IVisitor<Component, Void>()
				{
					public void component(final Component component, final IVisit<Void> visit)
					{
						component.onConnectedToPage();
					}
				});
			}

			// Tell the page a component has been added
			page.componentAdded(child);
		}

		// if the PREPARED_FOR_RENDER flag is set, we have already called
		// beforeRender on this component's children. So we need to initialize the newly added one
		if (isPreparedForRender())
		{
			child.beforeRender();
		}
	}

