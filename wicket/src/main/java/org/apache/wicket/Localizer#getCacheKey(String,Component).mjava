	/**
	 * Gets the cache key
	 * 
	 * @param key
	 * @param component
	 * @return The value of the key
	 */
	protected String getCacheKey(final String key, final Component component)
	{
		String cacheKey = key;
		if (component != null)
		{
			AppendingStringBuffer buffer = new AppendingStringBuffer(200);
			buffer.append(key);

			Component cursor = component;
			while (cursor != null)
			{
				buffer.append("-").append(metaDatabase.id(cursor.getClass()));

				if (cursor instanceof Page)
				{
					break;
				}

				if (cursor.getParent() != null && !(cursor.getParent() instanceof AbstractRepeater))
				{
					/*
					 * only append component id if parent is not a repeater because
					 * 
					 * (a) these ids are irrelevant when generating resource cache keys
					 * 
					 * (b) they cause a lot of redundant keys to be generated
					 */
					buffer.append(":").append(cursor.getId());
				}
				cursor = cursor.getParent();

			}

			buffer.append("-").append(component.getLocale());
			buffer.append("-").append(component.getStyle());
			buffer.append("-").append(component.getVariation());
			cacheKey = buffer.toString();
		}
		else
		{
			cacheKey += "-" + Session.get().getLocale().toString();
		}

		return cacheKey;
	}

