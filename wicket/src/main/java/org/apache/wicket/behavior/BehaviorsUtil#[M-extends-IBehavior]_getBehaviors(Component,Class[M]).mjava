	/**
	 * Returns all behaviors attached to a component which implement a given type. A workaround
	 * until WICKET-2115 is resolved.
	 * 
	 * @param <M>
	 *            The type of behavior
	 * @param component
	 *            target componet
	 * @param type
	 *            type of behaviors to look for, <code>null</code> for all
	 * @return unmodifiable list of behaviors
	 */
	public static <M extends IBehavior> List<IBehavior> getBehaviors(Component component,
		Class<M> type)
	{
		List<? extends IBehavior> behaviors = component.getBehaviors();
		if (behaviors == null)
		{
			return Collections.emptyList();
		}

		List<IBehavior> subset = new ArrayList<IBehavior>(behaviors.size());
		for (IBehavior behavior : behaviors)
		{
			if (behavior != null)
			{
				if (type == null)
				{
					subset.add(behavior);
				}
				else if (type.isAssignableFrom(behavior.getClass()))
				{
					subset.add(type.cast(behavior));
				}
			}
		}
		return Collections.unmodifiableList(subset);
	}

