	/**
	 * Checks if the request is for home page and lacks trailing slash. If necessary redirects to
	 * URL with trailing slash.
	 * 
	 * @param request
	 * @param response
	 * @param filterPath
	 * @return <code>true</code> if there is a trailing slash, <code>false</code> if redirect was
	 *         necessary.
	 */
	private boolean checkForTrailingSlash(HttpServletRequest request, HttpServletResponse response,
		String filterPath)
	{
		// current URI
		String uri = Strings.stripJSessionId(request.getRequestURI());

		// home page without trailing slash URI
		String homePageUri = request.getContextPath() + "/" + filterPath;
		if (homePageUri.endsWith("/"))
		{
			homePageUri = homePageUri.substring(0, homePageUri.length() - 1);
		}

		if (uri.equals(homePageUri))
		{
			// construct redirect URL
			String redirect = uri + "/";
			if (!Strings.isEmpty(request.getQueryString()))
			{
				redirect += "?" + request.getQueryString();
			}
			try
			{
				// send redirect - this will discard POST parameters if the request is POST
				// - still better than getting an error because of lacking trailing slash
				response.sendRedirect(response.encodeRedirectURL(redirect));
			}
			catch (IOException e)
			{
				throw new RuntimeException(e);
			}
			return false;
		}

		return true;
	}

