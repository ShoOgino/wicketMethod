	/**
	 * @see org.apache.wicket.ng.request.IRequestHandler#respond(org.apache.wicket.ng.request.cycle.RequestCycle)
	 */
	public void respond(final RequestCycle requestCycle)
	{
		if (getComponent().getPage() == getPage())
		{
			// schedule page render after current request handler is done. this can be overridden
			// during invocation of listener
			// method (i.e. by calling RequestCycle#setResponsePage)
			RedirectPolicy policy = getPage().isPageStateless() ? RedirectPolicy.NEVER_REDIRECT
				: RedirectPolicy.AUTO_REDIRECT;
			requestCycle.scheduleRequestHandlerAfterCurrent(new RenderPageRequestHandler(
				new DefaultPageProvider(getPage()), policy));

			if (getBehaviorIndex() == null)
			{
				listenerInterface.invoke(getComponent());
			}
			else
			{
				try
				{
					IBehavior behavior = getComponent().getBehaviors().get(behaviorIndex);
					listenerInterface.invoke(getComponent(), behavior);
				}
				catch (IndexOutOfBoundsException e)
				{
					throw new WicketRuntimeException("Couldn't find component behavior.");
				}

			}
		}
		else
		{
			throw new WicketRuntimeException("Component " + getComponent() +
				" has been removed from page.");
		}
	}

