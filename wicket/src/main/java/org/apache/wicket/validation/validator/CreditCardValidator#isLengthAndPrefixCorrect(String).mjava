	/**
	 * Checks if the credit card number can be determined as a valid number.
	 * 
	 * @param creditCardNumber
	 *            the credit card number as a string
	 * @return <code>TRUE</code> if the credit card number could be determined as a valid number,
	 *         else <code>FALSE</code> is returned
	 */
	private boolean isLengthAndPrefixCorrect(String creditCardNumber)
	{
		if (creditCardNumber != null)
		{
			// strip spaces and dashes
			creditCardNumber = creditCardNumber.replaceAll("[ -]", "");
		}

		// the length of the credit card number has to be between 12 and 19.
		// else the number is invalid.
		if (creditCardNumber != null && creditCardNumber.length() >= 12 &&
			creditCardNumber.length() <= 19)
		{
			if (isAmericanExpress(creditCardNumber))
			{
				return true;
			}
			else if (isChinaUnionPay(creditCardNumber))
			{
				return true;
			}
			else if (isDinersClubCarteBlanche(creditCardNumber))
			{
				return true;
			}
			else if (isDinersClubInternational(creditCardNumber))
			{
				return true;
			}
			else if (isDinersClubUsAndCanada(creditCardNumber))
			{
				return true;
			}
			else if (isDiscoverCard(creditCardNumber))
			{
				return true;
			}
			else if (isJCB(creditCardNumber))
			{
				return true;
			}
			else if (isLaser(creditCardNumber))
			{
				return true;
			}
			else if (isMaestro(creditCardNumber))
			{
				return true;
			}
			else if (isMastercard(creditCardNumber))
			{
				return true;
			}
			else if (isSolo(creditCardNumber))
			{
				return true;
			}
			else if (isSwitch(creditCardNumber))
			{
				return true;
			}
			else if (isVisa(creditCardNumber))
			{
				return true;
			}
			else if (isVisaElectron(creditCardNumber))
			{
				return true;
			}
			else if (isUnknown(creditCardNumber))
			{
				return true;
			}
		}

		return false;
	}

