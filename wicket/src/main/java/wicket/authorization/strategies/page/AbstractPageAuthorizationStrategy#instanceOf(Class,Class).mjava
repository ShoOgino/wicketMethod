	/**
	 * Works like instanceof operator where instanceOf(a, b) is the runtime
	 * equivalent of (a instanceof b).
	 * 
	 * @param type
	 *            The type to check
	 * @param superType
	 *            The interface or superclass that the type needs to implement
	 *            or extend
	 * @return True if the type is an instance of the superType
	 */
	protected boolean instanceOf(final Class type, final Class superType)
	{
		return superType.isAssignableFrom(type);
	}

