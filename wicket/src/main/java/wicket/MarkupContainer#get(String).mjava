	/**
	 * Get a child component by looking it up with the given path.
	 * 
	 * @param path
	 *            Path to component
	 * @return The component at the path
	 */
	public final Component get(final String path)
	{
		// Reference to this container
		if (path == null || path.trim().equals(""))
		{
			return this;
		}

		// Get child's id, if any
		final String id = Strings.firstPathComponent(path, Component.PATH_SEPARATOR);

		// Get child by id
		Component child = children_get(id);

		// If the container is transparent, than ask its parent.
		// ParentResolver does something quite similar, but because of <head>,
		// <body>, <wicket:panel> etc. it is quite common to have transparent
		// components. Hence, this is little short cut for a tiny performance
		// optimization.
		if ((child == null) && isTransparentResolver() && (getParent() != null))
		{
			// Special tags like "_body", "_panel" must implement
			// IComponentResolver
			// if they want to be transparent.
			if (path.startsWith("_") == false)
			{
				child = getParent().get(path);
			}
		}

		// Found child?
		final String path2 = Strings.afterFirstPathComponent(path, Component.PATH_SEPARATOR);
		if (child != null)
		{
			// Recurse on latter part of path
			return child.get(path2);
		}

		return child;
	}

