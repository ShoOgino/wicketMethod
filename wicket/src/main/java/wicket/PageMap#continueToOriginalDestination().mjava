	/**
	 * Redirects to any intercept page previously specified by a call to
	 * redirectToInterceptPage.
	 * 
	 * @return True if an original destination was redirected to
	 * @see PageMap#redirectToInterceptPage(Page)
	 */
	final boolean continueToOriginalDestination()
	{
		// Get request cycle
		final RequestCycle cycle = RequestCycle.get();

		// If there's a place to go to
		if (interceptContinuationURL != null)
		{
			cycle.setRequestTarget(new IRequestTarget()
			{
				final String responseUrl = interceptContinuationURL;

				public void detach(RequestCycle requestCycle)
				{
				}

				public Object getLock(RequestCycle requestCycle)
				{
					return null;
				}

				public void respond(RequestCycle requestCycle)
				{
					// Redirect there
					cycle.getResponse().redirect(responseUrl);
				}

			});

			// Reset interception URL
			interceptContinuationURL = null;

			// Force session to replicate page maps
			session.dirtyPageMap(this);
			return true;
		}
		return false;
	}

