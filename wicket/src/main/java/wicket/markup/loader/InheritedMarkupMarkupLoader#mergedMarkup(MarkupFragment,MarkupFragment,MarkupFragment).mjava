	/**
	 * Merge the derived and the base markup
	 * 
	 * @param derivedMarkup
	 *            The derived markup
	 * @param baseMarkup
	 *            The base markup
	 * @param extendFragment
	 *            The <wicket:extend> markup fragment markup
	 * @return A new instance of Markup with the markups merged
	 */
	private MarkupFragment mergedMarkup(final MarkupFragment derivedMarkup,
			final MarkupFragment baseMarkup, final MarkupFragment extendFragment)
	{
		if (log.isDebugEnabled())
		{
			final String derivedResource = Strings.afterLast(derivedMarkup.getMarkup()
					.getResource().toString(), '/');
			final String baseResource = Strings.afterLast(baseMarkup.getMarkup().getResource()
					.toString(), '/');
			log.debug("Merge markup: derived markup: " + derivedResource + "; base markup: "
					+ baseResource);
		}

		// Merge derived and base markup
		MarkupFragment mergedMarkup = merge(derivedMarkup, baseMarkup, extendFragment);
		mergedMarkup = mergedMarkup.translateFlatIntoTreeStructure();
		mergedMarkup.makeImmutable();
		
		if (log.isDebugEnabled())
		{
			log.debug("Merged markup: " + mergedMarkup.toString());
		}

		return mergedMarkup;
	}

