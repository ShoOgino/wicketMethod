	/**
	 * @see wicket.markup.loader.IMarkupLoader#loadMarkup(wicket.MarkupContainer,
	 *      wicket.markup.MarkupResourceStream)
	 */
	public final MarkupFragment loadMarkup(final MarkupContainer container,
			final MarkupResourceStream markupResourceStream) throws IOException,
			ResourceStreamNotFoundException
	{
		// Invoke the parent markup loader to read and parse the markup
		final MarkupFragment markup = super.loadMarkup(container, markupResourceStream);

		// On Pages with <wicket:head> and automatically added head tag, it
		// can happen that <wicket:head> tags are not inside the <head> tag.
		// Change it by moviing <wicket:head> into the <head> tag

		final MarkupFragment header = MarkupFragmentUtils.getHeadTag(markup);
		if (header != null)
		{
			markup.visitChildren(MarkupFragment.class, new MarkupFragment.IVisitor()
			{
				public Object visit(final MarkupElement element, final MarkupFragment parent)
				{
					if (element == header)
					{
						return CONTINUE_TRAVERSAL_BUT_DONT_GO_DEEPER;
					}

					if (((MarkupFragment)element).getTag().isWicketHeadTag())
					{
						if (parent.removeMarkupElement(element) == true)
						{
							header.addMarkupElement(header.size() - 1, element);
						}
					}

					return CONTINUE_TRAVERSAL;
				}
			});
		}

		return markup;
	}

