	/**
	 * @see Component#onComponentTag(ComponentTag)
	 * @param tag
	 *            the abstraction representing html tag of this component
	 */
	@Override
	protected void onComponentTag(final ComponentTag tag)
	{
		// Default handling for component tag
		super.onComponentTag(tag);

		// must be attached to <input type="checkbox" .../> tag
		checkComponentTag(tag, "input");
		checkComponentTagAttribute(tag, "type", "checkbox");

		final CheckGroup<?> group = getGroup();
		final String value = getValue();

		// assign name and value
		tag.put("name", group.getInputName());
		tag.put("value", value);

		// check if the model collection of the group contains the model object.
		// if it does check the check box.
		Collection collection = group.getModelObject();

		// check for npe in group's model object
		if (collection == null)
		{
			throw new WicketRuntimeException(
					"CheckGroup ["
							+ group.getPath()
							+ "] contains a null model object, must be an object of type java.util.Collection");
		}

		boolean checked = false;

		if (group.hasRawInput())
		{
			String[] inputs = group.getInputAsArray();
			if (inputs != null)
			{
				for (String input : inputs)
				{
					if (value.equals(input))
					{
						checked = true;
						break;
					}
				}
			}
		}
		else if (collection.contains(getModelObject()))
		{
			checked = true;
		}

		if (checked)
		{
			tag.put("checked", "checked");
		}

		if (group.wantOnSelectionChangedNotifications())
		{
			// url that points to this components IOnChangeListener method
			final CharSequence url = group.urlFor(IOnChangeListener.INTERFACE);

			Form form = group.findParent(Form.class);
			if (form != null)
			{
				tag.put("onclick", form.getJsForInterfaceUrl(url));
			}
			else
			{
				// NOTE: do not encode the url as that would give invalid
				// JavaScript
				tag.put("onclick", "window.location.href='" + url + "&" + group.getInputName()
						+ "=' + this.value;");
			}
		}
		
		// disable html component if necessary
		if (!isActionAuthorized(ENABLE) || !isEnabled() || !group.isEnabled())
		{
			tag.put("disabled", "disabled");
		}

	}

