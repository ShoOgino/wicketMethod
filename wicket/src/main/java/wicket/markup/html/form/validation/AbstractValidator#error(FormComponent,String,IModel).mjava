	/**
	 * Returns a formatted validation error message for a given component. The
	 * error message is retrieved from a message bundle associated with the page
	 * in which this validator is contained using the given resource key. The
	 * resourceModel is used for variable interpolation. If that one is null
	 * the default one is created from messageModel(formComponent)
	 * 
	 * @param formComponent
	 *            form component
	 * @param resourceKey
	 *            The resource key to use
	 * @param resourceModel
	 *            The model for variable interpolation, it needs to have a map inside it.
	 */
	public void error(final FormComponent formComponent, final String resourceKey,
			IModel /* <Map>*/ resourceModel)
	{
		if(resourceModel == null)
		{
			resourceModel = Model.valueOf(messageModel(formComponent));
		}
		if (formComponent == null)
		{
			throw new IllegalArgumentException("formComponent cannot be null");
		}
		if (resourceKey == null)
		{
			throw new IllegalArgumentException("resourceKey cannot be null");
		}

		final List keys = new ArrayList(2);
		keys.add(resourceKey);

		final String defaultKey = Classes.simpleName(getClass());
		if (!keys.contains(defaultKey))
		{
			keys.add(defaultKey);
		}

		Map args = (Map)resourceModel.getObject(formComponent);

		formComponent.error(keys, args);
	}

