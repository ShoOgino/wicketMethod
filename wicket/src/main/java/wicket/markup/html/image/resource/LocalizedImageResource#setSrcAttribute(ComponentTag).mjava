	/**
	 * @param tag
	 *            The tag to inspect for an optional src attribute that might
	 *            reference an image.
	 * @throws WicketRuntimeException
	 *             Thrown if an image is required by the caller, but none can be
	 *             found.
	 */
	public final void setSrcAttribute(final ComponentTag tag)
	{
		// If locale has changed from the initial locale used to attach image
		// resource, then we need to reload the resource in the new locale
		if (resourceKind == null
				&& (!Objects.equal(locale, component.getLocale()) || !Objects.equal(style,
						component.getStyle())))
		{
			// Get new component locale and style
			this.locale = component.getLocale();
			this.style = component.getStyle();

			// Invalidate current resource so it will be reloaded/recomputed
			this.resourceReference = null;
			this.resource = null;
		}
		else
		{
			// TODO post 1.2: should we have support for locale changes when the
			// resource reference (or resource??) is set manually..
			// We should get a new resource reference for the current locale
			// then
			// that points to the same resource but with another locale if it
			// exists.
			// something like
			// SharedResource.getResourceReferenceForLocale(resourceReference);
		}
		
		// check if the model contains a resource, if so, load the resource from the model.
		Object modelObject = component.getModelObject();
		if ( modelObject instanceof ResourceReference ) {
			resourceReference = (ResourceReference) modelObject;
		} else if ( modelObject instanceof Resource ) {
			resource = (Resource) modelObject;
		}

		// Need to load image resource for this component?
		if (resource == null && resourceReference == null)
		{
			// Get SRC attribute of tag
			final CharSequence src = tag.getString("src");
			if (src != null)
			{
				// Try to load static image
				loadStaticImage(src.toString());
			}
			else
			{
				// Get VALUE attribute of tag
				final CharSequence value = tag.getString("value");
				if (value != null)
				{
					// Try to generate an image using an image factory
					newImage(value);
				}
				else
				{
					// Load static image using model object as the path
					loadStaticImage(component.getModelObjectAsString());
				}
			}
		}

		// Get URL for resource
		final CharSequence url;
		if (this.resourceReference != null)
		{
			// Create URL to shared resource
			url = RequestCycle.get().urlFor(resourceReference, resourceParameters);
		}
		else
		{
			// Create URL to component
			url = component.urlFor(IResourceListener.INTERFACE);
		}

		// Set the SRC attribute to point to the component or shared resource
		tag.put("src", Strings.replaceAll(RequestCycle.get().getOriginalResponse().encodeURL(url),
				"&", "&amp;"));
	}

