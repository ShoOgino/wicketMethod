	/**
	 * Constructor.
	 * 
	 * @see wicket.Component#Component(MarkupContainer,String)
	 * 
	 * @param id
	 *            The component id
	 * @param markupId
	 *            The associated id of the associated markup fragment
	 * @param markupProvider
	 *            The component whose markup contains the fragment's markup. See
	 *            javadoc on the class for more details.
	 * @param model
	 *            The model for this fragment
	 */
	public Fragment(final MarkupContainer parent, final String id, final String markupId,
			final MarkupContainer markupProvider, final IModel<T> model)
	{
		super(parent, id, model);

		if (markupId == null)
		{
			throw new IllegalArgumentException("Parameter 'markupId' cannot be null");
		}

		if ((markupProvider != null) && !(markupProvider instanceof Panel)
				&& !(markupProvider instanceof Page) && !(markupProvider instanceof Border))
		{
			throw new IllegalArgumentException(
					"Argument [[markupProvider]] must be an instance of one of the following types: "
							+ "Page, Panel, and Border. Currently it is of type [["
							+ markupProvider.getClass().getName() + "]]");
		}

		this.markupId = markupId;
		this.markupProvider = markupProvider;
		if (this.markupProvider == null)
		{
			this.markupProvider = this.findParentWithAssociatedMarkup();
		}
		
		this.fragment = getFragment();
	}

