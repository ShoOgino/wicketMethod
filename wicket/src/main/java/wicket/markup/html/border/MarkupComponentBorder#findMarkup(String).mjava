	/**
	 * 
	 * @param extension
	 * @return MarkupFragment
	 */
	@SuppressWarnings("unchecked")
	private MarkupFragment findMarkup(final String extension)
	{
		// Get locator to search for the resource
		final IResourceStreamFactory locator = Application.get().getResourceSettings()
				.getResourceStreamFactory();

		final Session session = Session.get();
		final String style = session.getStyle();
		final Locale locale = session.getLocale();

		MarkupResourceStream markupResourceStream = null;
		Class containerClass = getClass();

		while (containerClass != MarkupComponentBorder.class)
		{
			String path = containerClass.getName().replace('.', '/');
			IResourceStream resourceStream = locator.locate(containerClass, path, style, locale,
					extension);

			// Did we find it already?
			if (resourceStream != null)
			{
				ContainerInfo ci = new ContainerInfo(containerClass, locale, style, null,
						extension, null);
				markupResourceStream = new MarkupResourceStream(resourceStream, ci, containerClass);
			}

			// Walk up the class hierarchy one level, if markup has not
			// yet been found
			containerClass = containerClass.getSuperclass();
		}
		MarkupFragment markup;
		try
		{
			markup = Application.get().getMarkupSettings().getMarkupParserFactory()
					.newMarkupParser(markupResourceStream).readAndParse();
		}
		catch (Exception e)
		{
			throw new WicketRuntimeException(e);
		}

		return markup;
	}

