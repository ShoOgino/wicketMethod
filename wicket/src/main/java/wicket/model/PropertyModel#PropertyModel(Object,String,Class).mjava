	/**
	 * Construct with a wrapped (IModel) or unwrapped (non-IModel) object and a
	 * property expression that works on the given model. Additional formatting
	 * will be used depending on the configuration setting.
	 * 
	 * @param modelObject
	 *            The model object, which may or may not implement IModel
	 * @param expression
	 *            Property expression for property access
	 * @param propertyType
	 *            The type to be used for conversion instead of the type that is
	 *            figured out by the property expression code. This can be
	 *            especially useful for when you have a generic property (like
	 *            Serializable myProp) that you want to be converted to a
	 *            narrower type (e.g. an Integer). The property expression code
	 *            sees an incoming string being compatible with the target
	 *            property, and will then bypass the converter. Hence, to force
	 *            myProp being converted to and from an integer, propertyType
	 *            should be set to Integer.
	 */
	public PropertyModel(final Object modelObject, final String expression, Class propertyType)
	{
		super(modelObject);
		this.expression = expression;
		this.propertyType = propertyType;
	}

