	/**
	 * Gets the url that references this handler.
	 * 
	 * @param recordPageVersion
	 *            if true the url will be encoded to execute on the current page
	 *            version, otherwise url will be encoded to execute on the
	 *            latest page version
	 * @param onlyTargetActivePage
	 *            if true the callback to this behavior will be ignore if the
	 *            page is not the last one the user accessed
	 * 
	 * @return the url that references this handler
	 */
	public final CharSequence getCallbackUrl(final boolean recordPageVersion,
			final boolean onlyTargetActivePage)
	{
		if (getComponent() == null)
		{
			throw new IllegalArgumentException(
					"Behavior must be bound to a component to create the URL");
		}

		int index = getComponent().getBehaviors().indexOf(this);
		if (index == -1)
		{
			throw new IllegalArgumentException("Behavior " + this
					+ " was not registered with this component: " + getComponent().toString());
		}

		final RequestListenerInterface rli;
		if (recordPageVersion)
		{
			rli = IBehaviorListener.INTERFACE;
		}
		else
		{
			rli = IUnversionedBehaviorListener.INTERFACE;
		}

		// TODO Post 1.2: URL encoding strategies are not applied
		// And you can not simply call getResponse().encodeUrl() as the URL
		// might
		// already be encoded.
		AppendingStringBuffer url = new AppendingStringBuffer(getComponent().urlFor(rli)).append(
				'&').append(WebRequestCodingStrategy.BEHAVIOR_ID_PARAMETER_NAME).append('=')
				.append(index);

		if (onlyTargetActivePage)
		{
			url.append("&").append(WebRequestCodingStrategy.IGNORE_IF_NOT_ACTIVE_PARAMETER_NAME)
					.append("=true");
		}

		return url;
	}

