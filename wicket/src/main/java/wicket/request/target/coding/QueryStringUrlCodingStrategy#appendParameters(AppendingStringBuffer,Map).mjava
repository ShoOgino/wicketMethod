	/**
	 * Gets the encoded URL for the request target. Typically, the result will
	 * be prepended with a protocol specific prefix. In a servlet environment,
	 * the prefix concatenates the context path and the servlet path, for
	 * example "mywebapp/myservlet".
	 * 
	 * @param url
	 *            the relative reference URL
	 * @param parameters
	 *            parameter names mapped to parameter values
	 */
	@Override
	protected void appendParameters(AppendingStringBuffer url, Map parameters)
	{

		if (parameters != null && parameters.size() > 0)
		{
			boolean firstParam = url.indexOf("?") < 0;
			Iterator entries = parameters.entrySet().iterator();

			while (entries.hasNext())
			{
				Map.Entry entry = (Entry)entries.next();

				if (entry.getValue() != null)
				{

					String escapedValue = urlEncode(entry.getValue().toString());

					if (!Strings.isEmpty(escapedValue))
					{
						if (firstParam)
						{
							url.append("?"); /* Begin query string. */
							firstParam = false;
						}
						else
						{
							/*
							 * Separate new key=value(s) pair from previous pair
							 * with an ampersand.
							 */
							url.append("&");
						}

						/* Append key=value(s) pair. */
						url.append(entry.getKey());
						url.append("=");
						url.append(escapedValue);
					}
				}
			}
		}
	}

