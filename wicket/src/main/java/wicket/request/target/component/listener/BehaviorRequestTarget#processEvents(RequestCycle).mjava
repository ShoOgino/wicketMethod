	/**
	 * @see wicket.request.target.IEventProcessor#processEvents(wicket.RequestCycle)
	 */
	public final void processEvents(final RequestCycle requestCycle)
	{
		// Preprocess like standard component request. Do all the initialization
		// necessary
		onProcessEvents(requestCycle);

		// Get the IBehavior for the component based on the request parameters
		final Component component = getTarget();
		final String id = getRequestParameters().getBehaviorId();
		if (id == null)
		{
			throw new IllegalStateException(
					"Parameter behaviorId was not provided: unable to locate listener. Component: "
							+ component.toString());
		}

		final int idAsInt = Integer.parseInt(id);
		final IBehaviorListener behaviorListener = (IBehaviorListener)component.getBehaviors().get(
				idAsInt);
		if (behaviorListener == null)
		{
			throw new IllegalStateException("No behavior listener found with behaviorId " + id
					+ "; Component: " + component.toString());
		}

		// Invoke the interface method
		component.getPage().beforeCallComponent(component, IBehaviorListener.INTERFACE);
		try
		{
			behaviorListener.onRequest();
		}
		finally
		{
			component.getPage().afterCallComponent(component, IBehaviorListener.INTERFACE);
		}
	}

