	/**
	 * Retrieves id by which this component is represented within the markup.
	 * <p>
	 * If the id attribute is present in the markup attributes of this component
	 * it will be used, otherwise the page-relative path of this component will
	 * be used.
	 * 
	 * @return the Markup id
	 */
	public String getMarkupId()
	{
		String id = getMarkupAttributes().getString(MARKUP_ID_ATTR_NAME);
		if (id == null)
		{
			id = getPageRelativePath();
			// first escape _ with __
			id = id.replace("_", "__");
			// then replace : with _
			id = id.replace(':', '_');
			getMarkupAttributes().put(MARKUP_ID_ATTR_NAME, id);
		}
		return id;
	}

