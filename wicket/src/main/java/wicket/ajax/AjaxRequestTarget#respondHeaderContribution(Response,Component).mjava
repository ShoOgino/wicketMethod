	/**
	 * 
	 * @param response
	 * @param component
	 */
	private void respondHeaderContribution(final Response response, final Component component)
	{
		if (header == null)
		{
			header = new HtmlHeaderContainer(HtmlHeaderSectionHandler.HEADER_ID)
			{
				private static final long serialVersionUID = 1L;

				protected IHeaderResponse newHeaderResponse(Response response)
				{
					return new AjaxHeaderResponse(response);
				}
			};
		}

		if (component.getPage().get(HtmlHeaderSectionHandler.HEADER_ID) != null)
		{
			component.getPage().replace(header);
		}
		else
		{
			component.getPage().add(header);
		}

		Response oldResponse = RequestCycle.get().setResponse(encodingHeaderResponse);

		encodingHeaderResponse.reset();

		component.renderHead(header);

		if (component instanceof MarkupContainer)
		{
			((MarkupContainer)component).visitChildren(new Component.IVisitor()
			{
				public Object component(Component component)
				{
					if (component.isVisible())
					{
						component.renderHead(header);
						return CONTINUE_TRAVERSAL;
					}
					else
					{
						return CONTINUE_TRAVERSAL_BUT_DONT_GO_DEEPER;
					}
				}
			});
		}

		RequestCycle.get().setResponse(oldResponse);

		if (encodingHeaderResponse.getContents().length() != 0)
		{
			response.write("<header-contribution");

			if (encodingHeaderResponse.isContentsEncoded())
			{
				response.write(" encoding=\"");
				response.write(getEncodingName());
				response.write("\" ");
			}

			// we need to write response as CDATA and parse it on client,
			// because
			// konqueror crashes when there is a <script> element
			response.write("><![CDATA[<head xmlns:wicket=\"http://wicket.sourceforge.net\">");

			response.write(encodingHeaderResponse.getContents());

			response.write("</head>]]>");

			response.write("</header-contribution>");
		}
	}

