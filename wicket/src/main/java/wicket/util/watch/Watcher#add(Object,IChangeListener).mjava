	/**
	 * Adds a key and an IChangeListener to call when the key is triggered.
	 * <p>
	 * Note: the value is ignored if the key and an associated value already
	 * exists. Only the listeners is added (if an equals does not already
	 * exist).
	 * 
	 * @param key
	 *            The key to identifiy a ChangeListenerSet
	 * @param listener
	 *            The listener to call if the key gets triggered
	 * @return <tt>true</tt> if the set did not already contain the specified
	 *         element.
	 */
	public final boolean add(final Object key, final IChangeListener listener)
	{
		// Look up entry for modifiable
		final Entry entry = keyToEntry.get(key);

		// Found it?
		if (entry == null)
		{
			// Construct new entry
			final Entry newEntry = new Entry();
			if (listener != null)
			{
				newEntry.listeners.add(listener);
			}

			// Put in map
			keyToEntry.put(key, newEntry);

			return true;
		}
		else
		{
			// Add listener to existing entry
			if (listener != null)
			{
				return entry.listeners.add(listener);
			}
		}

		return false;
	}

