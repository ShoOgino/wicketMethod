	/**
	 * Checks if either of the two methods is an override of the other
	 * 
	 * @param a
	 *            method a
	 * @param b
	 *            method b
	 * @return true if a overrides b or b overrides a
	 */
	public static final boolean overrides(Method a, Method b)
	{
		if (a.getName().equals(b.getName()))
		{
			// have same names
			if (Arrays.equals(a.getParameterTypes(), b.getParameterTypes()))
			{
				// have same parameter types

				final int amods = a.getModifiers();
				final int bmods = b.getModifiers();

				if (Modifier.isPublic(amods) || Modifier.isProtected(amods))
				{
					if (Modifier.isPublic(bmods) || Modifier.isProtected(bmods))
					{
						// are public or protected - so must be overrides
						return true;
					}
				}

				final String apack = Packages.extractPackageName(a.getDeclaringClass());
				final String bpack = Packages.extractPackageName(b.getDeclaringClass());
				if (Objects.equal(apack, bpack))
				{
					// are in the same package
					if (!Modifier.isPrivate(amods) && !Modifier.isPrivate(bmods))
					{
						// both are not private and not public or protected - so
						// must be package private and are overrides
						return true;
					}
				}
			}
		}

		return false;
	}

