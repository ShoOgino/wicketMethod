	/**
	 * Makes a deep clone of an object by serializing and deserializing it. The
	 * object must be fully serializable to be cloned.
	 * 
	 * @param object
	 *            The object to clone
	 * @return A deep copy of the object
	 * @param <T>
	 *            The type
	 */
	@SuppressWarnings("unchecked")
	public static <T> T cloneObject(final T object)
	{
		if (object == null)
		{
			return null;
		}
		else
		{
			try
			{
				final ByteArrayOutputStream out = new ByteArrayOutputStream(256);
				ClassRecordingObjectOutputStream oos = new ClassRecordingObjectOutputStream(out);
				oos.writeObject(object);
				ClassRecordingObjectInputStream ois = new ClassRecordingObjectInputStream(
						new ByteArrayInputStream(out.toByteArray()), oos.getUsedClasses());
				return (T)ois.readObject();
			}
			catch (ClassNotFoundException e)
			{
				throw new WicketRuntimeException("Internal error cloning object", e);
			}
			catch (IOException e)
			{
				throw new WicketRuntimeException("Internal error cloning object", e);
			}
		}
	}

