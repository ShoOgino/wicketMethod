	/**
	 * Locate a resource. See class comments for more details.
	 * 
	 * @param clazz
	 *            The class requesting the resource
	 * @param path
	 *            The path of the resource without extension
	 * @param style
	 *            A theme or style (see {@link wicket.Session})
	 * @param locale
	 *            The Locale to apply
	 * @param extension
	 *            the filname's extensions
	 * 
	 * @return The Resource, or null if not found.
	 */
	public IResourceStream locate(final Class clazz, String path, final String style,
			final Locale locale, final String extension)
	{
		String[] extensions;
		if (extension == null)
		{
			extensions = new String[] { "." + Strings.lastPathComponent(path, '.') };
			path = Strings.beforeLastPathComponent(path, '.');
		}
		else
		{
			extensions = Strings.split(extension, ',');
			for (int i = extensions.length - 1; i >= 0; i--)
			{
				if (!extensions[i].startsWith("."))
				{
					extensions[i] = "." + extensions[i];
				}
			}
		}

		// 1. Try style, locale and extension
		if (style != null && locale != null)
		{
			for (String ext : extensions)
			{
				final IResourceStream resource = locate(clazz, path + '_' + style, locale, ext);
				if (resource != null)
				{
					return resource;
				}
			}
		}

		// 2. Try locale and extension
		if (locale != null)
		{
			for (String ext : extensions)
			{
				final IResourceStream resource = locate(clazz, path, locale, ext);
				if (resource != null)
				{
					return resource;
				}
			}
		}

		// 3. Try style and extension
		if (style != null)
		{
			for (String ext : extensions)
			{
				final IResourceStream resource = locate(clazz, path + '_' + style + ext);
				if (resource != null)
				{
					return resource;
				}
			}
		}

		for (String ext : extensions)
		{
			// 4. Try just extension
			final IResourceStream resource = locate(clazz, path + ext);
			if (resource != null)
			{
				return resource;
			}
		}

		return null;
	}

