	@Override
	public void renderHead(IHeaderResponse response)
	{
		if (contributeDependencies)
		{
			contributeDependencies(response);
		}


		// not pretty to look at, but cheaper than using a template
		String markupId = AbstractCalendar.this.getMarkupId();
		String javascriptId = getJavascriptId();
		String javascriptWidgetId = getJavascriptWidgetId();
	 StringBuilder b = new StringBuilder();
		b.append(JavascriptUtils.SCRIPT_OPEN_TAG);
		// initialize wicket namespace and register the init function
		// for the YUI widget
		b.append("YAHOO.namespace(\"wicket\");\nfunction init");
		b.append(javascriptId);
		b.append("() {\n");

		// instantiate the calendar object
		b.append("  ");
		b.append(javascriptWidgetId);
		b.append(" = new YAHOO.widget.Calendar(\"");
		b.append(javascriptId);
		b.append("\",\"");
		b.append(markupId);

		Properties p = new Properties();
		configureWidgetProperties(p);
		b.append("\", { ");
		for (Iterator<Entry<Object, Object>> i = p.entrySet().iterator(); i.hasNext();)
		{
			Entry<Object, Object> entry = i.next();
			b.append(entry.getKey());
			Object value = entry.getValue();
			if (value instanceof CharSequence)
			{
				b.append(":\"");
				b.append(value);
				b.append("\"");
			}
			else if (value instanceof CharSequence[])
			{
				b.append(":[");
				CharSequence[] valueArray = (CharSequence[])value;
				for (int j = 0; j < valueArray.length; j++)
				{
					CharSequence tmpValue = valueArray[j];
					b.append("\"");
					b.append(tmpValue);
					b.append("\"");
					if (j < valueArray.length - 1)
					{
						b.append(",");
					}
				}
				b.append("]");
			}
			else
			{
				b.append(":");
				b.append(value);
			}
			// TODO handle arrays
			if (i.hasNext())
			{
				b.append(",");
			}
		}

		b.append(" });\n");

		// append the javascript we want for our init function; call
		// this in an overridable method so that clients can add their
		// stuff without needing a big ass API
		appendToInit(markupId, javascriptId, javascriptWidgetId, b);

		// trigger rendering
		b.append("  ");
		b.append(javascriptWidgetId);
		b.append(".render();\n");

		b.append("}\n");
		// register the function for execution when the page is loaded
		b.append("YAHOO.util.Event.addListener(window, \"load\", init");
		b.append(javascriptId);
		b.append(");");
		b.append(JavascriptUtils.SCRIPT_CLOSE_TAG);

		response.renderString(b);
	}

