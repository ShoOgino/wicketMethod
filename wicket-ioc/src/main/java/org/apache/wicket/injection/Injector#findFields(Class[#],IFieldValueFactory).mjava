	/**
	 * Returns an array of fields that can be injected using the given field value factory
	 * 
	 * @param clazz
	 * @param factory
	 * @return an array of fields that can be injected using the given field value factory
	 */
	private Field[] findFields(Class<?> clazz, IFieldValueFactory factory)
	{
		List<Field> matched = new ArrayList<Field>();

		while (clazz != null)
		{
			Field[] fields = clazz.getDeclaredFields();
			for (final Field field : fields)
			{
				if (factory.supportsField(field))
				{
					matched.add(field);
				}
			}
			clazz = clazz.getSuperclass();
		}

		return matched.toArray(new Field[matched.size()]);
	}

