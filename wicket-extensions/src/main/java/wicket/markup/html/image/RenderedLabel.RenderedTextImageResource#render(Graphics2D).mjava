		/** Renders text into image. */
		@Override
		protected boolean render(final Graphics2D graphics)
		{
			renderedText = getModelObjectAsString(); // get text from outer
			// class model
			final int width = getWidth(), height = getHeight();

			// draw background if not null, otherwise leave transparent
			if (backgroundColor != null)
			{
				graphics.setColor(backgroundColor);
				graphics.fillRect(0, 0, width, height);
			}

			// render as a 1x1 pixel if text is empty
			if (renderedText == null)
			{
				if (width == 1 && height == 1)
				{
					return true;
				}
				setWidth(1);
				setHeight(1);
				return false;
			}

			// Get size of text
			graphics.setFont(font);
			final FontMetrics metrics = graphics.getFontMetrics();

			List<String> lines = new LinkedList<String>();

			int dxText = breakLines(renderedText, metrics, lines), lineHeight = metrics.getHeight(), dyText = lineHeight
					* lines.size();

			// resize and redraw if we need to
			if (dxText != width || dyText != height)
			{
				setWidth(dxText);
				setHeight(dyText);
				return false;
			}

			// Turn on anti-aliasing
			graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
					RenderingHints.VALUE_ANTIALIAS_ON);

			graphics.setColor(color);

			// Draw each line at its baseline
			int baseline = metrics.getAscent();
			for (String line : lines)
			{
				graphics.drawString(line, 0, baseline);
				baseline += lineHeight;
			}
			return true;
		}

