	/**
	 * @see FormComponent#updateModel()
	 */
	@Override
	public void updateModel()
	{
		clearModel();

		/*
		 * the input contains an array of full path of the selected option
		 * components unless nothing was selected in which case the input
		 * contains null
		 */
		String[] paths = getInputAsArray();

		/*
		 * if the input is null we do not need to do anything since the model
		 * collection has already been cleared
		 */

		if (paths != null && paths.length > 0)
		{
			checkSelectedOptionsCount(paths.length);

			for (String element : paths)
			{
				String path = element;
				if (path != null)
				{
					/*
					 * option component path sans select component path =
					 * relative path from group to option since we know the
					 * option is child of select
					 */
					path = path.substring(getPath().length() + 1);

					// retrieve the selected checkbox component
					SelectOption option = (SelectOption)get(path);
					if (option == null)
					{
						throw new WicketRuntimeException(
								"submitted http post value ["
										+ paths.toString()
										+ "] for SelectOption component ["
										+ getPath()
										+ "] contains an illegal relative path element ["
										+ path
										+ "] which does not point to an SelectOption component. Due to this the Select component cannot resolve the selected SelectOption component pointed to by the illegal value. A possible reason is that component hierarchy changed between rendering and form submission.");
					}

					assignValue(option.getModelObject());
				}
			}
		}

		finishModelUpdate();
	}

