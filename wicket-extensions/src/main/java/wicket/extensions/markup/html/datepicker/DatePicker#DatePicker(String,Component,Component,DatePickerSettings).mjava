	/**
	 * Construct.
	 * 
	 * @param id
	 *            the component id
	 * @param label
	 *            the label component (may be null)
	 * @param target
	 *            the receiving component
	 * @param settings
	 *            datepicker properties
	 */
	public DatePicker(final String id, final Component label, final Component target,
			final DatePickerSettings settings)
	{
		super(id);

		if (settings == null)
		{
			throw new IllegalArgumentException(
					"Settings must be non null when using this constructor");
		}

		this.settings = settings;

		if (target == null)
		{
			throw new IllegalArgumentException("Target must be not null");
		}

		target.add(new PathAttributeModifier("id", target));
		this.target = target;

		if (label != null)
		{
			label.add(new PathAttributeModifier("for", target));
		}
		add(triggerButton = new TriggerButton("trigger", settings.getIcon()));
		add(new InitScript("script"));
		add(new JavaScriptReference("calendarMain", DatePicker.class, "calendar.js"));
		add(new JavaScriptReference("calendarSetup", DatePicker.class, "calendar-setup.js"));
		add(new JavaScriptReference("calendarLanguage", new Model()
		{
			private static final long serialVersionUID = 1L;

			public Object getObject(Component component)
			{
				return settings.getLanguage(DatePicker.this.getLocale());
			}
		}));
		add(new StyleSheetReference("calendarStyle", settings.getStyle()));
	}

