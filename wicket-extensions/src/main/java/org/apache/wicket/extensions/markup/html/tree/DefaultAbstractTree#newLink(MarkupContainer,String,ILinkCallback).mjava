	/**
	 * Creates a link of type specified by current linkType. When the links is clicked it calls the
	 * specified callback.
	 * 
	 * @param parent
	 *            The parent component
	 * @param id
	 *            The component id
	 * @param callback
	 *            The link call back
	 * @return The link component
	 */
	protected MarkupContainer newLink(final MarkupContainer parent, final String id,
		final ILinkCallback callback)
	{
		if (getLinkType() == LinkType.REGULAR)
		{
			return new Link<Void>(id)
			{
				private static final long serialVersionUID = 1L;

				/**
				 * {@inheritDoc}
				 */
				@Override
				public void onClick()
				{
					callback.onClick(null);
				}
			};
		}
		else if (getLinkType() == LinkType.AJAX)
		{
			return new AjaxLink<Void>(id)
			{
				private static final long serialVersionUID = 1L;

				/**
				 * {@inheritDoc}
				 */
				@Override
				public void onClick(final AjaxRequestTarget target)
				{
					callback.onClick(target);
				}
			};
		}
		else
		{
			return new AjaxFallbackLink<Void>(id)
			{
				private static final long serialVersionUID = 1L;

				/**
				 * {@inheritDoc}
				 */
				@Override
				public void onClick(final AjaxRequestTarget target)
				{
					callback.onClick(target);
				}
			};
		}
	}

