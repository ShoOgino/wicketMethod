	/**
	 * create a new {@link TextField} instance for hours to be added to this panel.
	 * 
	 * @param id
	 *            the component id
	 * @param model
	 *            model that should be used by the {@link TextField}
	 * @param type
	 *            the type of the text field
	 * @return a new text field instance
	 */
	protected TextField<Integer> newHoursTextField(final String id, IModel<Integer> model,
		Class<Integer> type)
	{
		TextField<Integer> hoursTextField = new TextField<Integer>(id, model, type)
		{
			private static final long serialVersionUID = 1L;

			@Override
			protected String[] getInputTypes()
			{
				return new String[] { "number" };
			}

			@Override
			protected void onComponentTag(ComponentTag tag)
			{
				super.onComponentTag(tag);

				tag.append("class", getString(HOURS_CSS_CLASS_KEY), " ");

				tag.put("min", use12HourFormat() ? 1 : 0);
				tag.put("max", use12HourFormat() ? 12 : 23);
			}
		};
		hoursTextField
			.add(use12HourFormat() ? RangeValidator.range(1, 12) : RangeValidator.range(0, 23));
		return hoursTextField;
	}

