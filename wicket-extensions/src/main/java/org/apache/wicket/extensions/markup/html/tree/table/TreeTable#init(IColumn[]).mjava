	/**
	 * Internal initialization. Also checks if at least one of the columns is derived from
	 * AbstractTreeColumn.
	 * 
	 * @param columns
	 *            The columns
	 */
	private void init(IColumn columns[])
	{
		boolean found = false;
		if (columns != null)
		{
			for (IColumn column : columns)
			{
				if (column instanceof AbstractTreeColumn)
				{
					found = true;
					break;
				}
			}
		}
		if (found == false)
		{
			throw new IllegalArgumentException(
				"At least one column in TreeTable must be derived from AbstractTreeColumn.");
		}

		this.columns = columns;

		// Attach the javascript that resizes the header according to the body
		// This is necessary to support fixed position header. The header does
		// not
		// scroll together with body. The body contains vertical scrollbar. The
		// header width must be same as body content width, so that the columns
		// are properly aligned.
		add(new Label("attachJavascript", new Model<String>()
		{
			private static final long serialVersionUID = 1L;

			@Override
			public String getObject()
			{
				return "Wicket.TreeTable.attachUpdate(\"" + getMarkupId() + "\");";
			}
		}).setEscapeModelStrings(false));
	}

