	/**
	 * Construct.
	 * 
	 * @param id
	 *      the component id
	 * @param model
	 *      the component's model
	 */
	public TimeField(String id, IModel<LocalTime> model, LocalTimeConverter converter)
	{
		super(id, model);

		Args.notNull(converter, "converter");
		this.converter = converter;

		// Sets the type that will be used when updating the model for this component.
		setType(LocalTime.class);


		// Create and add the "hours" TextField
		add(hoursField = newHoursTextField(HOURS, new HoursModel(), Integer.class));

		// Create and add the "minutes" TextField
		add(minutesField = newMinutesTextField(MINUTES, new MinutesModel(), Integer.class));

		// Create and add the "AM/PM" Listbox
		add(amOrPmChoice = new DropDownChoice<>(AM_OR_PM_CHOICE, new AmPmModel(), Arrays.asList(AM_PM.values())));

		add(new WebMarkupContainer("hoursSeparator")
		{
			private static final long serialVersionUID = 1L;

			@Override
			public boolean isVisible()
			{
				return minutesField.determineVisibility();
			}
		});
	}

