	/**
	 * sets the selected tab
	 * 
	 * @param index
	 *            index of the tab to select
	 * 
	 */
	public void setSelectedTab(int index)
	{
		if (index < 0 || (index >= tabs.size() && index > 0))
		{
			throw new IndexOutOfBoundsException();
		}

		setModelObject(new Integer(index));

		final Component<?> component;


		if (tabs.size() == 0 || !isTabVisible(index))
		{
			// no tabs or the currently selected tab is not visible
			component = new WebMarkupContainer<Void>(TAB_PANEL_ID);
		}
		else
		{
			// show panel from selected tab
			ITab tab = tabs.get(index);
			component = tab.getPanel(TAB_PANEL_ID);
			if (component == null)
			{
				throw new WicketRuntimeException("ITab.getPanel() returned null. TabbedPanel [" +
					getPath() + "] ITab index [" + index + "]");

			}
		}


		if (!component.getId().equals(TAB_PANEL_ID))
		{
			throw new WicketRuntimeException(
				"ITab.getPanel() returned a panel with invalid id [" +
					component.getId() +
					"]. You must always return a panel with id equal to the provided panelId parameter. TabbedPanel [" +
					getPath() + "] ITab index [" + index + "]");
		}

		addOrReplace(component);
	}

