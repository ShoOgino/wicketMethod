	/**
	 * If the previous participant is not null (and a component, which it should be), replace that
	 * component on it's parent with this one.
	 * 
	 * @see org.apache.wicket.extensions.breadcrumb.IBreadCrumbParticipant#onActivate(org.apache.wicket.extensions.breadcrumb.IBreadCrumbParticipant)
	 */
	public void onActivate(IBreadCrumbParticipant previous)
	{
		if (previous != null)
		{
			MarkupContainer parent = previous.getComponent().getParent();
			if (parent != null)
			{
				final String thisId = component.getId();
				if (parent.get(thisId) != null)
				{
					parent.replace(component);
				}
				else
				{
					// try to search downwards to match the id
					// NOTE unfortunately, we can't rely on the path pre 2.0
					Component c = (Component)parent.visitChildren(new IVisitor<Component>()
					{
						public Object component(Component component)
						{
							if (component.getId().equals(thisId))
							{
								return component;
							}
							return IVisitor.CONTINUE_TRAVERSAL;
						}
					});
					if (c == null)
					{
						// not found... do a reverse search (upwards)
						c = (Component)parent.visitParents(Component.class,
							new IVisitor<Component>()
							{
								public Object component(Component component)
								{
									if (component.getId().equals(thisId))
									{
										return component;
									}
									return IVisitor.CONTINUE_TRAVERSAL;
								}
							});
					}

					// replace if found
					if (c != null)
					{
						c.replaceWith(component);
					}
				}
			}
		}
		else if (component.getParent() != null)
		{
			component.getParent().replace(component);
		}
	}

