	/**
	 * @return list over selected choices
	 */
	public List<T> getSelectedList()
	{
		final IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();
		final Collection<? extends T> choices = getPalette().getChoices();
		final List<T> selected = new ArrayList<>(choices.size());

		// reduce number of method calls by building a lookup table
		final Map<T, String> idForChoice = new HashMap<>(choices.size());
		for (final T choice : choices)
		{
			idForChoice.put(choice, renderer.getIdValue(choice, 0));
		}

		for (final String id : getValue().split(","))
		{
			for (final T choice : choices)
			{
				final String idValue = idForChoice.get(choice);
				if (id.equals(idValue)) // null-safe compare
				{
					selected.add(choice);
					break;
				}
			}
		}

		return selected;
	}

