	/**
	 * Constructor
	 * 
	 * @param parent
	 *            parent component
	 * @param id
	 *            component id
	 * 
	 * @param table
	 *            data table this toolbar will be attached to
	 * @param stateLocator
	 *            locator for the ISortState implementation used by sortable
	 *            headers
	 */
	public HeadersToolbar(MarkupContainer parent, final String id, final DataTable table,
			final ISortStateLocator stateLocator)
	{
		super(parent, id, table);

		RepeatingView headers = new RepeatingView(this, "headers");
		add(headers);
		IColumn[] cols = table.getColumns();

		for (IColumn column : cols)
		{
			// TODO Post 1.2: General: Is this extra component really necessary?
			// can we
			// not simply use the repeater's body without the need for the id in
			// the markup?
			WebMarkupContainer item = new WebMarkupContainer(headers, headers.newChildId());
			headers.add(item);

			WebMarkupContainer header = null;
			if (column.isSortable())
			{
				header = new OrderByBorder(item, "header", column.getSortProperty(), stateLocator)
				{

					private static final long serialVersionUID = 1L;

					@Override
					protected void onSortChanged()
					{
						table.setCurrentPage(0);
					}
				};

			}
			else
			{
				header = new WebMarkupContainer(item, "header");
			}
			item.add(header);
			item.setRenderBodyOnly(true);
			header.add(column.getHeader(header, "label"));
		}

	}

