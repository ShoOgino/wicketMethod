	/**
	 * Updates the changed portions of the tree using given AjaxRequestTarget.
	 * Call this method if you modified the tree model during an ajax request
	 * target and you want to partially update the component on page. Make sure
	 * that the tree model has fired the proper listener functions.
	 * 
	 * @param target
	 *            Ajax request target used to send the update to the page
	 */
	public final void updateTree(final AjaxRequestTarget target)
	{
		if (target == null)
		{
			return;
		}

		// check whether the model hasn't changed
		checkModel();

		// is the whole tree dirty
		if (dirtyAll)
		{
			// render entire tree component
			target.addComponent(this);
		}
		else
		{
			// remove DOM elements that need to be removed
			if (deleteIds.length() != 0)
			{
				String js = getElementsDeleteJavascript();

				// add the javascript to target
				target.prependJavascript(js);
			}

			for (Iterator i = dirtyItemsCreateDOM.iterator(); i.hasNext();)
			{
				TreeItem item = (TreeItem)i.next();
				TreeItem parent = item.getParentItem();
				int index = parent.getChildren().indexOf(item);
				TreeItem previous;
				// we need item before this (in dom structure)
				if (index == 0)
				{
					previous = parent;
				}
				else
				{
					previous = (TreeItem)parent.getChildren().get(index - 1);
					// get the last item of previous item subtree
					while (previous.getChildren() != null && previous.getChildren().size() > 0)
					{
						previous = (TreeItem)previous.getChildren().get(
								previous.getChildren().size() - 1);
					}
				}
				target.prependJavascript("Wicket.Tree.createElement(\"" + item.getMarkupId()
						+ "\"," + "\"" + previous.getMarkupId() + "\")");
			}

			// iterate through dirty items
			for (Iterator i = dirtyItems.iterator(); i.hasNext();)
			{
				TreeItem item = (TreeItem)i.next();
				// does the item need to rebuild children?
				if (item.getChildren() == null)
				{
					// rebuld the children
					buildItemChildren(item);

					// set flag on item so that it renders itself together with
					// it's children
					item.setRenderChildren(true);
				}

				// add the component to target
				target.addComponent(item);
			}
		}

		// clear dirty flags
		updated();
	}

