	/**
	 * Returns an Enumerator that increments over the visible paths starting at
	 * the passed in location. The ordering of the enumeration is based on how
	 * the paths are displayed.
	 * 
	 * @param path
	 *            the path
	 * @return an Enumerator that increments over the visible paths
	 */
	public Enumeration getVisiblePathsFrom(TreePath path)
	{
		if (path == null)
		{
			return null;
		}

		TreeStateNode node = getNodeForPath(path, true, false);

		if (node != null)
		{
			return new VisibleTreeStateNodeEnumeration(node);
		}
		TreePath parentPath = path.getParentPath();

		node = getNodeForPath(parentPath, true, false);
		if (node != null && node.isExpanded())
		{
			return new VisibleTreeStateNodeEnumeration(node, treeModel.getIndexOfChild(parentPath
					.getLastPathComponent(), path.getLastPathComponent()));
		}
		return null;
	}

