	/**
	 * Invalidates single node (without children). On the next render, this node
	 * will be updated. Node will not be rebuilt, unless forceRebuild is true.
	 * TODO Implement forceRebuild
	 * 
	 * @param node
	 *            The node to invalidate
	 * @param forceRebuld
	 */
	private final void invalidateNode(TreeNode node, boolean forceRebuld)
	{
		// get item for this node
		TreeItem item = (TreeItem)nodeToItemMap.get(node);

		if (forceRebuld)
		{
			// recreate the item
			int level = item.getLevel();
			List children = item.getChildren();
			String id = item.getId();

			// store the parent of old item
			TreeItem parent = item.getParentItem();

			// if the old item has a parent, store it's index
			int index = parent != null ? parent.getChildren().indexOf(item) : -1;

			item.remove();

			item = newTreeItem(node, level, id);
			itemContainer.add(item);
			item.setChildren(children);

			if (parent != null)
			{
				parent.getChildren().set(index, item);
			}
		}

		if (item != null)
			dirtyItems.add(item);
	}

