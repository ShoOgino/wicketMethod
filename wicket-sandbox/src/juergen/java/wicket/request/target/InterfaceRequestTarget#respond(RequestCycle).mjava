	/**
	 * @see wicket.IRequestTarget#respond(wicket.RequestCycle)
	 */
	public void respond(final RequestCycle requestCycle)
	{
		// Initialize temporary variables
		Page page = component.getPage();
		if (page != null)
		{
			page.startComponentRender(component);
		}

		try
		{
			this.method.invoke(this.component, new Object[] {});
		}
		catch (IllegalArgumentException e)
		{
			throw new WicketRuntimeException("Error while rendering the response", e);
		}
		catch (IllegalAccessException e)
		{
			throw new WicketRuntimeException("Error while rendering the response", e);
		}
		catch (InvocationTargetException e)
		{
			throw new WicketRuntimeException("Error while rendering the response", e);
		}
		
		if (page != null)
		{
			page.endComponentRender(component);
		}
	}

