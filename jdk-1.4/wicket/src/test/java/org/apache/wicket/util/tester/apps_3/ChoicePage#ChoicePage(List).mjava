	/**
	 * Test page for FormTester.select()
	 * 
	 * @param candidateChoices
	 */
	public ChoicePage(List candidateChoices)
	{
		ChoiceRenderer bookChoiceRenderer = new ChoiceRenderer("name", "id");

		Form form = new Form("choiceForm");
		add(form);

		form.setModel(new CompoundPropertyModel(this));

		// setting initial values
		dropDownChoice = (Book) candidateChoices.get(1);
		listChoice = (Book) candidateChoices.get(3);
		radioChoice = (Book) candidateChoices.get(2);
		checkBox = true;
		initialListMultipleChoice.add(candidateChoices.get(1));
		initialListMultipleChoice.add(candidateChoices.get(2));
		initialCheckBoxMultipleChoice.add(candidateChoices.get(0));
		initialCheckBoxMultipleChoice.add(candidateChoices.get(3));
		initialCheckGroup.add(candidateChoices.get(2));
		initialCheckGroup.add(candidateChoices.get(3));

		// single select family
		form.add(new DropDownChoice("dropDownChoice", candidateChoices, bookChoiceRenderer));
		form.add(new ListChoice("listChoice", candidateChoices, bookChoiceRenderer).setMaxRows(4));
		form.add(new RadioChoice("radioChoice", candidateChoices, bookChoiceRenderer));
		form.add(new CheckBox("checkBox"));
		form.add(newRadioGroup(candidateChoices));

		// multiple select family
		form.add(new ListMultipleChoice("initialListMultipleChoice", candidateChoices, bookChoiceRenderer));
		form.add(new CheckBoxMultipleChoice("initialCheckBoxMultipleChoice", candidateChoices, bookChoiceRenderer));
		form.add(newCheckGroup("initialCheckGroup", candidateChoices));
		form.add(new ListMultipleChoice("listMultipleChoice", candidateChoices, bookChoiceRenderer)
				.setMaxRows(4));
		form.add(new CheckBoxMultipleChoice("checkBoxMultipleChoice", candidateChoices,
				bookChoiceRenderer));
		form.add(newCheckGroup("checkGroup", candidateChoices));
		form.add(new Button("anotherButton")
		{
			private static final long serialVersionUID = 1L;

			public void onSubmit()
			{
				anotherButtonPressed = true;
			}
		});
	}

