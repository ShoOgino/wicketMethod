	/**
	 * Whatever will be in between the current index and the closing tag, will
	 * be ignored (and thus treated as raw markup (text). This is useful for
	 * tags like 'script'.
	 *
	 * @throws ParseException
	 */
	private final void skipUntil() throws ParseException
	{
		// this is a tag with non-XHTML text as body - skip this until the
		// skipUntilText is found.
		final int startIndex = input.getPosition();
		final int tagNameLen = skipUntilText.length();

		int pos = input.getPosition() - 1;
		String endTagText = null;
		int lastPos = 0;
		while (!skipUntilText.equalsIgnoreCase(endTagText))
		{
			pos = input.find("</", pos + 1);
			if ((pos == -1) || ((pos + (tagNameLen + 2)) >= input.size()))
			{
				throw new ParseException(skipUntilText + " tag not closed (line "
						+ input.getLineNumber() + ", column " + input.getColumnNumber()
						+ ")", startIndex);
			}

			lastPos = pos + 2;
			endTagText = input.getSubstring(lastPos, lastPos + tagNameLen).toString();
		}

		input.setPosition(pos);
		lastText = input.getSubstring(startIndex, pos);
		lastType = BODY;

		// Check that the tag is properly closed
		lastPos = input.find('>', lastPos + tagNameLen);
		if (lastPos == -1)
		{
			throw new ParseException("Script tag not closed (line " + input.getLineNumber()
					+ ", column " + input.getColumnNumber() + ")", startIndex);
		}

		// Reset the state variable
		skipUntilText = null;
	}

