	/**
	 * Sets the defaultFormProcessing property. When false (default is true), all validation and
	 * form updating is bypassed and the onSubmit method of that button is called directly, and the
	 * onSubmit method of the parent form is not called. A common use for this is to create a cancel
	 * button.
	 * 
	 * @param defaultFormProcessing
	 *            defaultFormProcessing
	 * @return This
	 */
	public final Button setDefaultFormProcessing(boolean defaultFormProcessing)
	{
		if (this.defaultFormProcessing != defaultFormProcessing)
		{
			addStateChange(new Change()
			{
				private static final long serialVersionUID = 1L;

				boolean formerValue = Button.this.defaultFormProcessing;

				public void undo()
				{
					Button.this.defaultFormProcessing = formerValue;
				}

				public String toString()
				{
					return "DefaultFormProcessingChange[component: " + getPath() +
						", default processing: " + formerValue + "]";
				}
			});
		}

		this.defaultFormProcessing = defaultFormProcessing;
		return this;
	}

