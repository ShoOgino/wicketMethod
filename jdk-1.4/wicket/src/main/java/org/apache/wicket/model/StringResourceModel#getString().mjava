	/**
	 * Gets the string currently represented by this string resource model. The
	 * string that is returned may vary for each call to this method depending
	 * on the values contained in the model and an the parameters that were
	 * passed when this string resource model was created.
	 * 
	 * @return The string
	 */
	public final String getString()
	{
		// Make sure we have a localizer before commencing
		if (getLocalizer() == null)
		{
			if (component != null)
			{
				setLocalizer(component.getLocalizer());
			}
			else
			{
				throw new IllegalStateException("No localizer has been set");
			}
		}

		// Get the string resource, doing any property substitutions as part
		// of the get operation
		String value = localizer.getString(getResourceKey(), component, model, defaultValue);
		if (value == null)
		{
			value = defaultValue;
		}

		if (value != null)
		{
			// Substitute any parameters if necessary
			Object[] parameters = getParameters();
			if (parameters != null)
			{
				// Build the real parameters
				Object[] realParams = new Object[parameters.length];
				for (int i = 0; i < parameters.length; i++)
				{
					if (parameters[i] instanceof IModel)
					{
						realParams[i] = ((IModel)parameters[i]).getObject();
					}
					else if (model != null && parameters[i] instanceof String)
					{
						realParams[i] = PropertyVariableInterpolator.interpolate(
								(String)parameters[i], model.getObject());
					}
					else
					{
						realParams[i] = parameters[i];
					}
				}

				// Apply the parameters
				final MessageFormat format = new MessageFormat(value, component != null ? component
						.getLocale() : locale);
				value = format.format(realParams);
			}
		}

		// Return the string resource
		return value;
	}

