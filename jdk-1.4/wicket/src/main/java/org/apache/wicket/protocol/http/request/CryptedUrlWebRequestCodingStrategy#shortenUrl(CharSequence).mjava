	/**
	 * Try to shorten the querystring without loosing information. Note:
	 * WebRequestWithCryptedUrl must implement exactly the opposite logic.
	 *
	 * @param queryString
	 *            The original query string
	 * @return The shortened querystring
	 */
	protected CharSequence shortenUrl(CharSequence queryString)
	{
		queryString = Strings.replaceAll(queryString,
				WebRequestCodingStrategy.BEHAVIOR_ID_PARAMETER_NAME + "=", "1-");
		queryString = Strings.replaceAll(queryString,
				WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME + "=IRedirectListener", "2-");
		queryString = Strings.replaceAll(queryString,
				WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME + "=IFormSubmitListener", "3-");
		queryString = Strings.replaceAll(queryString,
				WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME + "=IOnChangeListener", "4-");
		queryString = Strings.replaceAll(queryString,
				WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME + "=ILinkListener", "5-");
		queryString = Strings.replaceAll(queryString,
				WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME + "=", "6-");
		queryString = Strings.replaceAll(queryString,
				WebRequestCodingStrategy.BOOKMARKABLE_PAGE_PARAMETER_NAME + "=", "7-");

		// For debugging only: determine possibilities to further shorten
		// the query string
		if (log.isDebugEnabled())
		{
			// Every word with at least 3 letters
			Pattern words = Pattern.compile("\\w\\w\\w+");
			Matcher matcher = words.matcher(queryString);
			while (matcher.find())
			{
				CharSequence word = queryString.subSequence(matcher.start(), matcher.end());
				log.debug("URL pattern NOT shortened: '" + word + "' - '" + queryString + "'");
			}
		}

		return queryString;
	}

