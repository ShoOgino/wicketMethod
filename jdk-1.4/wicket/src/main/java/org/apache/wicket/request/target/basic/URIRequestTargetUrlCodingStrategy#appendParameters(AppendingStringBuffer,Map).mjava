	/**
	 * Gets the encoded URL for the request target. The "uri" parameter is
	 * appended first with a slash, then the remaining parameters are handled
	 * like in {@link org.apache.wicket.request.target.coding.QueryStringUrlCodingStrategy#appendParameters(org.apache.wicket.util.string.AppendingStringBuffer, java.util.Map)}
	 * 
	 * @param url
	 *            the relative reference URL
	 * @param parameters
	 *            parameter names mapped to parameter values
	 */
	protected void appendParameters(AppendingStringBuffer url, Map parameters)
	{

		if (parameters.get(URI) != null)
		{
			url.append("/").append(parameters.get(URI));
		}
		if (!url.endsWith("/"))
		{
			url.append("/");
		}

		// Copied from QueryStringUrlCodingStrategy
		if (parameters != null && parameters.size() > 0)
		{
			final Iterator entries;
			if (UnitTestSettings.getSortUrlParameters())
			{
				entries = new TreeMap(parameters).entrySet().iterator();
			}
			else
			{
				entries = parameters.entrySet().iterator();
			}
			WebRequestEncoder encoder = new WebRequestEncoder(url);
			while (entries.hasNext())
			{
				Map.Entry entry = (Entry)entries.next();

				if (entry.getKey().equals(URI))
				{
					// Ignore "uri" parameter already handled
					continue;
				}
				if (entry.getValue() != null)
				{
					encoder.addValue(entry.getKey().toString(), entry.getValue());
				}
			}
		}
	}

