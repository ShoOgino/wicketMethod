	/**
	 * Returns the value to which the specified key is mapped in this table.
	 * 
	 * @param key
	 *            a key in the table.
	 * @return the value to which the key is mapped in this table; <code>null</code> if the key is
	 *         not mapped to any value in this table.
	 * @exception NullPointerException
	 *                if the key is <code>null</code>.
	 * @see #put(Object, Object)
	 */
	public Object get(Object key)
	{
		int hash = hash(key); // throws null pointer exception if key null

		// Try first without locking...
		Entry[] tab = table;
		int index = hash & (tab.length - 1);
		Entry first = tab[index];
		Entry e;

		for (e = first; e != null; e = e.next)
		{
			if (e.hash == hash && eq(key, e.key))
			{
				Object value = e.value;
				if (value != null)
				{
					return value;
				}
				else
				{
					break;
				}
			}
		}

		// Recheck under synch if key apparently not there or interference
		Segment seg = segments[hash & SEGMENT_MASK];
		synchronized (seg)
		{
			tab = table;
			index = hash & (tab.length - 1);
			Entry newFirst = tab[index];
			if (e != null || first != newFirst)
			{
				for (e = newFirst; e != null; e = e.next)
				{
					if (e.hash == hash && eq(key, e.key))
					{
						return e.value;
					}
				}
			}
			return null;
		}
	}

