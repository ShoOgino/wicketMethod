	/**
	 * Inserts all of the elements in the specified Collection into this list,
	 * starting at the specified position. Shifts the element currently at that
	 * position (if any) and any subsequent elements to the right (increases
	 * their indices). The new elements will appear in the list in the order
	 * that they are returned by the specified Collection's iterator.
	 * 
	 * @param index
	 *            index at which to insert first element from the specified
	 *            collection.
	 * @param c
	 *            elements to be inserted into this list.
	 * @exception IndexOutOfBoundsException
	 *                index out of range (index &lt; 0 || index &gt; size()).
	 */
	public synchronized boolean addAll(int index, Collection c)
	{
		int len = array_.length;
		if (index > len || index < 0)
		{
			throw new IndexOutOfBoundsException("Index: " + index + ", Size: " + len);
		}

		int numNew = c.size();
		if (numNew == 0)
		{
			return false;
		}

		Object[] newArray = new Object[len + numNew];
		System.arraycopy(array_, 0, newArray, 0, len);
		int numMoved = len - index;
		if (numMoved > 0)
		{
			System.arraycopy(array_, index, newArray, index + numNew, numMoved);
		}
		Iterator e = c.iterator();
		for (int i = 0; i < numNew; i++)
		{
			newArray[index++] = e.next();
		}
		array_ = newArray;

		return true;
	}

