		/**
		 * @see Iterator#hasNext()
		 */
		public boolean hasNext()
		{
			/*
			 * currentkey and currentValue are set here to ensure that next() returns normally if
			 * hasNext() returns true. This avoids surprises especially when final element is
			 * removed during traversal -- instead, we just ignore the removal during current
			 * traversal.
			 */

			for (;;)
			{
				if (entry != null)
				{
					Object v = entry.value;
					if (v != null)
					{
						currentKey = entry.key;
						currentValue = v;
						return true;
					}
					else
					{
						entry = entry.next;
					}
				}

				while (entry == null && index >= 0)
				{
					entry = tab[index--];
				}

				if (entry == null)
				{
					currentKey = currentValue = null;
					return false;
				}
			}
		}

