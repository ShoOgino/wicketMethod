	/**
	 * Retrieves id by which this component is represented within the markup.
	 * This is either the id attribute if it is set explicitly in the markup, or
	 * a generated id.
	 * <p>
	 * The point of this function is to generate a unique id to make it easy to
	 * locate this component in the generated markup for post-wicket processing
	 * such as javascript or an xslt transform in case no explicit id was set
	 * yet.
	 * <p>
	 * Note: This method should only be called after the component or its parent
	 * have been added to the page.
	 * 
	 * @return markup id of the component
	 */
	public String getMarkupId()
	{
		String markupId = (String)getMetaData(MARKUP_ID_KEY);
		if (markupId == null)
		{
			Page page = findPage();
			if (page == null)
			{
				throw new WicketRuntimeException(
						"This component is not (yet) coupled to a page. It has to be able "
								+ "to find the page it is supposed to operate in before you can call "
								+ "this method (Component#getMarkupId)");
			}
			// try to read from markup
			// TODO getting the id from markup doesn't work everywhere yet.
			// unfortunately, we have to drop this until we have a good solution
			// for issue http://issues.apache.org/jira/browse/WICKET-694
			// markupId = getMarkupAttributes().getString("id");

			// if (markupId == null)
			// {
			// if not in the markup, generate one
			markupId = getId() + page.getAutoIndex();
			// }
			setMetaData(MARKUP_ID_KEY, markupId);
		}
		return markupId;
	}

