	/**
	 * Load properties file from an IResourceStream and add an {@link IChangeListener}to the
	 * {@link ModificationWatcher} so that if the resource changes, we can reload it automatically.
	 * 
	 * @param key
	 *            The key for the resource
	 * @param resourceStream
	 *            The properties file stream to load and begin to watch
	 * @return The map of loaded resources
	 */
	private final Properties loadPropertiesFileAndWatchForChanges(final String key,
		final IResourceStream resourceStream)
	{
		// Watch file modifications
		final ModificationWatcher watcher = application.getResourceSettings().getResourceWatcher(
			true);
		if (watcher != null)
		{
			watcher.add(resourceStream, new IChangeListener()
			{
				public void onChange()
				{
					log.info("A properties files has changed. Removing all entries " +
						"from the cache. Resource: " + resourceStream);

					// Clear the whole cache as associated localized files may
					// be affected and may need reloading as well.
					clearCache();

					// clear the localizer cache as well
					application.getResourceSettings().getLocalizer().clearCache();

					// Inform all listeners
					Iterator iter = afterReloadListeners.iterator();
					while (iter.hasNext())
					{
						IPropertiesChangeListener listener = (IPropertiesChangeListener)iter.next();
						try
						{
							listener.propertiesChanged(key);
						}
						catch (Throwable ex)
						{
							log.error("PropertiesReloadListener has thrown an exception: " +
								ex.getMessage());
						}
					}
				}
			});
		}

		log.info("Loading properties files from " + resourceStream);
		return loadPropertiesFile(key, resourceStream);
	}

