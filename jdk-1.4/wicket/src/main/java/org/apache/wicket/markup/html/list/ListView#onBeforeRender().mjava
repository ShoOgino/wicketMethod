	/**
	 * @see org.apache.wicket.MarkupContainer#onBeforeRender()
	 */
	protected void onBeforeRender()
	{
		super.onBeforeRender();

		if (isVisibleInHierarchy())
		{
			// Get number of items to be displayed
			final int size = getViewSize();
			if (size > 0)
			{
				if (getReuseItems())
				{
					// Remove all ListItems no longer required
					final int maxIndex = firstIndex + size;
					for (final Iterator iterator = iterator(); iterator.hasNext();)
					{
						// Get next child component
						final ListItem child = (ListItem)iterator.next();
						if (child != null)
						{
							final int index = child.getIndex();
							if (index < firstIndex || index >= maxIndex)
							{
								iterator.remove();
							}
						}
					}
				}
				else
				{
					// Automatically rebuild all ListItems before rendering the
					// list view
					removeAll();
				}

				// Loop through the markup in this container for each item
				for (int i = 0; i < size; i++)
				{
					// Get index
					final int index = firstIndex + i;

					// If this component does not already exist, populate it
					ListItem item = (ListItem)get(Integer.toString(index));
					if (item == null)
					{
						// Create item for index
						item = newItem(index);

						// Add list item
						add(item);

						// Populate the list item
						onBeginPopulateItem(item);
						populateItem(item);
					}
				}
			}
			else
			{
				removeAll();
			}
		}
	}

