	/**
	 * Gets the button which submitted this form.
	 * 
	 * @return The button which submitted this form or null if the processing
	 *         was not trigger by a registered button component
	 */
	public final IFormSubmittingComponent findSubmittingButton()
	{
		IFormSubmittingComponent submittingButton = (IFormSubmittingComponent)getPage()
				.visitChildren(IFormSubmittingComponent.class, new IVisitor()
				{
					public Object component(final Component component)
					{
						// Get button
						final IFormSubmittingComponent submit = (IFormSubmittingComponent)component;

						// Check for button-name or button-name.x request string
						if (submit.getForm() != null &&
								submit.getForm().getRootForm() == Form.this &&
								(getRequest().getParameter(submit.getInputName()) != null || getRequest()
										.getParameter(submit.getInputName() + ".x") != null))
						{
							if (!component.isVisible())
							{
								throw new WicketRuntimeException("Submit Button " +
										submit.getInputName() + " (path=" +
										component.getPageRelativePath() + ") is not visible");
							}
							return submit;
						}
						return CONTINUE_TRAVERSAL;
					}
				});

		return submittingButton;
	}

