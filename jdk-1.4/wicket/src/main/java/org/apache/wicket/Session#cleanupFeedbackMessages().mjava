	/**
	 * Cleans up all rendered feedback messages and any unrendered, dangling
	 * feedback messages there may be left after that.
	 */
	public void cleanupFeedbackMessages()
	{
		// If session scoped, rendered messages got indeed cleaned up, mark the
		// session as dirty
		if (feedbackMessages.clear(RENDERED_SESSION_SCOPED_MESSAGES) > 0)
		{
			dirty();
		}

		// Render anything that was already rendered and what was assigned to a
		// page that was just rendered if any
		final Page page = RequestCycle.get().getResponsePage();
		final Counter notCleanedUpCounter = new Counter();
		feedbackMessages.clear(new IFeedbackMessageFilter()
		{
			private static final long serialVersionUID = 1L;

			public boolean accept(FeedbackMessage message)
			{
				if (message.isRendered())
				{
					return true;
				}
				if (page != null)
				{
					Component reporter = message.getReporter();
					if (reporter != null)
					{
						Page reporterPage = reporter.findPage();
						return reporterPage != null && reporterPage.equals(page);
					}
				}
				notCleanedUpCounter.count++;
				return false;
			}
		});

		if (notCleanedUpCounter.count > 0)
		{
			log.warn("still " + notCleanedUpCounter.count + " messages unrendered");
		}
	}

