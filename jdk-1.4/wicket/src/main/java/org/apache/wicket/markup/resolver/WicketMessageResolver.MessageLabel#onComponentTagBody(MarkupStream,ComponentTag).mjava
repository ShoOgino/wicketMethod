		protected void onComponentTagBody(MarkupStream markupStream, ComponentTag openTag)
		{
			final String key = getModelObjectAsString();
			final String value = getLocalizer().getString(key, getParent(), DEFAULT_VALUE);
			if (value != null && !DEFAULT_VALUE.equals(value))
			{
				replaceComponentTagBody(markupStream, openTag, value.trim());
			}
			else
			{
				log.debug("No value found for wicket:message tag with key: {}", key);

				// get original tag from markup because we modified this one to always be open
				markupStream.setCurrentIndex(markupStream.getCurrentIndex() - 1);
				ComponentTag tag = markupStream.getTag();
				markupStream.next();

				// if the tag is of form <wicket:message>{foo}</wicket:message> use {foo} as
				// default value for the message, otherwise do nothing
				if (!tag.isOpenClose())
				{
					MarkupElement body = markupStream.get();
					if (body instanceof RawMarkup)
					{
						replaceComponentTagBody(markupStream, openTag, body.toCharSequence());
					}
				}
			}
		}

