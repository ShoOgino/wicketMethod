	/**
	 * Triggers any added {@link IFormValidator}s.
	 */
	protected final void validateFormValidators()
	{
		final int count = formValidators_size();
		for (int i = 0; i < count; i++)
		{
			validateFormValidator(formValidators_get(i));
		}
		
		// traverse nested forms and invoke the form validators on them
		visitChildren(Form.class, new IVisitor() {
			public Object component(Component component)
			{
				final Form form = (Form) component;
				final int count = form.formValidators_size();
				for (int i = 0; i < count; i++)
				{
					form.validateFormValidator(form.formValidators_get(i));
				}
				
				return IVisitor.CONTINUE_TRAVERSAL;
			}
		});
	}

