	/**
	 * This method allows a component to be added by an auto-resolver such as AutoComponentResolver
	 * or AutoLinkResolver. While the component is being added, the component's FLAG_AUTO boolean is
	 * set. The isAuto() method of Component returns true if a component or any of its parents has
	 * this bit set. When a component is added via autoAdd(), the logic in Page that normally (a)
	 * checks for modifications during the rendering process, and (b) versions components, is
	 * bypassed if Component.isAuto() returns true.
	 * <p>
	 * The result of all this is that components added with autoAdd() are free from versioning and
	 * can add their own children without the usual exception that would normally be thrown when the
	 * component hierarchy is modified during rendering.
	 * 
	 * @param component
	 *            The component to add
	 * @param markupStream
	 *            Null, if the parent container is able to provide the markup. Else the markup
	 *            stream to be used to render the component.
	 * @return True, if component has been added
	 */
	public final boolean autoAdd(final Component component, final MarkupStream markupStream)
	{
		if (component == null)
		{
			throw new IllegalArgumentException("argument component may not be null");
		}

		/* Replace strategy */
		component.setAuto(true);
// if (get(component.getId()) != null)
// {
// this.remove(component);
// }
		add(component);
		component.prepareForRender();
		if (markupStream == null)
		{
			component.render();
		}
		else
		{
			component.render(markupStream);
		}
		remove(component);
		return true;
	}

