	/**
	 * Analyzes the passed in interfaceParameter for the relevant parts and puts the parts as
	 * parameters in the provided request parameters object.
	 *
	 * @param interfaceParameter
	 *            The format of the interfaceParameter is: <code>
	 * page-map-name:path:version:interface:behaviourId:urlDepth
	 * </code>
	 * @param parameters
	 *            parameters object to set the found parts in
	 */
	public static void addInterfaceParameters(final String interfaceParameter,
			final RequestParameters parameters)
	{
		if (interfaceParameter == null)
		{
			return;
		}

		// Split into array of strings
		String[] pathComponents = Strings.split(interfaceParameter, Component.PATH_SEPARATOR);

		// There must be 6 components
		// pagemap:(pageid:componenta:componentb:...):version:interface:behavior:depth
		if (pathComponents.length < 6)
		{
			throw new WicketRuntimeException("Internal error parsing " + INTERFACE_PARAMETER_NAME +
					" = " + interfaceParameter);
		}

		// Extract version
		String versionNumberString = null;
		try
		{
			versionNumberString = pathComponents[pathComponents.length - 4];
			final int versionNumber = Strings.isEmpty(versionNumberString) ? 0 : Integer
					.parseInt(versionNumberString);
			parameters.setVersionNumber(versionNumber);
		}
		catch (NumberFormatException e)
		{
			throw new WicketRuntimeException("Internal error parsing " + INTERFACE_PARAMETER_NAME +
					" = " + interfaceParameter +
					"; wrong format for page version argument. Expected a number but was '" +
					versionNumberString + "'", e);
		}

		// Set pagemap name
		final String pageMapName = pathComponents[0];
		parameters.setPageMapName(pageMapName.length() == 0 ? PageMap.DEFAULT_NAME : pageMapName);

		// Extract URL depth after last colon
		final String urlDepthString = pathComponents[pathComponents.length - 1];
		final int urlDepth;
		try
		{
			urlDepth = Strings.isEmpty(urlDepthString) ? -1 : Integer.parseInt(urlDepthString);
		}
		catch (NumberFormatException e)
		{
			throw new WicketRuntimeException("Internal error parsing " + INTERFACE_PARAMETER_NAME +
					" = " + interfaceParameter +
					"; wrong format for url depth argument. Expected a number but was '" +
					urlDepthString + "'", e);
		}
		parameters.setUrlDepth(urlDepth);

		// Extract behavior ID after last colon
		final String behaviourId = pathComponents[pathComponents.length - 2];
		parameters.setBehaviorId(behaviourId.length() != 0 ? behaviourId : null);

		// Extract interface name after second-to-last colon
		final String interfaceName = pathComponents[pathComponents.length - 3];
		parameters.setInterfaceName(interfaceName.length() != 0
				? interfaceName
				: IRedirectListener.INTERFACE.getName());

		// Component path is everything after pageMapName and before version
		final int start = pageMapName.length() + 1;
		final int end = interfaceParameter.length() - behaviourId.length() -
				interfaceName.length() - versionNumberString.length() - urlDepthString.length() - 4;
		final String componentPath = interfaceParameter.substring(start, end);
		parameters.setComponentPath(componentPath);
	}

