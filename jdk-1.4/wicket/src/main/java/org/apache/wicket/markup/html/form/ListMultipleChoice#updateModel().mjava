	/**
	 * If the model object exists, it is assumed to be a Collection, and it is modified in-place.
	 * Then {@link Model#setObject(Object)} is called with the same instance: it allows the Model to
	 * be notified of changes even when {@link Model#getObject()} returns a different
	 * {@link Collection} at every invocation.
	 * 
	 * @see FormComponent#updateModel()
	 * @throws UnsupportedOperationException
	 *             if the model object Collection cannot be modified
	 */
	public void updateModel()
	{
		Collection selectedValues = (Collection)getModelObject();
		if (selectedValues != null)
		{
			modelChanging();
			selectedValues.clear();
			final Collection converted = (Collection)getConvertedInput();
			if (converted != null)
			{
				selectedValues.addAll(converted);
			}
			modelChanged();
			getModel().setObject(selectedValues);
		}
		else
		{
			selectedValues = (Collection)getConvertedInput();
			modelChanging();
			getModel().setObject(selectedValues);
			modelChanged();
		}
	}

