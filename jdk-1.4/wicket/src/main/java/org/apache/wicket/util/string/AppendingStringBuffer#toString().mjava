	/**
	 * Converts to a string representing the data in this AppendingStringBuffer. A new
	 * <code>String</code> object is allocated and initialized to contain the
	 * character sequence currently represented by this string buffer. This
	 * <code>String</code> is then returned. Subsequent changes to the string
	 * buffer do not affect the contents of the <code>String</code>.
	 * <p>
	 * Implementation advice: This method can be coded so as to create a new
	 * <code>String</code> object without allocating new memory to hold a copy
	 * of the character sequence. Instead, the string can share the memory used
	 * by the string buffer. Any subsequent operation that alters the content or
	 * capacity of the string buffer must then make a copy of the internal
	 * buffer at that time. This strategy is effective for reducing the amount
	 * of memory allocated by a string concatenation operation when it is
	 * implemented using a string buffer.
	 * 
	 * @return a string representation of the string buffer.
	 */
	public String toString()
	{
		return new String(this.value, 0, count);
	}

