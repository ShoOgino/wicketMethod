	/**
	 * @see javax.servlet.Filter#doFilter(javax.servlet.ServletRequest,
	 *      javax.servlet.ServletResponse, javax.servlet.FilterChain)
	 */
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
		throws IOException, ServletException
	{
		HttpServletRequest httpServletRequest;
		HttpServletResponse httpServletResponse;

		boolean inPortletContext = false;
		if (filterPortletContext != null)
		{
			FilterRequestContext filterRequestContext = new FilterRequestContext(
				(HttpServletRequest)request, (HttpServletResponse)response);
			inPortletContext = filterPortletContext.setupFilter(getFilterConfig(),
				filterRequestContext, getFilterPath((HttpServletRequest)request));
			httpServletRequest = filterRequestContext.getRequest();
			httpServletResponse = filterRequestContext.getResponse();
		}
		else
		{
			httpServletRequest = (HttpServletRequest)request;
			httpServletResponse = (HttpServletResponse)response;
		}

		if (portletOnlyFilter && !inPortletContext)
		{
			chain.doFilter(request, response);
			return;
		}

		String relativePath = getRelativePath(httpServletRequest);

		if (isWicketRequest(relativePath))
		{
			try
			{
				// Set the webapplication for this thread
				Application.set(webApplication);

				long lastModified = getLastModified(httpServletRequest);
				if (lastModified == -1)
				{
					// servlet doesn't support if-modified-since, no reason
					// to go through further expensive logic
					if (doGet(httpServletRequest, httpServletResponse) == false)
					{
						chain.doFilter(request, response);
					}
				}
				else
				{
					long ifModifiedSince;
					try
					{
						ifModifiedSince = httpServletRequest.getDateHeader("If-Modified-Since");
					}
					catch (IllegalArgumentException e)
					{
						log.warn("Invalid If-Modified-Since header", e);
						ifModifiedSince = -1;
					}
					if (ifModifiedSince < (lastModified / 1000 * 1000))
					{
						// If the servlet mod time is later, call doGet()
						// Round down to the nearest second for a proper compare
						// A ifModifiedSince of -1 will always be less
						maybeSetLastModified(httpServletResponse, lastModified);
						doGet(httpServletRequest, httpServletResponse);
					}
					else
					{
						httpServletResponse.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
					}
				}
			}
			finally
			{
				// always unset the application thread local
				Application.unset();
				RequestContext.unset();
			}
		}
		else
		{
			chain.doFilter(request, response);
		}
	}

