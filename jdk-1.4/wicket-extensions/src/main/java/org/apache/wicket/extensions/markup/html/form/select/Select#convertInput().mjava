	protected void convertInput()
	{
		/*
		 * the input contains an array of full path of the selected option
		 * components unless nothing was selected in which case the input
		 * contains null
		 */
		String[] paths = getInputAsArray();

		if (paths == null || paths.length == 0)
		{
			setConvertedInput(null);
			return;
		}

		List converted = new ArrayList(paths.length);

		/*
		 * if the input is null we do not need to do anything since the model
		 * collection has already been cleared
		 */
		for (int i = 0; i < paths.length; i++)
		{
			String path = paths[i];

			/*
			 * option component path sans select component path = relative path
			 * from group to option since we know the option is child of select
			 */
			path = path.substring(getPath().length() + 1);

			// retrieve the selected option component
			SelectOption option = (SelectOption)get(path);

			if (option == null)
			{
				throw new WicketRuntimeException(
						"submitted http post value ["
								+ paths.toString()
								+ "] for SelectOption component ["
								+ getPath()
								+ "] contains an illegal relative path element ["
								+ path
								+ "] which does not point to an SelectOption component. Due to this the Select component cannot resolve the selected SelectOption component pointed to by the illegal value. A possible reason is that component hierarchy changed between rendering and form submission.");
			}

			converted.add(option.getModelObject());
		}

		setConvertedInput(converted);
	}

