	/**
	 * @see org.apache.wicket.markup.html.IHeaderContributor#renderHead(org.apache.wicket.markup.html.IHeaderResponse)
	 */
	public void renderHead(IHeaderResponse response)
	{
		// add YUI contributions
		// NOTE JavascriptResourceReference takes care of stripping comments
		// when in deployment (production) mode
		response
				.renderJavascriptReference(new JavascriptResourceReference(YuiLib.class, "yahoo.js"));
		response
				.renderJavascriptReference(new JavascriptResourceReference(YuiLib.class, "event.js"));
		response.renderJavascriptReference(new JavascriptResourceReference(YuiLib.class, "dom.js"));
		response.renderJavascriptReference(new JavascriptResourceReference(DatePicker.class,
				"calendar.js"));
		response.renderCSSReference(new CompressedResourceReference(DatePicker.class,
				"assets/calendar.css"));
		response.renderJavascriptReference(new JavascriptResourceReference(DatePicker.class,
				"wicket-date.js"));

		// variables for the initialization script
		Map variables = new HashMap();
		String widgetId = getComponentMarkupId();
		variables.put("widgetId", widgetId);
		variables.put("datePattern", getDatePattern());
		// print out the initialization properties
		Properties p = new Properties();
		configureWidgetProperties(p);
		// ${calendarInit}
		StringBuffer calendarInit = new StringBuffer();
		for (Iterator i = p.entrySet().iterator(); i.hasNext();)
		{
			Entry entry = (Entry)i.next();
			calendarInit.append(entry.getKey());
			Object value = entry.getValue();
			if (value instanceof CharSequence)
			{
				calendarInit.append(":\"");
				calendarInit.append(value);
				calendarInit.append("\"");
			}
			else if (value instanceof CharSequence[])
			{
				calendarInit.append(":[");
				CharSequence[] valueArray = (CharSequence[])value;
				for (int j = 0; j < valueArray.length; j++)
				{
					CharSequence tmpValue = valueArray[j];
					calendarInit.append("\"");
					calendarInit.append(tmpValue);
					calendarInit.append("\"");
					if (j < valueArray.length - 1)
					{
						calendarInit.append(",");
					}
				}
				calendarInit.append("]");
			}
			else
			{
				calendarInit.append(":");
				calendarInit.append(value);
			}
			if (i.hasNext())
			{
				calendarInit.append(",");
			}
		}
		variables.put("calendarInit", calendarInit.toString());

		// render initialization script with the variables interpolated
		TextTemplateHeaderContributor.forJavaScript(DatePicker.class, "DatePicker.js",
				Model.valueOf(variables)).renderHead(response);

		// Initialize the calendar.
		StringBuffer initBuffer = new StringBuffer();
		initBuffer.append("init");
		initBuffer.append(widgetId + "DpJs");
		initBuffer.append("();");
		response.renderOnLoadJavascript(initBuffer.toString());
	}

