	/**
	 * @see org.apache.wicket.markup.html.IHeaderContributor#renderHead(org.apache.wicket.markup.html.IHeaderResponse)
	 */
	public void renderHead(IHeaderResponse response)
	{
		// add YUILoader
		response.renderJavascriptReference(new JavascriptResourceReference(YuiLib.class,
				"yuiloader-beta.js"));

		// variables for the initialization script
		Map variables = new HashMap();
		String widgetId = getEscapedComponentMarkupId();
		variables.put("componentId", getComponentMarkupId());
		variables.put("widgetId", widgetId);
		variables.put("datePattern", getDatePattern());
		variables.put("fireChangeEvent", Boolean.valueOf(notifyComponentOnDateSelected()));
		variables.put("alignWithIcon", Boolean.valueOf(alignWithIcon()));
		// variables for YUILoader
		variables.put("pathToWicketDate", RequestCycle.get().urlFor(
				new JavascriptResourceReference(DatePicker.class, "wicket-date.js")));
		variables.put("basePath", RequestCycle.get().urlFor(
				new JavascriptResourceReference(YuiLib.class, "")));

		// print out the initialization properties
		Properties p = new Properties();
		configure(p);

		// ${calendarInit}
		StringBuffer calendarInit = new StringBuffer();
		for (Iterator i = p.entrySet().iterator(); i.hasNext();)
		{
			Entry entry = (Entry)i.next();
			calendarInit.append(entry.getKey());
			Object value = entry.getValue();
			if (value instanceof CharSequence)
			{
				calendarInit.append(":\"");
				calendarInit.append(Strings.toEscapedUnicode(value.toString()));
				calendarInit.append("\"");
			}
			else if (value instanceof CharSequence[])
			{
				calendarInit.append(":[");
				CharSequence[] valueArray = (CharSequence[])value;
				for (int j = 0; j < valueArray.length; j++)
				{
					CharSequence tmpValue = valueArray[j];
					if (j > 0)
					{
						calendarInit.append(",");
					}
					if (tmpValue != null)
					{
						calendarInit.append("\"");
						calendarInit.append(Strings.toEscapedUnicode(tmpValue.toString()));
						calendarInit.append("\"");
					}
				}
				calendarInit.append("]");
			}
			else
			{
				calendarInit.append(":");
				calendarInit.append(Strings.toEscapedUnicode(String.valueOf(value)));
			}
			if (i.hasNext())
			{
				calendarInit.append(",");
			}
		}
		variables.put("calendarInit", calendarInit.toString());

		// render initialization script with the variables interpolated
		TextTemplate datePickerJs = new PackagedTextTemplate(DatePicker.class, "DatePicker.js");
		datePickerJs.interpolate(variables);
		response.renderOnDomReadyJavascript(datePickerJs.asString());
	}

