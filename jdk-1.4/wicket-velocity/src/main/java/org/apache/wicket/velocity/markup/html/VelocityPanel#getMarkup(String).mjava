	/**
	 * @param evaluatedTemplate
	 *            the evaluated velocity template
	 * @return the {@link Markup} of the param <code>evaluatedTemplate</code>
	 */
	private Markup getMarkup(String evaluatedTemplate)
	{
		if (!parseGeneratedMarkup())
		{
			return Markup.NO_MARKUP;
		}
		// now parse the velocity merge result
		Markup markup = null;
		try
		{
			MarkupParser parser = getApplication().getMarkupSettings().getMarkupParserFactory()
					.newMarkupParser(
							new MarkupResourceStream(new StringResourceStream(evaluatedTemplate)));
			markup = parser.parse();
		}
		catch (ResourceStreamNotFoundException e)
		{
			throw new RuntimeException("Could not parse resulting markup", e);
		}
		catch (IOException e)
		{
			onException(e, currentMarkupStream, currentOpenTag);
		}
		return markup;
	}

