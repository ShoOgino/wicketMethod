		/**
		 * Returns the contents of the file loaded from the classpath.
		 * 
		 * @return the contents of the file identified by name
		 */
		public Object getObject()
		{
			// name contains the name of the selected file
			if (Strings.isEmpty(name))
			{
				return "";
			}
			BufferedReader br = null;
			try
			{
				StringBuffer sb = new StringBuffer();

				InputStream resourceAsStream = page.getResourceAsStream(name);
				if (resourceAsStream == null)
				{
					return "Unable to read the source for " + name;
				}
				br = new BufferedReader(new InputStreamReader(resourceAsStream));

				while (br.ready())
				{
					sb.append(br.readLine());
					sb.append("\n");
				}
				return sb.toString();
			}
			catch (IOException e)
			{
				log.error("Unable to read resource stream for: " + name + "; Page="
						+ page.toString(), e);
				return "";
			}
			finally
			{
				IOUtils.closeQuietly(br);
			}
		}		

