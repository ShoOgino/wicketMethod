	@Override
	protected void init()
	{
		// Hello World as a Static Page
		mount(new URIRequestTargetUrlCodingStrategy("/docs")
		{
			@Override
			public IRequestTarget decode(RequestParameters requestParameters)
			{
				String path = "/staticpages/" + getURI(requestParameters);
				return new WebExternalResourceRequestTarget(path);
			}
		});

		// Hello World as a Static Page with XSLT layout
		mount(new URIRequestTargetUrlCodingStrategy("/xsldocs")
		{
			@Override
			public IRequestTarget decode(RequestParameters requestParameters)
			{
				String path = "/staticpages/" + getURI(requestParameters);
				IResourceStream xslStream = new PackageResourceStream(Application.class,
						"layout.xsl");
				IResourceStream docStream = new WebExternalResourceStream(path);
				return new ResourceStreamRequestTarget(new XSLTResourceStream(xslStream, docStream));
			}
		});

		// Passing URI to a Wicket page
		mount(new URIRequestTargetUrlCodingStrategy("/pages")
		{
			@Override
			public IRequestTarget decode(RequestParameters requestParameters)
			{
				final ValueMap requestParams = decodeParameters(requestParameters);
				final StringResponse emailResponse = new StringResponse();
				final WebResponse originalResponse = (WebResponse)RequestCycle.get().getResponse();
				if (requestParams.getString("email") != null) {
					RequestCycle.get().setResponse(emailResponse);
				}
				PageParameters params = new PageParameters();
				params.put("uri", requestParams.get(URI));
				return new BookmarkablePageRequestTarget(Page.class, params) {
					/**
					 * @see org.apache.wicket.request.target.component.BookmarkablePageRequestTarget#respond(org.apache.wicket.RequestCycle)
					 */
					@Override
					public void respond(RequestCycle requestCycle)
					{
						super.respond(requestCycle);
						if (requestParams.getString("email") != null) {
							// Here send the email instead of dumping it to stdout!
							System.out.println(emailResponse.toString());
							RequestCycle.get().setResponse(originalResponse);
							RequestCycle.get().setRequestTarget(new BookmarkablePageRequestTarget(Sent.class));
						}
					}
				};
			}
		});
	}

