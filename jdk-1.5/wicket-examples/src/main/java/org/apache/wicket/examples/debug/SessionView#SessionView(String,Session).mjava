	/**
	 * Constructor.
	 * 
	 * @param id
	 *            See Component
	 * @see Component#Component(String)
	 */
	public SessionView(final String id, final Session session)
	{
		super(id);

		// Basic attributes
		add(new Label("id", session.getId()));
		add(new Label("locale", session.getLocale().toString()));
		add(new Label("style", session.getStyle() == null ? "[None]" : session.getStyle()));
		add(new Label("size", new Model<Bytes>()
		{
			private static final long serialVersionUID = 1L;

			@Override
			public Bytes getObject()
			{
				return Bytes.bytes(Objects.sizeof(session));
			}
		}));
		add(new Label("totalSize", new Model<Bytes>()
		{
			private static final long serialVersionUID = 1L;

			@Override
			public Bytes getObject()
			{
				return Bytes.bytes(session.getSizeInBytes());
			}
		}));

		// Get pagemaps
		final List pagemaps = session.getPageMaps();

		// Create the table containing the list the components
		add(new ListView("pagemaps", pagemaps)
		{
			private static final long serialVersionUID = 1L;

			/**
			 * Populate the table with Wicket elements
			 */
			@Override
			protected void populateItem(final ListItem listItem)
			{
				IPageMap p = (IPageMap)listItem.getModelObject();
				listItem.add(new PageMapView("pagemap", p));
			}
		});
	}

