	/**
	 * https://issues.apache.org/jira/browse/WICKET-5669
	 */
	@Test
	void parameterTypes()
	{
		PageParameters p = new PageParameters()
			.add("pathName1", "pathValue1", INamedParameters.Type.PATH)
			.add("pathName1", "pathValue1.1", INamedParameters.Type.PATH)
			.add("pathName2", "pathValue2", INamedParameters.Type.PATH)
			.add("queryName1", "queryValue1", INamedParameters.Type.QUERY_STRING)
			.add("queryName1", "queryValue1.1", INamedParameters.Type.QUERY_STRING)
			.add("queryName2", "queryValue2", INamedParameters.Type.QUERY_STRING)
			.add("manualName1", "manualValue1", INamedParameters.Type.MANUAL)
			.add("manualName1", "manualValue1.1", INamedParameters.Type.MANUAL)
			.add("manualName2", "manualValue2", INamedParameters.Type.MANUAL);

		{
			// PATH
			assertEquals(3, p.getAllNamedByType(INamedParameters.Type.PATH).size());

			List<StringValue> pathName1Values = p.getValues("pathName1");
			assertEquals(2, pathName1Values.size());
			assertEquals("pathValue1", pathName1Values.get(0).toString());
			assertEquals("pathValue1.1", pathName1Values.get(1).toString());

			List<StringValue> pathName2Values = p.getValues("pathName2");
			assertEquals(1, pathName2Values.size());
			assertEquals("pathValue2", pathName2Values.get(0).toString());
		}

		{
			// QUERY STRING
			assertEquals(3, p.getAllNamedByType(INamedParameters.Type.QUERY_STRING).size());

			List<StringValue> queryName1Values = p.getValues("queryName1");
			assertEquals(2, queryName1Values.size());
			assertEquals("queryValue1", queryName1Values.get(0).toString());
			assertEquals("queryValue1.1", queryName1Values.get(1).toString());

			List<StringValue> queryName2Values = p.getValues("queryName2");
			assertEquals(1, queryName2Values.size());
			assertEquals("queryValue2", queryName2Values.get(0).toString());
		}

		{
			// MANUAL
			assertEquals(3, p.getAllNamedByType(INamedParameters.Type.MANUAL).size());

			List<StringValue> manualName1Values = p.getValues("manualName1");
			assertEquals(2, manualName1Values.size());
			assertEquals("manualValue1", manualName1Values.get(0).toString());
			assertEquals("manualValue1.1", manualName1Values.get(1).toString());

			List<StringValue> manualName2Values = p.getValues("manualName2");
			assertEquals(1, manualName2Values.size());
			assertEquals("manualValue2", manualName2Values.get(0).toString());
		}
	}

