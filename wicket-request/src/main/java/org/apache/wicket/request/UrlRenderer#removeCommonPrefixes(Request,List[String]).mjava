	/**
	 * Removes common prefixes like empty first segment, context path and filter path
	 *
	 * @param request
	 *      the current web request
	 * @param segments
	 *      the segments to clean
	 */
	private void removeCommonPrefixes(Request request, List<String> segments)
	{
		if (segments.isEmpty())
		{
			return;
		}

		if ("".equals(segments.get(0)))
		{
			LOG.debug("Removing an empty first segment from '{}'", segments);
			segments.remove(0);

			// try to remove context/filter path only if the Url starts with '/',
			//  i.e. has an empty segment in the beginning
			String contextPath = request.getContextPath();
			if (contextPath != null && segments.isEmpty() == false)
			{
				if (contextPath.equals(UrlUtils.normalizePath(segments.get(0))))
				{
					LOG.debug("Removing the context path '{}' from '{}'", contextPath, segments);
					segments.remove(0);
				}
			}

			String filterPath = request.getFilterPath();
			if (filterPath != null && segments.isEmpty() == false)
			{
				if (filterPath.equals(UrlUtils.normalizePath(segments.get(0))))
				{
					LOG.debug("Removing the filter path '{}' from '{}'", filterPath, segments);
					segments.remove(0);
				}
			}
		}
	}

