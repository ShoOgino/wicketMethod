	/**
	 * Try to reduce url by eliminating '..' and '.' from the path where appropriate (this is
	 * somehow similar to {@link java.io.File#getCanonicalPath()}). Either by different / unexpected
	 * browser behavior or by malicious attacks it can happen that these kind of redundant urls are
	 * processed by wicket. These urls can cause some trouble when mapping the request.
	 * <p/>
	 * <strong>example:</strong>
	 * 
	 * the url
	 * 
	 * <pre>
	 * /example/..;jsessionid=234792?0
	 * </pre>
	 * 
	 * will not get normalized by the browser due to the ';jsessionid' string that gets appended by
	 * the servlet container. After wicket strips the jsessionid part the resulting internal url
	 * will be
	 * 
	 * <pre>
	 * /example/..
	 * </pre>
	 * 
	 * instead of
	 * 
	 * <pre>
	 * /
	 * </pre>
	 * 
	 * <p/>
	 * 
	 * This code correlates to <a
	 * href="https://issues.apache.org/jira/browse/WICKET-4303">WICKET-4303</a>
	 * 
	 * @return canonical url
	 */
	public Url canonical()
	{
		Url url = new Url(this);
		url.segments.clear();

		for (int i = 0; i < segments.size(); i++)
		{
			final String segment = segments.get(i);

			// drop '.' from path
			if (".".equals(segment))
			{
				// skip
			}
			else if ("..".equals(segment) && url.segments.isEmpty() == false)
			{
				url.segments.remove(url.segments.size() - 1);
			}
			// skip segment if following segment is a '..'
			else if ((i + 1) < segments.size() && "..".equals(segments.get(i + 1)))
			{
				i++;
			}
			else
			{
				url.segments.add(segment);
			}
		}
		return url;
	}

