	/**
	 * Should this property make the owning component required.
	 * 
	 * @return <code>true</code> if required
	 * 
	 * @see BeanValidationContext#isRequiredConstraint(ConstraintDescriptor)
	 */
	protected boolean isRequired()
	{
		BeanValidationContext config = BeanValidationConfiguration.get();

		HashSet<Class<?>> groups = new HashSet<Class<?>>(Arrays.asList(getGroups()));

		Iterator<ConstraintDescriptor<?>> it = new ConstraintIterator(config.getValidator(), getProperty());
		while (it.hasNext())
		{
			ConstraintDescriptor<?> constraint = it.next();
			
			if (config.isRequiredConstraint(constraint))
			{
				if (canApplyToDefaultGroup(constraint) && groups.size() == 0)
				{
					return true;
				}
		
				for (Class<?> constraintGroup : constraint.getGroups())
				{
					if (groups.contains(constraintGroup))
					{
						return true;
					}
				}
			}
		}

		return false;
	}

