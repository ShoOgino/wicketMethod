	/**
	 * 
	 */
	public ExamplePortlet()
	{
		// This model references the page's message property and is
		// shared by the label and form component
		PropertyModel messageModel = new PropertyModel(this, "message");

		// The label displays the currently set message
		add(new Label("msg", messageModel));

		// Add a form to change the message. We don't need to do anything
		// else with this form as the shared model is automatically updated
		// on form submits
		Form form = new Form("form")
		{

			protected void onSubmit()
			{
				log.info(hashCode() + " : " + this + " Form.onSubmit()");
			}

		};
		form.add(new TextField("msgInput", messageModel));

		add(new Link("link")
		{
			public void onClick()
			{
				log.info("link clicked");
				message = "Link clicked!";
			}
		});

		add(form);
		add(new Link("link2")
		{

			public void onClick()
			{
				setResponsePage(new ExamplePortlet2(ExamplePortlet.this));
			}
		});
		
		add(new Image("image",new ResourceReference(ExamplePortlet.class,"wicket-logo.png")));
		/*
		add(new Image("image", new RenderedDynamicImageResource(100, 100)
		{
			protected boolean render(Graphics2D graphics)
			{
				// Compute random size for circle
				final Random random = new Random();
				int dx = Math.abs(10 + random.nextInt(80));
				int dy = Math.abs(10 + random.nextInt(80));
				int x = Math.abs(random.nextInt(100 - dx));
				int y = Math.abs(random.nextInt(100 - dy));

				// Draw circle with thick stroke width
				graphics.setStroke(new BasicStroke(5));
				graphics.drawOval(x, y, dx, dy);
				return true;
			}
		}));
		*/
	}

