	/**
	 * @see wicket.authorization.IAuthorizationStrategy#authorizeAction(wicket.Component,
	 *      wicket.authorization.Action)
	 */
	public boolean authorizeAction(Component component, Action action)
	{
		// check for a single action
		AuthorizedAction annotAction = component.getClass().getAnnotation(AuthorizedAction.class);
		if (annotAction != null)
		{
			if (annotAction.action().equals(action.toString()))
			{
				if (!hasAny(annotAction.roles()))
				{
					return false;
				}
			}
		}

		// check for multiple actions
		AuthorizedActions annotActions = component.getClass()
				.getAnnotation(AuthorizedActions.class);
		if (annotActions != null)
		{
			for (AuthorizedAction a : annotActions.actions())
			{
				if (a.action().equals(action.toString()))
				{
					if (!hasAny(a.roles()))
					{
						return false;
					}
				}
			}
		}

		return true;
	}

