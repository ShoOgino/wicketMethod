	/**
	 * @see wicket.authorization.IAuthorizationStrategy#authorizeAction(wicket.Component,
	 *      wicket.authorization.Action)
	 */
	public boolean authorizeAction(Component component, Action action)
	{
		// check for a single action
		final AuthorizedAction authorizedAction = component.getClass().getAnnotation(AuthorizedAction.class);
		if (authorizedAction != null)
		{
			if (authorizedAction.action().equals(action.toString()))
			{
				if (!hasAny(toSet(authorizedAction.roles())))
				{
					return false;
				}
			}
		}

		// check for multiple actions
		AuthorizedActions authorizedActions = component.getClass()
				.getAnnotation(AuthorizedActions.class);
		if (authorizedActions != null)
		{
			for (AuthorizedAction a : authorizedActions.actions())
			{
				if (a.action().equals(action.toString()))
				{
					if (!hasAny(toSet(a.roles())))
					{
						return false;
					}
				}
			}
		}

		return true;
	}

