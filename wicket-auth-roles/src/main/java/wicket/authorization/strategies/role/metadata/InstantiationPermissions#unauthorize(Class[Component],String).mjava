	/**
	 * Removes permission for the given role to instantiate the given class.
	 * 
	 * @param componentClass
	 *            The class
	 * @param role
	 *            The role to deny
	 */
	public final void unauthorize(final Class<Component> componentClass, final String role)
	{
		if (componentClass == null)
		{
			throw new IllegalArgumentException("Argument componentClass cannot be null");
		}

		if (role == null)
		{
			throw new IllegalArgumentException("Argument role cannot be null");
		}

		final Set<String> roles = rolesForComponentClass.get(componentClass);
		if (roles != null)
		{
			roles.remove(role);
		}

		// If we removed the last authorized role, we authorize the empty role
		// so that removing authorization can't suddenly open something up to
		// everyone.
		if (roles.size() == 0)
		{
			roles.add(MetaDataRoleAuthorizationStrategy.NO_ROLE);
		}
	}

