	/**
	 * @see org.apache.wicket.authorization.IAuthorizationStrategy#isInstantiationAuthorized(java.lang.Class)
	 */
	@Override
	public <T extends IRequestableComponent> boolean isInstantiationAuthorized(
		final Class<T> componentClass)
	{
		// We are authorized unless we are found not to be
		boolean authorized = true;

		// Check class annotation first because it is more specific than package annotation
		final AuthorizeInstantiation classAnnotation = componentClass.getAnnotation(AuthorizeInstantiation.class);
		if (classAnnotation != null)
		{
			authorized = check(classAnnotation);
		}
		else
		{
			// Check package annotation if there is no one on the the class
			final Package componentPackage = componentClass.getPackage();
			if (componentPackage != null)
			{
				final AuthorizeInstantiation packageAnnotation = componentPackage.getAnnotation(AuthorizeInstantiation.class);
				if (packageAnnotation != null)
				{
					authorized = check(packageAnnotation);
				}
			}
		}

		// Check for multiple instantiations
		final AuthorizeInstantiations authorizeInstantiationsAnnotation = componentClass
			.getAnnotation(AuthorizeInstantiations.class);
		if (authorizeInstantiationsAnnotation != null)
		{
			for (final AuthorizeInstantiation authorizeInstantiationAnnotation : authorizeInstantiationsAnnotation
				.ruleset())
			{
				if (!check(authorizeInstantiationAnnotation))
				{
					authorized = false;
				}
			}
		}

		return authorized;
	}

